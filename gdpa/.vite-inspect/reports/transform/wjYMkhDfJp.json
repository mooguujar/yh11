{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/unescape.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n",
      "start": 1714699768546,
      "end": 1714699768569,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768569,
      "end": 1714699768569,
      "order": "normal"
    }
  ]
}
