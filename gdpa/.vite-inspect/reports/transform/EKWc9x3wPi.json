{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/mapKeys.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;\n",
      "start": 1714699768446,
      "end": 1714699768456,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;\n",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768456,
      "end": 1714699768456,
      "order": "normal"
    }
  ]
}
