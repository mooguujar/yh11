{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/pages/Mine/message.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9949fade\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"nav-bar\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"arrow-right-gray arrow-back\" }, null, -1 /* HOISTED */))\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = { class: \"item-content\" }\nconst _hoisted_6 = { class: \"item-title flex items-center\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n}\nconst _hoisted_8 = { class: \"item-cdesc\" }\nconst _hoisted_9 = { class: \"item-add_time\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n}\nconst _hoisted_11 = [\"src\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-no-data text-center\" }, \"暂无数据\", -1 /* HOISTED */))\nconst _hoisted_13 = { class: \"confirm-sheet-container\" }\n\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from '@/apis/article'\nimport iconMessage from '@/assets/images/common/message-gray.png'\nimport noData from '@/assets/images/common/noData.png'\nimport verified from '@/assets/images/common/verified.png'\nimport { IMessage } from '@/store/types/article'\nimport mitt from '@/utils/mitt'\nimport { showToast } from 'vant'\nimport { Interceptor } from 'vant/es/utils'\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\ntype TMessage = Partial<IMessage>\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'message',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst messageData = ref<TMessage[]>([])\n\n// loading状态\nconst isLoading = ref(false)\n// 底部按钮控制视图\nconst showController = ref(false)\n// 删除按钮禁用状态\nconst isDisabledDelete = ref(true)\n// 删除确认对话框\nconst showConfirmSheet = reactive({ type: 1, value: false })\n// 全选按钮name\nconst btnAllSelectName = ref('全选')\n// 删除目标的ids\nconst _ids = ref('')\n// 当前页数\nconst page = ref(1)\n// 列表内容loading\nconst listLoading = ref(false)\n// 全部内容加载完成\nconst finished = ref(false)\n// 是否正在刷新\nconst isRefreshing = ref(false)\n\nconst onLoad = () => {\n  getUserMessageList('load-more')\n}\n\n// 获取所有ids\nconst getAllMessageIds = (type: string) => {\n  _ids.value = messageData.value.reduce((prev: string, curr: TMessage) => {\n    if (\n      (type === 'checked' && curr.checked) ||\n      (type === 'read' && curr.checked && !curr.is_read)\n    ) {\n      return (prev !== '' ? prev + ',' : '') + (curr.id?.toString() || '')\n    }\n    return prev\n  }, '')\n\n  return _ids.value\n}\n// 删除消息\nconst onDelMessage = async () => {\n  // 由底部删除按钮触发时， 更新所有选中消息的ids\n  if (showConfirmSheet.type === 2) {\n    getAllMessageIds('checked')\n  }\n  const res = await userMessageDelApi({\n    ids: _ids.value\n  })\n\n  if (res) {\n    if (showConfirmSheet.type === 2) {\n      onNavBtnClick()\n    }\n    showToast({\n      message: '删除成功',\n      icon: verified,\n      iconSize: '48px'\n    })\n    messageData.value = messageData.value.filter(item => !_ids.value.includes(item.id!.toString()))\n\n    // 删除完后，重置分页请求\n    if (!messageData.value.length) {\n      page.value = 1\n      getUserMessageList()\n    }\n  }\n}\n\n// 删除确认对话框选项\nconst actions = [{ name: '确认', callback: onDelMessage }]\nconst onCancelConfirmSheet = () => {\n  _ids.value = ''\n}\n\nconst onRefreshChange = ({ status, distance }: { status: string; distance: number }) => {\n  // window.log('下拉信息', status, distance)\n}\n\n// 获取站内通知——消息列表\nconst getUserMessageList = async (type = '') => {\n  try {\n    if (isRefreshing.value) return\n\n    // 刷新重置页数\n    if (type === 'refresh') {\n      page.value = 1\n      isLoading.value = true\n      isRefreshing.value = true\n    } else if (type === 'load-more') {\n      listLoading.value = page.value !== 1 && !!messageData.value.length\n    } else {\n      isLoading.value = true\n    }\n\n    finished.value = false\n\n    const res = await userMessageListApi({ page: page.value, limit: 10 })\n\n    if (!res.count) {\n      messageData.value = []\n      return\n    }\n\n    // messageData.value.forEach(item => (item.checked = 0))\n    const list = res.list.map(item => {\n      item.checked = 0\n      return item\n    })\n\n    if (type === 'refresh') {\n      messageData.value = list\n    } else {\n      messageData.value.push(...list)\n    }\n\n    if (messageData.value.length < res.count) {\n      page.value++\n    }\n    if (messageData.value.length === res.count) {\n      finished.value = true\n    }\n\n    window.log('消息列表', res)\n  } catch (error) {\n    console.error(error)\n  } finally {\n    isLoading.value = false\n    listLoading.value = false\n    isRefreshing.value = false\n  }\n}\n\n// 是否存在未读消息\nconst hasUnread = computed(() => messageData.value.some(item => !item.is_read))\n// navBar右侧文字\nconst navBarRightText = computed(() => {\n  return showController.value ? '完成' : '操作'\n})\n// 是否已全选\nconst isAllChecked = computed(() => messageData.value.every(item => item.checked))\n// 是否有选中\nconst isSomeChecked = computed(() => messageData.value.some(item => item.checked))\n\nconst onNavBtnClick = () => {\n  if (!messageData.value.length) return\n\n  if (!isDisabledDelete.value) {\n    messageData.value.forEach(item => (item.checked = 0))\n    showController.value = false\n  } else {\n    showController.value = !showController.value\n  }\n}\n// 进入消息详情页\nconst handleClickMessage = (item: TMessage) => {\n  if (showController.value) {\n    item.checked = item.checked === 1 ? 0 : 1\n    return\n  }\n  router.push(`/details/message/${item.id}`)\n}\n\nconst description = ref('您确定要删除这些信息吗？')\n// 左滑删除按钮点击\nconst onDeleteMessage = (ids: string) => {\n  description.value = '您要删除此消息吗？'\n  _ids.value = ids\n}\n\n// position 为关闭时点击的位置\nlet confirmSheetTimer: NodeJS.Timer | undefined\nconst beforeDeleteMessage: Interceptor = ({ position }) => {\n  switch (position) {\n    case 'cell':\n      return true\n    case 'outside':\n      return !showConfirmSheet.value\n    case 'right':\n      return new Promise<boolean>(resolve => {\n        showConfirmSheet.type = 1\n        showConfirmSheet.value = true\n\n        const doCheckConfirmSheet = () => {\n          if (showConfirmSheet.value) {\n            confirmSheetTimer && clearTimeout(confirmSheetTimer)\n            confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0)\n          } else {\n            resolve(true)\n          }\n        }\n        doCheckConfirmSheet()\n      })\n  }\n}\n\n// 已读\nconst onRead = async () => {\n  try {\n    if (!hasUnread.value || !isSomeChecked.value) return\n\n    if (!getAllMessageIds('read')) {\n      getUserMessageList()\n      showController.value = false\n      return\n    }\n\n    const res = await userMessageDetailsApi({\n      ids: _ids.value\n    })\n\n    if (res) {\n      showController.value = false\n      // 去除未读标识\n      messageData.value.forEach(item => {\n        if (_ids.value.includes(item.id!.toString())) {\n          item.is_read = 1\n        }\n      })\n    }\n\n    window.log('全部已读', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\n// 全选按钮点击 全选切换\nconst onBtnAllSelect = () => {\n  if (isAllChecked.value) {\n    messageData.value.forEach(item => (item.checked = 0))\n  } else {\n    messageData.value.forEach(item => (item.checked = 1))\n  }\n}\n// 底部删除按钮点击\nconst onDelete = () => {\n  if (isDisabledDelete.value) return\n\n  description.value = '您确定要删除这些信息吗？'\n  showConfirmSheet.type = 2\n  showConfirmSheet.value = true\n}\n\n// 选择状态改变时，更新相应按钮状态\nwatch(\n  messageData,\n  (value, oldValue) => {\n    let checkedNum = 0\n    messageData.value.forEach(item => {\n      if (item.checked) {\n        checkedNum++\n      }\n    })\n    // 删除按钮状态\n    isDisabledDelete.value = !checkedNum\n    // 全选按钮文字切换\n    btnAllSelectName.value = checkedNum === messageData.value.length ? '取消全选' : '全选'\n  },\n  {\n    deep: true\n  }\n)\n\nonMounted(() => {\n  getUserMessageList()\n  mitt.emit('action-sheet-show')\n})\n\nonBeforeUnmount(() => {\n  confirmSheetTimer && clearTimeout(confirmSheetTimer)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_nav_bar = _resolveComponent(\"nav-bar\")!\n  const _component_van_icon = _resolveComponent(\"van-icon\")!\n  const _component_van_loading = _resolveComponent(\"van-loading\")!\n  const _component_van_button = _resolveComponent(\"van-button\")!\n  const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\")!\n  const _component_van_list = _resolveComponent(\"van-list\")!\n  const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\")!\n  const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_nav_bar, {\n        title: \"消息\",\n        mode: \"white\"\n      }, {\n        left: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _createElementVNode(\"div\", {\n            class: \"btn-text\",\n            onClick: onNavBtnClick\n          }, _toDisplayString(navBarRightText.value), 1 /* TEXT */)\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"message-container\", { 'with-controller': showController.value }])\n    }, [\n      _createVNode(_component_van_pull_refresh, {\n        modelValue: isLoading.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((isLoading).value = $event)),\n        \"success-text\": \"刷新成功\",\n        onRefresh: _cache[2] || (_cache[2] = ($event: any) => (getUserMessageList('refresh'))),\n        onChange: onRefreshChange\n      }, {\n        pulling: _withCtx((props) => [\n          _createVNode(_component_van_icon, {\n            name: \"replay\",\n            size: \"24\",\n            style: _normalizeStyle({ transform: `rotateZ(${(props.distance / 50) * 360}deg)` })\n          }, null, 8 /* PROPS */, [\"style\"])\n        ]),\n        loosing: _withCtx((props) => [\n          _createVNode(_component_van_icon, {\n            name: \"replay\",\n            size: \"24\",\n            style: _normalizeStyle({ transform: `rotateZ(${(props.distance / 50) * 360}deg)` })\n          }, null, 8 /* PROPS */, [\"style\"])\n        ]),\n        loading: _withCtx(() => [\n          _createVNode(_component_van_loading, { size: \"24px\" }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"加载中...\")\n            ]),\n            _: 1 /* STABLE */\n          })\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_van_list, {\n            loading: listLoading.value,\n            \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event: any) => ((listLoading).value = $event)),\n            finished: finished.value,\n            \"immediate-check\": false,\n            \"finished-text\": \"没有更多了\",\n            onLoad: onLoad\n          }, {\n            default: _withCtx(() => [\n              (messageData.value.length && !isLoading.value)\n                ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList(messageData.value, (item, index) => {\n                    return (_openBlock(), _createBlock(_component_van_swipe_cell, {\n                      key: item.id,\n                      \"before-close\": beforeDeleteMessage\n                    }, {\n                      right: _withCtx(() => [\n                        _createVNode(_component_van_button, {\n                          square: \"\",\n                          type: \"danger\",\n                          icon: \"delete-o\",\n                          onClick: ($event: any) => (onDeleteMessage(item.id?.toString() as string))\n                        }, null, 8 /* PROPS */, [\"onClick\"])\n                      ]),\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", {\n                          class: _normalizeClass([\"message-item flex\", { 'message-item-end': index === messageData.value.length - 1 }]),\n                          onClick: ($event: any) => (handleClickMessage(item))\n                        }, [\n                          (showController.value)\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(item.checked ? 'radio-checked' : 'item-radio')\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true),\n                          _createCommentVNode(\" <i class=\\\"message\\\"></i> \"),\n                          _createElementVNode(\"img\", {\n                            src: _unref(iconMessage),\n                            class: \"icon-message\"\n                          }, null, 8 /* PROPS */, _hoisted_4),\n                          _createElementVNode(\"div\", _hoisted_5, [\n                            _createElementVNode(\"div\", _hoisted_6, [\n                              (!item.is_read)\n                                ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7))\n                                : _createCommentVNode(\"v-if\", true),\n                              _createElementVNode(\"div\", null, _toDisplayString(item.title), 1 /* TEXT */)\n                            ]),\n                            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.cdesc), 1 /* TEXT */),\n                            _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.add_time), 1 /* TEXT */)\n                          ])\n                        ], 10 /* CLASS, PROPS */, _hoisted_3)\n                      ]),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */))\n                  }), 128 /* KEYED_FRAGMENT */))\n                : _createCommentVNode(\"v-if\", true)\n            ]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"loading\", \"finished\"]),\n          (!messageData.value.length && !isLoading.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                _createElementVNode(\"img\", { src: _unref(noData) }, null, 8 /* PROPS */, _hoisted_11),\n                _hoisted_12\n              ]))\n            : _createCommentVNode(\"v-if\", true)\n        ]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])\n    ], 2 /* CLASS */),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { 'show-controller': showController.value }])\n    }, [\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-all-readed\",\n        onClick: onBtnAllSelect\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(btnAllSelectName.value), 1 /* TEXT */)\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-all-select\",\n        onClick: onRead\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\" 已读 \")\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-delete\",\n        onClick: onDelete\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\" 删除 \")\n        ]),\n        _: 1 /* STABLE */\n      })\n    ], 2 /* CLASS */),\n    _createCommentVNode(\" 动作面板 \"),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _createVNode(_component_van_action_sheet, {\n        show: showConfirmSheet.value,\n        \"onUpdate:show\": _cache[3] || (_cache[3] = ($event: any) => ((showConfirmSheet.value) = $event)),\n        actions: actions,\n        \"cancel-text\": \"取消\",\n        description: description.value,\n        \"close-on-click-action\": \"\",\n        onCancel: onCancelConfirmSheet,\n        \"lazy-render\": false,\n        class: \"full-w-sheet\"\n      }, null, 8 /* PROPS */, [\"show\", \"description\"])\n    ])\n  ], 64 /* STABLE_FRAGMENT */))\n}\n}\n\n})",
      "start": 1714699769745,
      "end": 1714699769745
    },
    {
      "name": "vite:css",
      "start": 1714699769745,
      "end": 1714699769745,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-9949fade\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"nav-bar\" };\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"i\",\n  { class: \"arrow-right-gray arrow-back\" },\n  null,\n  -1\n  /* HOISTED */\n));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = { class: \"item-content\" };\nconst _hoisted_6 = { class: \"item-title flex items-center\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n};\nconst _hoisted_8 = { class: \"item-cdesc\" };\nconst _hoisted_9 = { class: \"item-add_time\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"text-no-data text-center\" },\n  \"暂无数据\",\n  -1\n  /* HOISTED */\n));\nconst _hoisted_13 = { class: \"confirm-sheet-container\" };\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \"@/apis/article\";\nimport iconMessage from \"@/assets/images/common/message-gray.png\";\nimport noData from \"@/assets/images/common/noData.png\";\nimport verified from \"@/assets/images/common/verified.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"message\",\n  setup(__props) {\n    const router = useRouter();\n    const messageData = ref([]);\n    const isLoading = ref(false);\n    const showController = ref(false);\n    const isDisabledDelete = ref(true);\n    const showConfirmSheet = reactive({ type: 1, value: false });\n    const btnAllSelectName = ref(\"全选\");\n    const _ids = ref(\"\");\n    const page = ref(1);\n    const listLoading = ref(false);\n    const finished = ref(false);\n    const isRefreshing = ref(false);\n    const onLoad = () => {\n      getUserMessageList(\"load-more\");\n    };\n    const getAllMessageIds = (type) => {\n      _ids.value = messageData.value.reduce((prev, curr) => {\n        if (type === \"checked\" && curr.checked || type === \"read\" && curr.checked && !curr.is_read) {\n          return (prev !== \"\" ? prev + \",\" : \"\") + (curr.id?.toString() || \"\");\n        }\n        return prev;\n      }, \"\");\n      return _ids.value;\n    };\n    const onDelMessage = async () => {\n      if (showConfirmSheet.type === 2) {\n        getAllMessageIds(\"checked\");\n      }\n      const res = await userMessageDelApi({\n        ids: _ids.value\n      });\n      if (res) {\n        if (showConfirmSheet.type === 2) {\n          onNavBtnClick();\n        }\n        showToast({\n          message: \"删除成功\",\n          icon: verified,\n          iconSize: \"48px\"\n        });\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\n        if (!messageData.value.length) {\n          page.value = 1;\n          getUserMessageList();\n        }\n      }\n    };\n    const actions = [{ name: \"确认\", callback: onDelMessage }];\n    const onCancelConfirmSheet = () => {\n      _ids.value = \"\";\n    };\n    const onRefreshChange = ({ status, distance }) => {\n    };\n    const getUserMessageList = async (type = \"\") => {\n      try {\n        if (isRefreshing.value)\n          return;\n        if (type === \"refresh\") {\n          page.value = 1;\n          isLoading.value = true;\n          isRefreshing.value = true;\n        } else if (type === \"load-more\") {\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\n        } else {\n          isLoading.value = true;\n        }\n        finished.value = false;\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\n        if (!res.count) {\n          messageData.value = [];\n          return;\n        }\n        const list = res.list.map((item) => {\n          item.checked = 0;\n          return item;\n        });\n        if (type === \"refresh\") {\n          messageData.value = list;\n        } else {\n          messageData.value.push(...list);\n        }\n        if (messageData.value.length < res.count) {\n          page.value++;\n        }\n        if (messageData.value.length === res.count) {\n          finished.value = true;\n        }\n        window.log(\"消息列表\", res);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading.value = false;\n        listLoading.value = false;\n        isRefreshing.value = false;\n      }\n    };\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\n    const navBarRightText = computed(() => {\n      return showController.value ? \"完成\" : \"操作\";\n    });\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\n    const onNavBtnClick = () => {\n      if (!messageData.value.length)\n        return;\n      if (!isDisabledDelete.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n        showController.value = false;\n      } else {\n        showController.value = !showController.value;\n      }\n    };\n    const handleClickMessage = (item) => {\n      if (showController.value) {\n        item.checked = item.checked === 1 ? 0 : 1;\n        return;\n      }\n      router.push(`/details/message/${item.id}`);\n    };\n    const description = ref(\"您确定要删除这些信息吗？\");\n    const onDeleteMessage = (ids) => {\n      description.value = \"您要删除此消息吗？\";\n      _ids.value = ids;\n    };\n    let confirmSheetTimer;\n    const beforeDeleteMessage = ({ position }) => {\n      switch (position) {\n        case \"cell\":\n          return true;\n        case \"outside\":\n          return !showConfirmSheet.value;\n        case \"right\":\n          return new Promise((resolve) => {\n            showConfirmSheet.type = 1;\n            showConfirmSheet.value = true;\n            const doCheckConfirmSheet = () => {\n              if (showConfirmSheet.value) {\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\n              } else {\n                resolve(true);\n              }\n            };\n            doCheckConfirmSheet();\n          });\n      }\n    };\n    const onRead = async () => {\n      try {\n        if (!hasUnread.value || !isSomeChecked.value)\n          return;\n        if (!getAllMessageIds(\"read\")) {\n          getUserMessageList();\n          showController.value = false;\n          return;\n        }\n        const res = await userMessageDetailsApi({\n          ids: _ids.value\n        });\n        if (res) {\n          showController.value = false;\n          messageData.value.forEach((item) => {\n            if (_ids.value.includes(item.id.toString())) {\n              item.is_read = 1;\n            }\n          });\n        }\n        window.log(\"全部已读\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const onBtnAllSelect = () => {\n      if (isAllChecked.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n      } else {\n        messageData.value.forEach((item) => item.checked = 1);\n      }\n    };\n    const onDelete = () => {\n      if (isDisabledDelete.value)\n        return;\n      description.value = \"您确定要删除这些信息吗？\";\n      showConfirmSheet.type = 2;\n      showConfirmSheet.value = true;\n    };\n    watch(\n      messageData,\n      (value, oldValue) => {\n        let checkedNum = 0;\n        messageData.value.forEach((item) => {\n          if (item.checked) {\n            checkedNum++;\n          }\n        });\n        isDisabledDelete.value = !checkedNum;\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \"取消全选\" : \"全选\";\n      },\n      {\n        deep: true\n      }\n    );\n    onMounted(() => {\n      getUserMessageList();\n      mitt.emit(\"action-sheet-show\");\n    });\n    onBeforeUnmount(() => {\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\n    });\n    return (_ctx, _cache) => {\n      const _component_nav_bar = _resolveComponent(\"nav-bar\");\n      const _component_van_icon = _resolveComponent(\"van-icon\");\n      const _component_van_loading = _resolveComponent(\"van-loading\");\n      const _component_van_button = _resolveComponent(\"van-button\");\n      const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\");\n      const _component_van_list = _resolveComponent(\"van-list\");\n      const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\");\n      const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\");\n      return _openBlock(), _createElementBlock(\n        _Fragment,\n        null,\n        [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(_component_nav_bar, {\n              title: \"消息\",\n              mode: \"white\"\n            }, {\n              left: _withCtx(() => [\n                _hoisted_2\n              ]),\n              right: _withCtx(() => [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"btn-text\",\n                    onClick: onNavBtnClick\n                  },\n                  _toDisplayString(navBarRightText.value),\n                  1\n                  /* TEXT */\n                )\n              ]),\n              _: 1\n              /* STABLE */\n            })\n          ]),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"message-container\", { \"with-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_pull_refresh, {\n                modelValue: isLoading.value,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\n                \"success-text\": \"刷新成功\",\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\"refresh\")),\n                onChange: onRefreshChange\n              }, {\n                pulling: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loosing: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loading: _withCtx(() => [\n                  _createVNode(_component_van_loading, { size: \"24px\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"加载中...\")\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  })\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_van_list, {\n                    loading: listLoading.value,\n                    \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\n                    finished: finished.value,\n                    \"immediate-check\": false,\n                    \"finished-text\": \"没有更多了\",\n                    onLoad\n                  }, {\n                    default: _withCtx(() => [\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\n                        _Fragment,\n                        { key: 0 },\n                        _renderList(messageData.value, (item, index) => {\n                          return _openBlock(), _createBlock(\n                            _component_van_swipe_cell,\n                            {\n                              key: item.id,\n                              \"before-close\": beforeDeleteMessage\n                            },\n                            {\n                              right: _withCtx(() => [\n                                _createVNode(_component_van_button, {\n                                  square: \"\",\n                                  type: \"danger\",\n                                  icon: \"delete-o\",\n                                  onClick: ($event) => onDeleteMessage(item.id?.toString())\n                                }, null, 8, [\"onClick\"])\n                              ]),\n                              default: _withCtx(() => [\n                                _createElementVNode(\"div\", {\n                                  class: _normalizeClass([\"message-item flex\", { \"message-item-end\": index === messageData.value.length - 1 }]),\n                                  onClick: ($event) => handleClickMessage(item)\n                                }, [\n                                  showController.value ? (_openBlock(), _createElementBlock(\n                                    \"i\",\n                                    {\n                                      key: 0,\n                                      class: _normalizeClass(item.checked ? \"radio-checked\" : \"item-radio\")\n                                    },\n                                    null,\n                                    2\n                                    /* CLASS */\n                                  )) : _createCommentVNode(\"v-if\", true),\n                                  _createCommentVNode(' <i class=\"message\"></i> '),\n                                  _createElementVNode(\"img\", {\n                                    src: _unref(iconMessage),\n                                    class: \"icon-message\"\n                                  }, null, 8, _hoisted_4),\n                                  _createElementVNode(\"div\", _hoisted_5, [\n                                    _createElementVNode(\"div\", _hoisted_6, [\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true),\n                                      _createElementVNode(\n                                        \"div\",\n                                        null,\n                                        _toDisplayString(item.title),\n                                        1\n                                        /* TEXT */\n                                      )\n                                    ]),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_8,\n                                      _toDisplayString(item.cdesc),\n                                      1\n                                      /* TEXT */\n                                    ),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_9,\n                                      _toDisplayString(item.add_time),\n                                      1\n                                      /* TEXT */\n                                    )\n                                  ])\n                                ], 10, _hoisted_3)\n                              ]),\n                              _: 2\n                              /* DYNAMIC */\n                            },\n                            1024\n                            /* DYNAMIC_SLOTS */\n                          );\n                        }),\n                        128\n                        /* KEYED_FRAGMENT */\n                      )) : _createCommentVNode(\"v-if\", true)\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  }, 8, [\"loading\", \"finished\"]),\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createElementVNode(\"img\", { src: _unref(noData) }, null, 8, _hoisted_11),\n                    _hoisted_12\n                  ])) : _createCommentVNode(\"v-if\", true)\n                ]),\n                _: 1\n                /* STABLE */\n              }, 8, [\"modelValue\"])\n            ],\n            2\n            /* CLASS */\n          ),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { \"show-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-readed\",\n                onClick: onBtnAllSelect\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\n                    _toDisplayString(btnAllSelectName.value),\n                    1\n                    /* TEXT */\n                  )\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-select\",\n                onClick: onRead\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" 已读 \")\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-delete\",\n                onClick: onDelete\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" 删除 \")\n                ]),\n                _: 1\n                /* STABLE */\n              })\n            ],\n            2\n            /* CLASS */\n          ),\n          _createCommentVNode(\" 动作面板 \"),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createVNode(_component_van_action_sheet, {\n              show: showConfirmSheet.value,\n              \"onUpdate:show\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\n              actions,\n              \"cancel-text\": \"取消\",\n              description: description.value,\n              \"close-on-click-action\": \"\",\n              onCancel: onCancelConfirmSheet,\n              \"lazy-render\": false,\n              class: \"full-w-sheet\"\n            }, null, 8, [\"show\", \"description\"])\n          ])\n        ],\n        64\n        /* STABLE_FRAGMENT */\n      );\n    };\n  }\n});\n",
      "start": 1714699769746,
      "end": 1714699770690,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/pages/Mine/message.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9949fade\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"nav-bar\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"arrow-right-gray arrow-back\" }, null, -1 /* HOISTED */))\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = { class: \"item-content\" }\nconst _hoisted_6 = { class: \"item-title flex items-center\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n}\nconst _hoisted_8 = { class: \"item-cdesc\" }\nconst _hoisted_9 = { class: \"item-add_time\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n}\nconst _hoisted_11 = [\"src\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-no-data text-center\" }, \"暂无数据\", -1 /* HOISTED */))\nconst _hoisted_13 = { class: \"confirm-sheet-container\" }\n\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from '@/apis/article'\nimport iconMessage from '@/assets/images/common/message-gray.png'\nimport noData from '@/assets/images/common/noData.png'\nimport verified from '@/assets/images/common/verified.png'\nimport { IMessage } from '@/store/types/article'\nimport mitt from '@/utils/mitt'\nimport { showToast } from 'vant'\nimport { Interceptor } from 'vant/es/utils'\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\ntype TMessage = Partial<IMessage>\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'message',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst messageData = ref<TMessage[]>([])\n\n// loading状态\nconst isLoading = ref(false)\n// 底部按钮控制视图\nconst showController = ref(false)\n// 删除按钮禁用状态\nconst isDisabledDelete = ref(true)\n// 删除确认对话框\nconst showConfirmSheet = reactive({ type: 1, value: false })\n// 全选按钮name\nconst btnAllSelectName = ref('全选')\n// 删除目标的ids\nconst _ids = ref('')\n// 当前页数\nconst page = ref(1)\n// 列表内容loading\nconst listLoading = ref(false)\n// 全部内容加载完成\nconst finished = ref(false)\n// 是否正在刷新\nconst isRefreshing = ref(false)\n\nconst onLoad = () => {\n  getUserMessageList('load-more')\n}\n\n// 获取所有ids\nconst getAllMessageIds = (type: string) => {\n  _ids.value = messageData.value.reduce((prev: string, curr: TMessage) => {\n    if (\n      (type === 'checked' && curr.checked) ||\n      (type === 'read' && curr.checked && !curr.is_read)\n    ) {\n      return (prev !== '' ? prev + ',' : '') + (curr.id?.toString() || '')\n    }\n    return prev\n  }, '')\n\n  return _ids.value\n}\n// 删除消息\nconst onDelMessage = async () => {\n  // 由底部删除按钮触发时， 更新所有选中消息的ids\n  if (showConfirmSheet.type === 2) {\n    getAllMessageIds('checked')\n  }\n  const res = await userMessageDelApi({\n    ids: _ids.value\n  })\n\n  if (res) {\n    if (showConfirmSheet.type === 2) {\n      onNavBtnClick()\n    }\n    showToast({\n      message: '删除成功',\n      icon: verified,\n      iconSize: '48px'\n    })\n    messageData.value = messageData.value.filter(item => !_ids.value.includes(item.id!.toString()))\n\n    // 删除完后，重置分页请求\n    if (!messageData.value.length) {\n      page.value = 1\n      getUserMessageList()\n    }\n  }\n}\n\n// 删除确认对话框选项\nconst actions = [{ name: '确认', callback: onDelMessage }]\nconst onCancelConfirmSheet = () => {\n  _ids.value = ''\n}\n\nconst onRefreshChange = ({ status, distance }: { status: string; distance: number }) => {\n  // window.log('下拉信息', status, distance)\n}\n\n// 获取站内通知——消息列表\nconst getUserMessageList = async (type = '') => {\n  try {\n    if (isRefreshing.value) return\n\n    // 刷新重置页数\n    if (type === 'refresh') {\n      page.value = 1\n      isLoading.value = true\n      isRefreshing.value = true\n    } else if (type === 'load-more') {\n      listLoading.value = page.value !== 1 && !!messageData.value.length\n    } else {\n      isLoading.value = true\n    }\n\n    finished.value = false\n\n    const res = await userMessageListApi({ page: page.value, limit: 10 })\n\n    if (!res.count) {\n      messageData.value = []\n      return\n    }\n\n    // messageData.value.forEach(item => (item.checked = 0))\n    const list = res.list.map(item => {\n      item.checked = 0\n      return item\n    })\n\n    if (type === 'refresh') {\n      messageData.value = list\n    } else {\n      messageData.value.push(...list)\n    }\n\n    if (messageData.value.length < res.count) {\n      page.value++\n    }\n    if (messageData.value.length === res.count) {\n      finished.value = true\n    }\n\n    window.log('消息列表', res)\n  } catch (error) {\n    console.error(error)\n  } finally {\n    isLoading.value = false\n    listLoading.value = false\n    isRefreshing.value = false\n  }\n}\n\n// 是否存在未读消息\nconst hasUnread = computed(() => messageData.value.some(item => !item.is_read))\n// navBar右侧文字\nconst navBarRightText = computed(() => {\n  return showController.value ? '完成' : '操作'\n})\n// 是否已全选\nconst isAllChecked = computed(() => messageData.value.every(item => item.checked))\n// 是否有选中\nconst isSomeChecked = computed(() => messageData.value.some(item => item.checked))\n\nconst onNavBtnClick = () => {\n  if (!messageData.value.length) return\n\n  if (!isDisabledDelete.value) {\n    messageData.value.forEach(item => (item.checked = 0))\n    showController.value = false\n  } else {\n    showController.value = !showController.value\n  }\n}\n// 进入消息详情页\nconst handleClickMessage = (item: TMessage) => {\n  if (showController.value) {\n    item.checked = item.checked === 1 ? 0 : 1\n    return\n  }\n  router.push(`/details/message/${item.id}`)\n}\n\nconst description = ref('您确定要删除这些信息吗？')\n// 左滑删除按钮点击\nconst onDeleteMessage = (ids: string) => {\n  description.value = '您要删除此消息吗？'\n  _ids.value = ids\n}\n\n// position 为关闭时点击的位置\nlet confirmSheetTimer: NodeJS.Timer | undefined\nconst beforeDeleteMessage: Interceptor = ({ position }) => {\n  switch (position) {\n    case 'cell':\n      return true\n    case 'outside':\n      return !showConfirmSheet.value\n    case 'right':\n      return new Promise<boolean>(resolve => {\n        showConfirmSheet.type = 1\n        showConfirmSheet.value = true\n\n        const doCheckConfirmSheet = () => {\n          if (showConfirmSheet.value) {\n            confirmSheetTimer && clearTimeout(confirmSheetTimer)\n            confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0)\n          } else {\n            resolve(true)\n          }\n        }\n        doCheckConfirmSheet()\n      })\n  }\n}\n\n// 已读\nconst onRead = async () => {\n  try {\n    if (!hasUnread.value || !isSomeChecked.value) return\n\n    if (!getAllMessageIds('read')) {\n      getUserMessageList()\n      showController.value = false\n      return\n    }\n\n    const res = await userMessageDetailsApi({\n      ids: _ids.value\n    })\n\n    if (res) {\n      showController.value = false\n      // 去除未读标识\n      messageData.value.forEach(item => {\n        if (_ids.value.includes(item.id!.toString())) {\n          item.is_read = 1\n        }\n      })\n    }\n\n    window.log('全部已读', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\n// 全选按钮点击 全选切换\nconst onBtnAllSelect = () => {\n  if (isAllChecked.value) {\n    messageData.value.forEach(item => (item.checked = 0))\n  } else {\n    messageData.value.forEach(item => (item.checked = 1))\n  }\n}\n// 底部删除按钮点击\nconst onDelete = () => {\n  if (isDisabledDelete.value) return\n\n  description.value = '您确定要删除这些信息吗？'\n  showConfirmSheet.type = 2\n  showConfirmSheet.value = true\n}\n\n// 选择状态改变时，更新相应按钮状态\nwatch(\n  messageData,\n  (value, oldValue) => {\n    let checkedNum = 0\n    messageData.value.forEach(item => {\n      if (item.checked) {\n        checkedNum++\n      }\n    })\n    // 删除按钮状态\n    isDisabledDelete.value = !checkedNum\n    // 全选按钮文字切换\n    btnAllSelectName.value = checkedNum === messageData.value.length ? '取消全选' : '全选'\n  },\n  {\n    deep: true\n  }\n)\n\nonMounted(() => {\n  getUserMessageList()\n  mitt.emit('action-sheet-show')\n})\n\nonBeforeUnmount(() => {\n  confirmSheetTimer && clearTimeout(confirmSheetTimer)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_nav_bar = _resolveComponent(\"nav-bar\")!\n  const _component_van_icon = _resolveComponent(\"van-icon\")!\n  const _component_van_loading = _resolveComponent(\"van-loading\")!\n  const _component_van_button = _resolveComponent(\"van-button\")!\n  const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\")!\n  const _component_van_list = _resolveComponent(\"van-list\")!\n  const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\")!\n  const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_nav_bar, {\n        title: \"消息\",\n        mode: \"white\"\n      }, {\n        left: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _createElementVNode(\"div\", {\n            class: \"btn-text\",\n            onClick: onNavBtnClick\n          }, _toDisplayString(navBarRightText.value), 1 /* TEXT */)\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"message-container\", { 'with-controller': showController.value }])\n    }, [\n      _createVNode(_component_van_pull_refresh, {\n        modelValue: isLoading.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((isLoading).value = $event)),\n        \"success-text\": \"刷新成功\",\n        onRefresh: _cache[2] || (_cache[2] = ($event: any) => (getUserMessageList('refresh'))),\n        onChange: onRefreshChange\n      }, {\n        pulling: _withCtx((props) => [\n          _createVNode(_component_van_icon, {\n            name: \"replay\",\n            size: \"24\",\n            style: _normalizeStyle({ transform: `rotateZ(${(props.distance / 50) * 360}deg)` })\n          }, null, 8 /* PROPS */, [\"style\"])\n        ]),\n        loosing: _withCtx((props) => [\n          _createVNode(_component_van_icon, {\n            name: \"replay\",\n            size: \"24\",\n            style: _normalizeStyle({ transform: `rotateZ(${(props.distance / 50) * 360}deg)` })\n          }, null, 8 /* PROPS */, [\"style\"])\n        ]),\n        loading: _withCtx(() => [\n          _createVNode(_component_van_loading, { size: \"24px\" }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"加载中...\")\n            ]),\n            _: 1 /* STABLE */\n          })\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_van_list, {\n            loading: listLoading.value,\n            \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event: any) => ((listLoading).value = $event)),\n            finished: finished.value,\n            \"immediate-check\": false,\n            \"finished-text\": \"没有更多了\",\n            onLoad: onLoad\n          }, {\n            default: _withCtx(() => [\n              (messageData.value.length && !isLoading.value)\n                ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList(messageData.value, (item, index) => {\n                    return (_openBlock(), _createBlock(_component_van_swipe_cell, {\n                      key: item.id,\n                      \"before-close\": beforeDeleteMessage\n                    }, {\n                      right: _withCtx(() => [\n                        _createVNode(_component_van_button, {\n                          square: \"\",\n                          type: \"danger\",\n                          icon: \"delete-o\",\n                          onClick: ($event: any) => (onDeleteMessage(item.id?.toString() as string))\n                        }, null, 8 /* PROPS */, [\"onClick\"])\n                      ]),\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", {\n                          class: _normalizeClass([\"message-item flex\", { 'message-item-end': index === messageData.value.length - 1 }]),\n                          onClick: ($event: any) => (handleClickMessage(item))\n                        }, [\n                          (showController.value)\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(item.checked ? 'radio-checked' : 'item-radio')\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true),\n                          _createCommentVNode(\" <i class=\\\"message\\\"></i> \"),\n                          _createElementVNode(\"img\", {\n                            src: _unref(iconMessage),\n                            class: \"icon-message\"\n                          }, null, 8 /* PROPS */, _hoisted_4),\n                          _createElementVNode(\"div\", _hoisted_5, [\n                            _createElementVNode(\"div\", _hoisted_6, [\n                              (!item.is_read)\n                                ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7))\n                                : _createCommentVNode(\"v-if\", true),\n                              _createElementVNode(\"div\", null, _toDisplayString(item.title), 1 /* TEXT */)\n                            ]),\n                            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.cdesc), 1 /* TEXT */),\n                            _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.add_time), 1 /* TEXT */)\n                          ])\n                        ], 10 /* CLASS, PROPS */, _hoisted_3)\n                      ]),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */))\n                  }), 128 /* KEYED_FRAGMENT */))\n                : _createCommentVNode(\"v-if\", true)\n            ]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"loading\", \"finished\"]),\n          (!messageData.value.length && !isLoading.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                _createElementVNode(\"img\", { src: _unref(noData) }, null, 8 /* PROPS */, _hoisted_11),\n                _hoisted_12\n              ]))\n            : _createCommentVNode(\"v-if\", true)\n        ]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])\n    ], 2 /* CLASS */),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { 'show-controller': showController.value }])\n    }, [\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-all-readed\",\n        onClick: onBtnAllSelect\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(btnAllSelectName.value), 1 /* TEXT */)\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-all-select\",\n        onClick: onRead\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\" 已读 \")\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createVNode(_component_van_button, {\n        type: \"primary\",\n        class: \"btn-delete\",\n        onClick: onDelete\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\" 删除 \")\n        ]),\n        _: 1 /* STABLE */\n      })\n    ], 2 /* CLASS */),\n    _createCommentVNode(\" 动作面板 \"),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _createVNode(_component_van_action_sheet, {\n        show: showConfirmSheet.value,\n        \"onUpdate:show\": _cache[3] || (_cache[3] = ($event: any) => ((showConfirmSheet.value) = $event)),\n        actions: actions,\n        \"cancel-text\": \"取消\",\n        description: description.value,\n        \"close-on-click-action\": \"\",\n        onCancel: onCancelConfirmSheet,\n        \"lazy-render\": false,\n        class: \"full-w-sheet\"\n      }, null, 8 /* PROPS */, [\"show\", \"description\"])\n    ])\n  ], 64 /* STABLE_FRAGMENT */))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714699770690,
      "end": 1714699770690,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699770690,
      "end": 1714699770690,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699770690,
      "end": 1714699770690,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699770690,
      "end": 1714699770690,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-9949fade\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"nav-bar\" };\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"i\",\n  { class: \"arrow-right-gray arrow-back\" },\n  null,\n  -1\n  /* HOISTED */\n));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = { class: \"item-content\" };\nconst _hoisted_6 = { class: \"item-title flex items-center\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n};\nconst _hoisted_8 = { class: \"item-cdesc\" };\nconst _hoisted_9 = { class: \"item-add_time\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"text-no-data text-center\" },\n  \"暂无数据\",\n  -1\n  /* HOISTED */\n));\nconst _hoisted_13 = { class: \"confirm-sheet-container\" };\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \"@/apis/article\";\nimport iconMessage from \"@/assets/images/common/message-gray.png\";\nimport noData from \"@/assets/images/common/noData.png\";\nimport verified from \"@/assets/images/common/verified.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"message\",\n  setup(__props) {\n    const router = useRouter();\n    const messageData = ref([]);\n    const isLoading = ref(false);\n    const showController = ref(false);\n    const isDisabledDelete = ref(true);\n    const showConfirmSheet = reactive({ type: 1, value: false });\n    const btnAllSelectName = ref(\"全选\");\n    const _ids = ref(\"\");\n    const page = ref(1);\n    const listLoading = ref(false);\n    const finished = ref(false);\n    const isRefreshing = ref(false);\n    const onLoad = () => {\n      getUserMessageList(\"load-more\");\n    };\n    const getAllMessageIds = (type) => {\n      _ids.value = messageData.value.reduce((prev, curr) => {\n        if (type === \"checked\" && curr.checked || type === \"read\" && curr.checked && !curr.is_read) {\n          return (prev !== \"\" ? prev + \",\" : \"\") + (curr.id?.toString() || \"\");\n        }\n        return prev;\n      }, \"\");\n      return _ids.value;\n    };\n    const onDelMessage = async () => {\n      if (showConfirmSheet.type === 2) {\n        getAllMessageIds(\"checked\");\n      }\n      const res = await userMessageDelApi({\n        ids: _ids.value\n      });\n      if (res) {\n        if (showConfirmSheet.type === 2) {\n          onNavBtnClick();\n        }\n        showToast({\n          message: \"删除成功\",\n          icon: verified,\n          iconSize: \"48px\"\n        });\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\n        if (!messageData.value.length) {\n          page.value = 1;\n          getUserMessageList();\n        }\n      }\n    };\n    const actions = [{ name: \"确认\", callback: onDelMessage }];\n    const onCancelConfirmSheet = () => {\n      _ids.value = \"\";\n    };\n    const onRefreshChange = ({ status, distance }) => {\n    };\n    const getUserMessageList = async (type = \"\") => {\n      try {\n        if (isRefreshing.value)\n          return;\n        if (type === \"refresh\") {\n          page.value = 1;\n          isLoading.value = true;\n          isRefreshing.value = true;\n        } else if (type === \"load-more\") {\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\n        } else {\n          isLoading.value = true;\n        }\n        finished.value = false;\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\n        if (!res.count) {\n          messageData.value = [];\n          return;\n        }\n        const list = res.list.map((item) => {\n          item.checked = 0;\n          return item;\n        });\n        if (type === \"refresh\") {\n          messageData.value = list;\n        } else {\n          messageData.value.push(...list);\n        }\n        if (messageData.value.length < res.count) {\n          page.value++;\n        }\n        if (messageData.value.length === res.count) {\n          finished.value = true;\n        }\n        window.log(\"消息列表\", res);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading.value = false;\n        listLoading.value = false;\n        isRefreshing.value = false;\n      }\n    };\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\n    const navBarRightText = computed(() => {\n      return showController.value ? \"完成\" : \"操作\";\n    });\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\n    const onNavBtnClick = () => {\n      if (!messageData.value.length)\n        return;\n      if (!isDisabledDelete.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n        showController.value = false;\n      } else {\n        showController.value = !showController.value;\n      }\n    };\n    const handleClickMessage = (item) => {\n      if (showController.value) {\n        item.checked = item.checked === 1 ? 0 : 1;\n        return;\n      }\n      router.push(`/details/message/${item.id}`);\n    };\n    const description = ref(\"您确定要删除这些信息吗？\");\n    const onDeleteMessage = (ids) => {\n      description.value = \"您要删除此消息吗？\";\n      _ids.value = ids;\n    };\n    let confirmSheetTimer;\n    const beforeDeleteMessage = ({ position }) => {\n      switch (position) {\n        case \"cell\":\n          return true;\n        case \"outside\":\n          return !showConfirmSheet.value;\n        case \"right\":\n          return new Promise((resolve) => {\n            showConfirmSheet.type = 1;\n            showConfirmSheet.value = true;\n            const doCheckConfirmSheet = () => {\n              if (showConfirmSheet.value) {\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\n              } else {\n                resolve(true);\n              }\n            };\n            doCheckConfirmSheet();\n          });\n      }\n    };\n    const onRead = async () => {\n      try {\n        if (!hasUnread.value || !isSomeChecked.value)\n          return;\n        if (!getAllMessageIds(\"read\")) {\n          getUserMessageList();\n          showController.value = false;\n          return;\n        }\n        const res = await userMessageDetailsApi({\n          ids: _ids.value\n        });\n        if (res) {\n          showController.value = false;\n          messageData.value.forEach((item) => {\n            if (_ids.value.includes(item.id.toString())) {\n              item.is_read = 1;\n            }\n          });\n        }\n        window.log(\"全部已读\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const onBtnAllSelect = () => {\n      if (isAllChecked.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n      } else {\n        messageData.value.forEach((item) => item.checked = 1);\n      }\n    };\n    const onDelete = () => {\n      if (isDisabledDelete.value)\n        return;\n      description.value = \"您确定要删除这些信息吗？\";\n      showConfirmSheet.type = 2;\n      showConfirmSheet.value = true;\n    };\n    watch(\n      messageData,\n      (value, oldValue) => {\n        let checkedNum = 0;\n        messageData.value.forEach((item) => {\n          if (item.checked) {\n            checkedNum++;\n          }\n        });\n        isDisabledDelete.value = !checkedNum;\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \"取消全选\" : \"全选\";\n      },\n      {\n        deep: true\n      }\n    );\n    onMounted(() => {\n      getUserMessageList();\n      mitt.emit(\"action-sheet-show\");\n    });\n    onBeforeUnmount(() => {\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\n    });\n    return (_ctx, _cache) => {\n      const _component_nav_bar = _resolveComponent(\"nav-bar\");\n      const _component_van_icon = _resolveComponent(\"van-icon\");\n      const _component_van_loading = _resolveComponent(\"van-loading\");\n      const _component_van_button = _resolveComponent(\"van-button\");\n      const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\");\n      const _component_van_list = _resolveComponent(\"van-list\");\n      const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\");\n      const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\");\n      return _openBlock(), _createElementBlock(\n        _Fragment,\n        null,\n        [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(_component_nav_bar, {\n              title: \"消息\",\n              mode: \"white\"\n            }, {\n              left: _withCtx(() => [\n                _hoisted_2\n              ]),\n              right: _withCtx(() => [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"btn-text\",\n                    onClick: onNavBtnClick\n                  },\n                  _toDisplayString(navBarRightText.value),\n                  1\n                  /* TEXT */\n                )\n              ]),\n              _: 1\n              /* STABLE */\n            })\n          ]),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"message-container\", { \"with-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_pull_refresh, {\n                modelValue: isLoading.value,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\n                \"success-text\": \"刷新成功\",\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\"refresh\")),\n                onChange: onRefreshChange\n              }, {\n                pulling: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loosing: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loading: _withCtx(() => [\n                  _createVNode(_component_van_loading, { size: \"24px\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"加载中...\")\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  })\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_van_list, {\n                    loading: listLoading.value,\n                    \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\n                    finished: finished.value,\n                    \"immediate-check\": false,\n                    \"finished-text\": \"没有更多了\",\n                    onLoad\n                  }, {\n                    default: _withCtx(() => [\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\n                        _Fragment,\n                        { key: 0 },\n                        _renderList(messageData.value, (item, index) => {\n                          return _openBlock(), _createBlock(\n                            _component_van_swipe_cell,\n                            {\n                              key: item.id,\n                              \"before-close\": beforeDeleteMessage\n                            },\n                            {\n                              right: _withCtx(() => [\n                                _createVNode(_component_van_button, {\n                                  square: \"\",\n                                  type: \"danger\",\n                                  icon: \"delete-o\",\n                                  onClick: ($event) => onDeleteMessage(item.id?.toString())\n                                }, null, 8, [\"onClick\"])\n                              ]),\n                              default: _withCtx(() => [\n                                _createElementVNode(\"div\", {\n                                  class: _normalizeClass([\"message-item flex\", { \"message-item-end\": index === messageData.value.length - 1 }]),\n                                  onClick: ($event) => handleClickMessage(item)\n                                }, [\n                                  showController.value ? (_openBlock(), _createElementBlock(\n                                    \"i\",\n                                    {\n                                      key: 0,\n                                      class: _normalizeClass(item.checked ? \"radio-checked\" : \"item-radio\")\n                                    },\n                                    null,\n                                    2\n                                    /* CLASS */\n                                  )) : _createCommentVNode(\"v-if\", true),\n                                  _createCommentVNode(' <i class=\"message\"></i> '),\n                                  _createElementVNode(\"img\", {\n                                    src: _unref(iconMessage),\n                                    class: \"icon-message\"\n                                  }, null, 8, _hoisted_4),\n                                  _createElementVNode(\"div\", _hoisted_5, [\n                                    _createElementVNode(\"div\", _hoisted_6, [\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true),\n                                      _createElementVNode(\n                                        \"div\",\n                                        null,\n                                        _toDisplayString(item.title),\n                                        1\n                                        /* TEXT */\n                                      )\n                                    ]),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_8,\n                                      _toDisplayString(item.cdesc),\n                                      1\n                                      /* TEXT */\n                                    ),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_9,\n                                      _toDisplayString(item.add_time),\n                                      1\n                                      /* TEXT */\n                                    )\n                                  ])\n                                ], 10, _hoisted_3)\n                              ]),\n                              _: 2\n                              /* DYNAMIC */\n                            },\n                            1024\n                            /* DYNAMIC_SLOTS */\n                          );\n                        }),\n                        128\n                        /* KEYED_FRAGMENT */\n                      )) : _createCommentVNode(\"v-if\", true)\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  }, 8, [\"loading\", \"finished\"]),\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createElementVNode(\"img\", { src: _unref(noData) }, null, 8, _hoisted_11),\n                    _hoisted_12\n                  ])) : _createCommentVNode(\"v-if\", true)\n                ]),\n                _: 1\n                /* STABLE */\n              }, 8, [\"modelValue\"])\n            ],\n            2\n            /* CLASS */\n          ),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { \"show-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-readed\",\n                onClick: onBtnAllSelect\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\n                    _toDisplayString(btnAllSelectName.value),\n                    1\n                    /* TEXT */\n                  )\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-select\",\n                onClick: onRead\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" 已读 \")\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-delete\",\n                onClick: onDelete\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" 删除 \")\n                ]),\n                _: 1\n                /* STABLE */\n              })\n            ],\n            2\n            /* CLASS */\n          ),\n          _createCommentVNode(\" 动作面板 \"),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createVNode(_component_van_action_sheet, {\n              show: showConfirmSheet.value,\n              \"onUpdate:show\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\n              actions,\n              \"cancel-text\": \"取消\",\n              description: description.value,\n              \"close-on-click-action\": \"\",\n              onCancel: onCancelConfirmSheet,\n              \"lazy-render\": false,\n              class: \"full-w-sheet\"\n            }, null, 8, [\"show\", \"description\"])\n          ])\n        ],\n        64\n        /* STABLE_FRAGMENT */\n      );\n    };\n  }\n});\n",
      "start": 1714699770690,
      "end": 1714699770690,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-9949fade\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"nav-bar\" };\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"i\",\n  { class: \"arrow-right-gray arrow-back\" },\n  null,\n  -1\n  /* HOISTED */\n));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = { class: \"item-content\" };\nconst _hoisted_6 = { class: \"item-title flex items-center\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n};\nconst _hoisted_8 = { class: \"item-cdesc\" };\nconst _hoisted_9 = { class: \"item-add_time\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"text-no-data text-center\" },\n  \"\\u6682\\u65E0\\u6570\\u636E\",\n  -1\n  /* HOISTED */\n));\nconst _hoisted_13 = { class: \"confirm-sheet-container\" };\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \"@/apis/article\";\nimport iconMessage from \"@/assets/images/common/message-gray.png\";\nimport noData from \"@/assets/images/common/noData.png\";\nimport verified from \"@/assets/images/common/verified.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"message\",\n  setup(__props) {\n    const router = useRouter();\n    const messageData = ref([]);\n    const isLoading = ref(false);\n    const showController = ref(false);\n    const isDisabledDelete = ref(true);\n    const showConfirmSheet = reactive({ type: 1, value: false });\n    const btnAllSelectName = ref(\"\\u5168\\u9009\");\n    const _ids = ref(\"\");\n    const page = ref(1);\n    const listLoading = ref(false);\n    const finished = ref(false);\n    const isRefreshing = ref(false);\n    const onLoad = () => {\n      getUserMessageList(\"load-more\");\n    };\n    const getAllMessageIds = (type) => {\n      _ids.value = messageData.value.reduce((prev, curr) => {\n        var _a;\n        if (type === \"checked\" && curr.checked || type === \"read\" && curr.checked && !curr.is_read) {\n          return (prev !== \"\" ? prev + \",\" : \"\") + (((_a = curr.id) == null ? void 0 : _a.toString()) || \"\");\n        }\n        return prev;\n      }, \"\");\n      return _ids.value;\n    };\n    const onDelMessage = async () => {\n      if (showConfirmSheet.type === 2) {\n        getAllMessageIds(\"checked\");\n      }\n      const res = await userMessageDelApi({\n        ids: _ids.value\n      });\n      if (res) {\n        if (showConfirmSheet.type === 2) {\n          onNavBtnClick();\n        }\n        showToast({\n          message: \"\\u5220\\u9664\\u6210\\u529F\",\n          icon: verified,\n          iconSize: \"48px\"\n        });\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\n        if (!messageData.value.length) {\n          page.value = 1;\n          getUserMessageList();\n        }\n      }\n    };\n    const actions = [{ name: \"\\u786E\\u8BA4\", callback: onDelMessage }];\n    const onCancelConfirmSheet = () => {\n      _ids.value = \"\";\n    };\n    const onRefreshChange = ({ status, distance }) => {\n    };\n    const getUserMessageList = async (type = \"\") => {\n      try {\n        if (isRefreshing.value)\n          return;\n        if (type === \"refresh\") {\n          page.value = 1;\n          isLoading.value = true;\n          isRefreshing.value = true;\n        } else if (type === \"load-more\") {\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\n        } else {\n          isLoading.value = true;\n        }\n        finished.value = false;\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\n        if (!res.count) {\n          messageData.value = [];\n          return;\n        }\n        const list = res.list.map((item) => {\n          item.checked = 0;\n          return item;\n        });\n        if (type === \"refresh\") {\n          messageData.value = list;\n        } else {\n          messageData.value.push(...list);\n        }\n        if (messageData.value.length < res.count) {\n          page.value++;\n        }\n        if (messageData.value.length === res.count) {\n          finished.value = true;\n        }\n        window.log(\"\\u6D88\\u606F\\u5217\\u8868\", res);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading.value = false;\n        listLoading.value = false;\n        isRefreshing.value = false;\n      }\n    };\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\n    const navBarRightText = computed(() => {\n      return showController.value ? \"\\u5B8C\\u6210\" : \"\\u64CD\\u4F5C\";\n    });\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\n    const onNavBtnClick = () => {\n      if (!messageData.value.length)\n        return;\n      if (!isDisabledDelete.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n        showController.value = false;\n      } else {\n        showController.value = !showController.value;\n      }\n    };\n    const handleClickMessage = (item) => {\n      if (showController.value) {\n        item.checked = item.checked === 1 ? 0 : 1;\n        return;\n      }\n      router.push(`/details/message/${item.id}`);\n    };\n    const description = ref(\"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\");\n    const onDeleteMessage = (ids) => {\n      description.value = \"\\u60A8\\u8981\\u5220\\u9664\\u6B64\\u6D88\\u606F\\u5417\\uFF1F\";\n      _ids.value = ids;\n    };\n    let confirmSheetTimer;\n    const beforeDeleteMessage = ({ position }) => {\n      switch (position) {\n        case \"cell\":\n          return true;\n        case \"outside\":\n          return !showConfirmSheet.value;\n        case \"right\":\n          return new Promise((resolve) => {\n            showConfirmSheet.type = 1;\n            showConfirmSheet.value = true;\n            const doCheckConfirmSheet = () => {\n              if (showConfirmSheet.value) {\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\n              } else {\n                resolve(true);\n              }\n            };\n            doCheckConfirmSheet();\n          });\n      }\n    };\n    const onRead = async () => {\n      try {\n        if (!hasUnread.value || !isSomeChecked.value)\n          return;\n        if (!getAllMessageIds(\"read\")) {\n          getUserMessageList();\n          showController.value = false;\n          return;\n        }\n        const res = await userMessageDetailsApi({\n          ids: _ids.value\n        });\n        if (res) {\n          showController.value = false;\n          messageData.value.forEach((item) => {\n            if (_ids.value.includes(item.id.toString())) {\n              item.is_read = 1;\n            }\n          });\n        }\n        window.log(\"\\u5168\\u90E8\\u5DF2\\u8BFB\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const onBtnAllSelect = () => {\n      if (isAllChecked.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n      } else {\n        messageData.value.forEach((item) => item.checked = 1);\n      }\n    };\n    const onDelete = () => {\n      if (isDisabledDelete.value)\n        return;\n      description.value = \"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\";\n      showConfirmSheet.type = 2;\n      showConfirmSheet.value = true;\n    };\n    watch(\n      messageData,\n      (value, oldValue) => {\n        let checkedNum = 0;\n        messageData.value.forEach((item) => {\n          if (item.checked) {\n            checkedNum++;\n          }\n        });\n        isDisabledDelete.value = !checkedNum;\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \"\\u53D6\\u6D88\\u5168\\u9009\" : \"\\u5168\\u9009\";\n      },\n      {\n        deep: true\n      }\n    );\n    onMounted(() => {\n      getUserMessageList();\n      mitt.emit(\"action-sheet-show\");\n    });\n    onBeforeUnmount(() => {\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\n    });\n    return (_ctx, _cache) => {\n      const _component_nav_bar = _resolveComponent(\"nav-bar\");\n      const _component_van_icon = _resolveComponent(\"van-icon\");\n      const _component_van_loading = _resolveComponent(\"van-loading\");\n      const _component_van_button = _resolveComponent(\"van-button\");\n      const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\");\n      const _component_van_list = _resolveComponent(\"van-list\");\n      const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\");\n      const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\");\n      return _openBlock(), _createElementBlock(\n        _Fragment,\n        null,\n        [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(_component_nav_bar, {\n              title: \"\\u6D88\\u606F\",\n              mode: \"white\"\n            }, {\n              left: _withCtx(() => [\n                _hoisted_2\n              ]),\n              right: _withCtx(() => [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"btn-text\",\n                    onClick: onNavBtnClick\n                  },\n                  _toDisplayString(navBarRightText.value),\n                  1\n                  /* TEXT */\n                )\n              ]),\n              _: 1\n              /* STABLE */\n            })\n          ]),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"message-container\", { \"with-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_pull_refresh, {\n                modelValue: isLoading.value,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\n                \"success-text\": \"\\u5237\\u65B0\\u6210\\u529F\",\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\"refresh\")),\n                onChange: onRefreshChange\n              }, {\n                pulling: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loosing: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loading: _withCtx(() => [\n                  _createVNode(_component_van_loading, { size: \"24px\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"\\u52A0\\u8F7D\\u4E2D...\")\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  })\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_van_list, {\n                    loading: listLoading.value,\n                    \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\n                    finished: finished.value,\n                    \"immediate-check\": false,\n                    \"finished-text\": \"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\",\n                    onLoad\n                  }, {\n                    default: _withCtx(() => [\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\n                        _Fragment,\n                        { key: 0 },\n                        _renderList(messageData.value, (item, index) => {\n                          return _openBlock(), _createBlock(\n                            _component_van_swipe_cell,\n                            {\n                              key: item.id,\n                              \"before-close\": beforeDeleteMessage\n                            },\n                            {\n                              right: _withCtx(() => [\n                                _createVNode(_component_van_button, {\n                                  square: \"\",\n                                  type: \"danger\",\n                                  icon: \"delete-o\",\n                                  onClick: ($event) => {\n                                    var _a;\n                                    return onDeleteMessage((_a = item.id) == null ? void 0 : _a.toString());\n                                  }\n                                }, null, 8, [\"onClick\"])\n                              ]),\n                              default: _withCtx(() => [\n                                _createElementVNode(\"div\", {\n                                  class: _normalizeClass([\"message-item flex\", { \"message-item-end\": index === messageData.value.length - 1 }]),\n                                  onClick: ($event) => handleClickMessage(item)\n                                }, [\n                                  showController.value ? (_openBlock(), _createElementBlock(\n                                    \"i\",\n                                    {\n                                      key: 0,\n                                      class: _normalizeClass(item.checked ? \"radio-checked\" : \"item-radio\")\n                                    },\n                                    null,\n                                    2\n                                    /* CLASS */\n                                  )) : _createCommentVNode(\"v-if\", true),\n                                  _createCommentVNode(' <i class=\"message\"></i> '),\n                                  _createElementVNode(\"img\", {\n                                    src: _unref(iconMessage),\n                                    class: \"icon-message\"\n                                  }, null, 8, _hoisted_4),\n                                  _createElementVNode(\"div\", _hoisted_5, [\n                                    _createElementVNode(\"div\", _hoisted_6, [\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true),\n                                      _createElementVNode(\n                                        \"div\",\n                                        null,\n                                        _toDisplayString(item.title),\n                                        1\n                                        /* TEXT */\n                                      )\n                                    ]),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_8,\n                                      _toDisplayString(item.cdesc),\n                                      1\n                                      /* TEXT */\n                                    ),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_9,\n                                      _toDisplayString(item.add_time),\n                                      1\n                                      /* TEXT */\n                                    )\n                                  ])\n                                ], 10, _hoisted_3)\n                              ]),\n                              _: 2\n                              /* DYNAMIC */\n                            },\n                            1024\n                            /* DYNAMIC_SLOTS */\n                          );\n                        }),\n                        128\n                        /* KEYED_FRAGMENT */\n                      )) : _createCommentVNode(\"v-if\", true)\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  }, 8, [\"loading\", \"finished\"]),\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createElementVNode(\"img\", { src: _unref(noData) }, null, 8, _hoisted_11),\n                    _hoisted_12\n                  ])) : _createCommentVNode(\"v-if\", true)\n                ]),\n                _: 1\n                /* STABLE */\n              }, 8, [\"modelValue\"])\n            ],\n            2\n            /* CLASS */\n          ),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { \"show-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-readed\",\n                onClick: onBtnAllSelect\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\n                    _toDisplayString(btnAllSelectName.value),\n                    1\n                    /* TEXT */\n                  )\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-select\",\n                onClick: onRead\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5DF2\\u8BFB \")\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-delete\",\n                onClick: onDelete\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5220\\u9664 \")\n                ]),\n                _: 1\n                /* STABLE */\n              })\n            ],\n            2\n            /* CLASS */\n          ),\n          _createCommentVNode(\" \\u52A8\\u4F5C\\u9762\\u677F \"),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createVNode(_component_van_action_sheet, {\n              show: showConfirmSheet.value,\n              \"onUpdate:show\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\n              actions,\n              \"cancel-text\": \"\\u53D6\\u6D88\",\n              description: description.value,\n              \"close-on-click-action\": \"\",\n              onCancel: onCancelConfirmSheet,\n              \"lazy-render\": false,\n              class: \"full-w-sheet\"\n            }, null, 8, [\"show\", \"description\"])\n          ])\n        ],\n        64\n        /* STABLE_FRAGMENT */\n      );\n    };\n  }\n});\n",
      "start": 1714699770690,
      "end": 1714699771110,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/pages/Mine/message.vue?vue&type=script&setup=true&lang.ts\"],\n  \"sourcesContent\": [\"import { defineComponent as _defineComponent } from \\\"vue\\\";\\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \\\"vue\\\";\\nconst _withScopeId = (n) => (_pushScopeId(\\\"data-v-9949fade\\\"), n = n(), _popScopeId(), n);\\nconst _hoisted_1 = { class: \\\"nav-bar\\\" };\\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\\n  \\\"i\\\",\\n  { class: \\\"arrow-right-gray arrow-back\\\" },\\n  null,\\n  -1\\n  /* HOISTED */\\n));\\nconst _hoisted_3 = [\\\"onClick\\\"];\\nconst _hoisted_4 = [\\\"src\\\"];\\nconst _hoisted_5 = { class: \\\"item-content\\\" };\\nconst _hoisted_6 = { class: \\\"item-title flex items-center\\\" };\\nconst _hoisted_7 = {\\n  key: 0,\\n  class: \\\"unread\\\"\\n};\\nconst _hoisted_8 = { class: \\\"item-cdesc\\\" };\\nconst _hoisted_9 = { class: \\\"item-add_time\\\" };\\nconst _hoisted_10 = {\\n  key: 0,\\n  class: \\\"no-data flex flex-col items-center justify-center\\\"\\n};\\nconst _hoisted_11 = [\\\"src\\\"];\\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\\n  \\\"div\\\",\\n  { class: \\\"text-no-data text-center\\\" },\\n  \\\"\\u6682\\u65E0\\u6570\\u636E\\\",\\n  -1\\n  /* HOISTED */\\n));\\nconst _hoisted_13 = { class: \\\"confirm-sheet-container\\\" };\\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \\\"@/apis/article\\\";\\nimport iconMessage from \\\"@/assets/images/common/message-gray.png\\\";\\nimport noData from \\\"@/assets/images/common/noData.png\\\";\\nimport verified from \\\"@/assets/images/common/verified.png\\\";\\nimport mitt from \\\"@/utils/mitt\\\";\\nimport { showToast } from \\\"vant\\\";\\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \\\"vue\\\";\\nimport { useRouter } from \\\"vue-router\\\";\\nexport default /* @__PURE__ */ _defineComponent({\\n  __name: \\\"message\\\",\\n  setup(__props) {\\n    const router = useRouter();\\n    const messageData = ref([]);\\n    const isLoading = ref(false);\\n    const showController = ref(false);\\n    const isDisabledDelete = ref(true);\\n    const showConfirmSheet = reactive({ type: 1, value: false });\\n    const btnAllSelectName = ref(\\\"\\u5168\\u9009\\\");\\n    const _ids = ref(\\\"\\\");\\n    const page = ref(1);\\n    const listLoading = ref(false);\\n    const finished = ref(false);\\n    const isRefreshing = ref(false);\\n    const onLoad = () => {\\n      getUserMessageList(\\\"load-more\\\");\\n    };\\n    const getAllMessageIds = (type) => {\\n      _ids.value = messageData.value.reduce((prev, curr) => {\\n        if (type === \\\"checked\\\" && curr.checked || type === \\\"read\\\" && curr.checked && !curr.is_read) {\\n          return (prev !== \\\"\\\" ? prev + \\\",\\\" : \\\"\\\") + (curr.id?.toString() || \\\"\\\");\\n        }\\n        return prev;\\n      }, \\\"\\\");\\n      return _ids.value;\\n    };\\n    const onDelMessage = async () => {\\n      if (showConfirmSheet.type === 2) {\\n        getAllMessageIds(\\\"checked\\\");\\n      }\\n      const res = await userMessageDelApi({\\n        ids: _ids.value\\n      });\\n      if (res) {\\n        if (showConfirmSheet.type === 2) {\\n          onNavBtnClick();\\n        }\\n        showToast({\\n          message: \\\"\\u5220\\u9664\\u6210\\u529F\\\",\\n          icon: verified,\\n          iconSize: \\\"48px\\\"\\n        });\\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\\n        if (!messageData.value.length) {\\n          page.value = 1;\\n          getUserMessageList();\\n        }\\n      }\\n    };\\n    const actions = [{ name: \\\"\\u786E\\u8BA4\\\", callback: onDelMessage }];\\n    const onCancelConfirmSheet = () => {\\n      _ids.value = \\\"\\\";\\n    };\\n    const onRefreshChange = ({ status, distance }) => {\\n    };\\n    const getUserMessageList = async (type = \\\"\\\") => {\\n      try {\\n        if (isRefreshing.value)\\n          return;\\n        if (type === \\\"refresh\\\") {\\n          page.value = 1;\\n          isLoading.value = true;\\n          isRefreshing.value = true;\\n        } else if (type === \\\"load-more\\\") {\\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\\n        } else {\\n          isLoading.value = true;\\n        }\\n        finished.value = false;\\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\\n        if (!res.count) {\\n          messageData.value = [];\\n          return;\\n        }\\n        const list = res.list.map((item) => {\\n          item.checked = 0;\\n          return item;\\n        });\\n        if (type === \\\"refresh\\\") {\\n          messageData.value = list;\\n        } else {\\n          messageData.value.push(...list);\\n        }\\n        if (messageData.value.length < res.count) {\\n          page.value++;\\n        }\\n        if (messageData.value.length === res.count) {\\n          finished.value = true;\\n        }\\n        window.log(\\\"\\u6D88\\u606F\\u5217\\u8868\\\", res);\\n      } catch (error) {\\n        console.error(error);\\n      } finally {\\n        isLoading.value = false;\\n        listLoading.value = false;\\n        isRefreshing.value = false;\\n      }\\n    };\\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\\n    const navBarRightText = computed(() => {\\n      return showController.value ? \\\"\\u5B8C\\u6210\\\" : \\\"\\u64CD\\u4F5C\\\";\\n    });\\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\\n    const onNavBtnClick = () => {\\n      if (!messageData.value.length)\\n        return;\\n      if (!isDisabledDelete.value) {\\n        messageData.value.forEach((item) => item.checked = 0);\\n        showController.value = false;\\n      } else {\\n        showController.value = !showController.value;\\n      }\\n    };\\n    const handleClickMessage = (item) => {\\n      if (showController.value) {\\n        item.checked = item.checked === 1 ? 0 : 1;\\n        return;\\n      }\\n      router.push(`/details/message/${item.id}`);\\n    };\\n    const description = ref(\\\"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\\\");\\n    const onDeleteMessage = (ids) => {\\n      description.value = \\\"\\u60A8\\u8981\\u5220\\u9664\\u6B64\\u6D88\\u606F\\u5417\\uFF1F\\\";\\n      _ids.value = ids;\\n    };\\n    let confirmSheetTimer;\\n    const beforeDeleteMessage = ({ position }) => {\\n      switch (position) {\\n        case \\\"cell\\\":\\n          return true;\\n        case \\\"outside\\\":\\n          return !showConfirmSheet.value;\\n        case \\\"right\\\":\\n          return new Promise((resolve) => {\\n            showConfirmSheet.type = 1;\\n            showConfirmSheet.value = true;\\n            const doCheckConfirmSheet = () => {\\n              if (showConfirmSheet.value) {\\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\\n              } else {\\n                resolve(true);\\n              }\\n            };\\n            doCheckConfirmSheet();\\n          });\\n      }\\n    };\\n    const onRead = async () => {\\n      try {\\n        if (!hasUnread.value || !isSomeChecked.value)\\n          return;\\n        if (!getAllMessageIds(\\\"read\\\")) {\\n          getUserMessageList();\\n          showController.value = false;\\n          return;\\n        }\\n        const res = await userMessageDetailsApi({\\n          ids: _ids.value\\n        });\\n        if (res) {\\n          showController.value = false;\\n          messageData.value.forEach((item) => {\\n            if (_ids.value.includes(item.id.toString())) {\\n              item.is_read = 1;\\n            }\\n          });\\n        }\\n        window.log(\\\"\\u5168\\u90E8\\u5DF2\\u8BFB\\\", res);\\n      } catch (error) {\\n        console.error(error);\\n      }\\n    };\\n    const onBtnAllSelect = () => {\\n      if (isAllChecked.value) {\\n        messageData.value.forEach((item) => item.checked = 0);\\n      } else {\\n        messageData.value.forEach((item) => item.checked = 1);\\n      }\\n    };\\n    const onDelete = () => {\\n      if (isDisabledDelete.value)\\n        return;\\n      description.value = \\\"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\\\";\\n      showConfirmSheet.type = 2;\\n      showConfirmSheet.value = true;\\n    };\\n    watch(\\n      messageData,\\n      (value, oldValue) => {\\n        let checkedNum = 0;\\n        messageData.value.forEach((item) => {\\n          if (item.checked) {\\n            checkedNum++;\\n          }\\n        });\\n        isDisabledDelete.value = !checkedNum;\\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \\\"\\u53D6\\u6D88\\u5168\\u9009\\\" : \\\"\\u5168\\u9009\\\";\\n      },\\n      {\\n        deep: true\\n      }\\n    );\\n    onMounted(() => {\\n      getUserMessageList();\\n      mitt.emit(\\\"action-sheet-show\\\");\\n    });\\n    onBeforeUnmount(() => {\\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\\n    });\\n    return (_ctx, _cache) => {\\n      const _component_nav_bar = _resolveComponent(\\\"nav-bar\\\");\\n      const _component_van_icon = _resolveComponent(\\\"van-icon\\\");\\n      const _component_van_loading = _resolveComponent(\\\"van-loading\\\");\\n      const _component_van_button = _resolveComponent(\\\"van-button\\\");\\n      const _component_van_swipe_cell = _resolveComponent(\\\"van-swipe-cell\\\");\\n      const _component_van_list = _resolveComponent(\\\"van-list\\\");\\n      const _component_van_pull_refresh = _resolveComponent(\\\"van-pull-refresh\\\");\\n      const _component_van_action_sheet = _resolveComponent(\\\"van-action-sheet\\\");\\n      return _openBlock(), _createElementBlock(\\n        _Fragment,\\n        null,\\n        [\\n          _createElementVNode(\\\"div\\\", _hoisted_1, [\\n            _createVNode(_component_nav_bar, {\\n              title: \\\"\\u6D88\\u606F\\\",\\n              mode: \\\"white\\\"\\n            }, {\\n              left: _withCtx(() => [\\n                _hoisted_2\\n              ]),\\n              right: _withCtx(() => [\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  {\\n                    class: \\\"btn-text\\\",\\n                    onClick: onNavBtnClick\\n                  },\\n                  _toDisplayString(navBarRightText.value),\\n                  1\\n                  /* TEXT */\\n                )\\n              ]),\\n              _: 1\\n              /* STABLE */\\n            })\\n          ]),\\n          _createElementVNode(\\n            \\\"div\\\",\\n            {\\n              class: _normalizeClass([\\\"message-container\\\", { \\\"with-controller\\\": showController.value }])\\n            },\\n            [\\n              _createVNode(_component_van_pull_refresh, {\\n                modelValue: isLoading.value,\\n                \\\"onUpdate:modelValue\\\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\\n                \\\"success-text\\\": \\\"\\u5237\\u65B0\\u6210\\u529F\\\",\\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\\\"refresh\\\")),\\n                onChange: onRefreshChange\\n              }, {\\n                pulling: _withCtx((props) => [\\n                  _createVNode(_component_van_icon, {\\n                    name: \\\"replay\\\",\\n                    size: \\\"24\\\",\\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\\n                  }, null, 8, [\\\"style\\\"])\\n                ]),\\n                loosing: _withCtx((props) => [\\n                  _createVNode(_component_van_icon, {\\n                    name: \\\"replay\\\",\\n                    size: \\\"24\\\",\\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\\n                  }, null, 8, [\\\"style\\\"])\\n                ]),\\n                loading: _withCtx(() => [\\n                  _createVNode(_component_van_loading, { size: \\\"24px\\\" }, {\\n                    default: _withCtx(() => [\\n                      _createTextVNode(\\\"\\u52A0\\u8F7D\\u4E2D...\\\")\\n                    ]),\\n                    _: 1\\n                    /* STABLE */\\n                  })\\n                ]),\\n                default: _withCtx(() => [\\n                  _createVNode(_component_van_list, {\\n                    loading: listLoading.value,\\n                    \\\"onUpdate:loading\\\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\\n                    finished: finished.value,\\n                    \\\"immediate-check\\\": false,\\n                    \\\"finished-text\\\": \\\"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\\\",\\n                    onLoad\\n                  }, {\\n                    default: _withCtx(() => [\\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\\n                        _Fragment,\\n                        { key: 0 },\\n                        _renderList(messageData.value, (item, index) => {\\n                          return _openBlock(), _createBlock(\\n                            _component_van_swipe_cell,\\n                            {\\n                              key: item.id,\\n                              \\\"before-close\\\": beforeDeleteMessage\\n                            },\\n                            {\\n                              right: _withCtx(() => [\\n                                _createVNode(_component_van_button, {\\n                                  square: \\\"\\\",\\n                                  type: \\\"danger\\\",\\n                                  icon: \\\"delete-o\\\",\\n                                  onClick: ($event) => onDeleteMessage(item.id?.toString())\\n                                }, null, 8, [\\\"onClick\\\"])\\n                              ]),\\n                              default: _withCtx(() => [\\n                                _createElementVNode(\\\"div\\\", {\\n                                  class: _normalizeClass([\\\"message-item flex\\\", { \\\"message-item-end\\\": index === messageData.value.length - 1 }]),\\n                                  onClick: ($event) => handleClickMessage(item)\\n                                }, [\\n                                  showController.value ? (_openBlock(), _createElementBlock(\\n                                    \\\"i\\\",\\n                                    {\\n                                      key: 0,\\n                                      class: _normalizeClass(item.checked ? \\\"radio-checked\\\" : \\\"item-radio\\\")\\n                                    },\\n                                    null,\\n                                    2\\n                                    /* CLASS */\\n                                  )) : _createCommentVNode(\\\"v-if\\\", true),\\n                                  _createCommentVNode(' <i class=\\\"message\\\"></i> '),\\n                                  _createElementVNode(\\\"img\\\", {\\n                                    src: _unref(iconMessage),\\n                                    class: \\\"icon-message\\\"\\n                                  }, null, 8, _hoisted_4),\\n                                  _createElementVNode(\\\"div\\\", _hoisted_5, [\\n                                    _createElementVNode(\\\"div\\\", _hoisted_6, [\\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\\\"i\\\", _hoisted_7)) : _createCommentVNode(\\\"v-if\\\", true),\\n                                      _createElementVNode(\\n                                        \\\"div\\\",\\n                                        null,\\n                                        _toDisplayString(item.title),\\n                                        1\\n                                        /* TEXT */\\n                                      )\\n                                    ]),\\n                                    _createElementVNode(\\n                                      \\\"div\\\",\\n                                      _hoisted_8,\\n                                      _toDisplayString(item.cdesc),\\n                                      1\\n                                      /* TEXT */\\n                                    ),\\n                                    _createElementVNode(\\n                                      \\\"div\\\",\\n                                      _hoisted_9,\\n                                      _toDisplayString(item.add_time),\\n                                      1\\n                                      /* TEXT */\\n                                    )\\n                                  ])\\n                                ], 10, _hoisted_3)\\n                              ]),\\n                              _: 2\\n                              /* DYNAMIC */\\n                            },\\n                            1024\\n                            /* DYNAMIC_SLOTS */\\n                          );\\n                        }),\\n                        128\\n                        /* KEYED_FRAGMENT */\\n                      )) : _createCommentVNode(\\\"v-if\\\", true)\\n                    ]),\\n                    _: 1\\n                    /* STABLE */\\n                  }, 8, [\\\"loading\\\", \\\"finished\\\"]),\\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\\\"div\\\", _hoisted_10, [\\n                    _createElementVNode(\\\"img\\\", { src: _unref(noData) }, null, 8, _hoisted_11),\\n                    _hoisted_12\\n                  ])) : _createCommentVNode(\\\"v-if\\\", true)\\n                ]),\\n                _: 1\\n                /* STABLE */\\n              }, 8, [\\\"modelValue\\\"])\\n            ],\\n            2\\n            /* CLASS */\\n          ),\\n          _createElementVNode(\\n            \\\"div\\\",\\n            {\\n              class: _normalizeClass([\\\"btn-controller-container flex items-center justify-center hairline-border\\\", { \\\"show-controller\\\": showController.value }])\\n            },\\n            [\\n              _createVNode(_component_van_button, {\\n                type: \\\"primary\\\",\\n                class: \\\"btn-all-readed\\\",\\n                onClick: onBtnAllSelect\\n              }, {\\n                default: _withCtx(() => [\\n                  _createTextVNode(\\n                    _toDisplayString(btnAllSelectName.value),\\n                    1\\n                    /* TEXT */\\n                  )\\n                ]),\\n                _: 1\\n                /* STABLE */\\n              }),\\n              _createVNode(_component_van_button, {\\n                type: \\\"primary\\\",\\n                class: \\\"btn-all-select\\\",\\n                onClick: onRead\\n              }, {\\n                default: _withCtx(() => [\\n                  _createTextVNode(\\\" \\u5DF2\\u8BFB \\\")\\n                ]),\\n                _: 1\\n                /* STABLE */\\n              }),\\n              _createVNode(_component_van_button, {\\n                type: \\\"primary\\\",\\n                class: \\\"btn-delete\\\",\\n                onClick: onDelete\\n              }, {\\n                default: _withCtx(() => [\\n                  _createTextVNode(\\\" \\u5220\\u9664 \\\")\\n                ]),\\n                _: 1\\n                /* STABLE */\\n              })\\n            ],\\n            2\\n            /* CLASS */\\n          ),\\n          _createCommentVNode(\\\" \\u52A8\\u4F5C\\u9762\\u677F \\\"),\\n          _createElementVNode(\\\"div\\\", _hoisted_13, [\\n            _createVNode(_component_van_action_sheet, {\\n              show: showConfirmSheet.value,\\n              \\\"onUpdate:show\\\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\\n              actions,\\n              \\\"cancel-text\\\": \\\"\\u53D6\\u6D88\\\",\\n              description: description.value,\\n              \\\"close-on-click-action\\\": \\\"\\\",\\n              onCancel: onCancelConfirmSheet,\\n              \\\"lazy-render\\\": false,\\n              class: \\\"full-w-sheet\\\"\\n            }, null, 8, [\\\"show\\\", \\\"description\\\"])\\n          ])\\n        ],\\n        64\\n        /* STABLE_FRAGMENT */\\n      );\\n    };\\n  }\\n});\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:define",
      "start": 1714699771110,
      "end": 1714699771110,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699771110,
      "end": 1714699771110,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699771110,
      "end": 1714699771110,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699771110,
      "end": 1714699771110,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699771110,
      "end": 1714699771110,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699771111,
      "end": 1714699771111,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699771111,
      "end": 1714699771111,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699771111,
      "end": 1714699771111,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699771111,
      "end": 1714699771113,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */import { ActionSheet as __unplugin_components_7 } from 'vant/es';import 'vant/es/action-sheet/style/index';\nimport { PullRefresh as __unplugin_components_6 } from 'vant/es';import 'vant/es/pull-refresh/style/index';\nimport { List as __unplugin_components_5 } from 'vant/es';import 'vant/es/list/style/index';\nimport { SwipeCell as __unplugin_components_4 } from 'vant/es';import 'vant/es/swipe-cell/style/index';\nimport { Button as __unplugin_components_3 } from 'vant/es';import 'vant/es/button/style/index';\nimport { Loading as __unplugin_components_2 } from 'vant/es';import 'vant/es/loading/style/index';\nimport { Icon as __unplugin_components_1 } from 'vant/es';import 'vant/es/icon/style/index';\nimport __unplugin_components_0 from '/Users/afeng/Desktop/work/gdpayh5-web/src/components/Common/NavBar.vue';\n\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-9949fade\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"nav-bar\" };\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"i\",\n  { class: \"arrow-right-gray arrow-back\" },\n  null,\n  -1\n  /* HOISTED */\n));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = { class: \"item-content\" };\nconst _hoisted_6 = { class: \"item-title flex items-center\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n};\nconst _hoisted_8 = { class: \"item-cdesc\" };\nconst _hoisted_9 = { class: \"item-add_time\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"text-no-data text-center\" },\n  \"\\u6682\\u65E0\\u6570\\u636E\",\n  -1\n  /* HOISTED */\n));\nconst _hoisted_13 = { class: \"confirm-sheet-container\" };\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \"@/apis/article\";\nimport iconMessage from \"@/assets/images/common/message-gray.png\";\nimport noData from \"@/assets/images/common/noData.png\";\nimport verified from \"@/assets/images/common/verified.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"message\",\n  setup(__props) {\n    const router = useRouter();\n    const messageData = ref([]);\n    const isLoading = ref(false);\n    const showController = ref(false);\n    const isDisabledDelete = ref(true);\n    const showConfirmSheet = reactive({ type: 1, value: false });\n    const btnAllSelectName = ref(\"\\u5168\\u9009\");\n    const _ids = ref(\"\");\n    const page = ref(1);\n    const listLoading = ref(false);\n    const finished = ref(false);\n    const isRefreshing = ref(false);\n    const onLoad = () => {\n      getUserMessageList(\"load-more\");\n    };\n    const getAllMessageIds = (type) => {\n      _ids.value = messageData.value.reduce((prev, curr) => {\n        var _a;\n        if (type === \"checked\" && curr.checked || type === \"read\" && curr.checked && !curr.is_read) {\n          return (prev !== \"\" ? prev + \",\" : \"\") + (((_a = curr.id) == null ? void 0 : _a.toString()) || \"\");\n        }\n        return prev;\n      }, \"\");\n      return _ids.value;\n    };\n    const onDelMessage = async () => {\n      if (showConfirmSheet.type === 2) {\n        getAllMessageIds(\"checked\");\n      }\n      const res = await userMessageDelApi({\n        ids: _ids.value\n      });\n      if (res) {\n        if (showConfirmSheet.type === 2) {\n          onNavBtnClick();\n        }\n        showToast({\n          message: \"\\u5220\\u9664\\u6210\\u529F\",\n          icon: verified,\n          iconSize: \"48px\"\n        });\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\n        if (!messageData.value.length) {\n          page.value = 1;\n          getUserMessageList();\n        }\n      }\n    };\n    const actions = [{ name: \"\\u786E\\u8BA4\", callback: onDelMessage }];\n    const onCancelConfirmSheet = () => {\n      _ids.value = \"\";\n    };\n    const onRefreshChange = ({ status, distance }) => {\n    };\n    const getUserMessageList = async (type = \"\") => {\n      try {\n        if (isRefreshing.value)\n          return;\n        if (type === \"refresh\") {\n          page.value = 1;\n          isLoading.value = true;\n          isRefreshing.value = true;\n        } else if (type === \"load-more\") {\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\n        } else {\n          isLoading.value = true;\n        }\n        finished.value = false;\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\n        if (!res.count) {\n          messageData.value = [];\n          return;\n        }\n        const list = res.list.map((item) => {\n          item.checked = 0;\n          return item;\n        });\n        if (type === \"refresh\") {\n          messageData.value = list;\n        } else {\n          messageData.value.push(...list);\n        }\n        if (messageData.value.length < res.count) {\n          page.value++;\n        }\n        if (messageData.value.length === res.count) {\n          finished.value = true;\n        }\n        window.log(\"\\u6D88\\u606F\\u5217\\u8868\", res);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading.value = false;\n        listLoading.value = false;\n        isRefreshing.value = false;\n      }\n    };\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\n    const navBarRightText = computed(() => {\n      return showController.value ? \"\\u5B8C\\u6210\" : \"\\u64CD\\u4F5C\";\n    });\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\n    const onNavBtnClick = () => {\n      if (!messageData.value.length)\n        return;\n      if (!isDisabledDelete.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n        showController.value = false;\n      } else {\n        showController.value = !showController.value;\n      }\n    };\n    const handleClickMessage = (item) => {\n      if (showController.value) {\n        item.checked = item.checked === 1 ? 0 : 1;\n        return;\n      }\n      router.push(`/details/message/${item.id}`);\n    };\n    const description = ref(\"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\");\n    const onDeleteMessage = (ids) => {\n      description.value = \"\\u60A8\\u8981\\u5220\\u9664\\u6B64\\u6D88\\u606F\\u5417\\uFF1F\";\n      _ids.value = ids;\n    };\n    let confirmSheetTimer;\n    const beforeDeleteMessage = ({ position }) => {\n      switch (position) {\n        case \"cell\":\n          return true;\n        case \"outside\":\n          return !showConfirmSheet.value;\n        case \"right\":\n          return new Promise((resolve) => {\n            showConfirmSheet.type = 1;\n            showConfirmSheet.value = true;\n            const doCheckConfirmSheet = () => {\n              if (showConfirmSheet.value) {\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\n              } else {\n                resolve(true);\n              }\n            };\n            doCheckConfirmSheet();\n          });\n      }\n    };\n    const onRead = async () => {\n      try {\n        if (!hasUnread.value || !isSomeChecked.value)\n          return;\n        if (!getAllMessageIds(\"read\")) {\n          getUserMessageList();\n          showController.value = false;\n          return;\n        }\n        const res = await userMessageDetailsApi({\n          ids: _ids.value\n        });\n        if (res) {\n          showController.value = false;\n          messageData.value.forEach((item) => {\n            if (_ids.value.includes(item.id.toString())) {\n              item.is_read = 1;\n            }\n          });\n        }\n        window.log(\"\\u5168\\u90E8\\u5DF2\\u8BFB\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const onBtnAllSelect = () => {\n      if (isAllChecked.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n      } else {\n        messageData.value.forEach((item) => item.checked = 1);\n      }\n    };\n    const onDelete = () => {\n      if (isDisabledDelete.value)\n        return;\n      description.value = \"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\";\n      showConfirmSheet.type = 2;\n      showConfirmSheet.value = true;\n    };\n    watch(\n      messageData,\n      (value, oldValue) => {\n        let checkedNum = 0;\n        messageData.value.forEach((item) => {\n          if (item.checked) {\n            checkedNum++;\n          }\n        });\n        isDisabledDelete.value = !checkedNum;\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \"\\u53D6\\u6D88\\u5168\\u9009\" : \"\\u5168\\u9009\";\n      },\n      {\n        deep: true\n      }\n    );\n    onMounted(() => {\n      getUserMessageList();\n      mitt.emit(\"action-sheet-show\");\n    });\n    onBeforeUnmount(() => {\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\n    });\n    return (_ctx, _cache) => {\n      const _component_nav_bar = __unplugin_components_0;\n      const _component_van_icon = __unplugin_components_1;\n      const _component_van_loading = __unplugin_components_2;\n      const _component_van_button = __unplugin_components_3;\n      const _component_van_swipe_cell = __unplugin_components_4;\n      const _component_van_list = __unplugin_components_5;\n      const _component_van_pull_refresh = __unplugin_components_6;\n      const _component_van_action_sheet = __unplugin_components_7;\n      return _openBlock(), _createElementBlock(\n        _Fragment,\n        null,\n        [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(_component_nav_bar, {\n              title: \"\\u6D88\\u606F\",\n              mode: \"white\"\n            }, {\n              left: _withCtx(() => [\n                _hoisted_2\n              ]),\n              right: _withCtx(() => [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"btn-text\",\n                    onClick: onNavBtnClick\n                  },\n                  _toDisplayString(navBarRightText.value),\n                  1\n                  /* TEXT */\n                )\n              ]),\n              _: 1\n              /* STABLE */\n            })\n          ]),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"message-container\", { \"with-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_pull_refresh, {\n                modelValue: isLoading.value,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\n                \"success-text\": \"\\u5237\\u65B0\\u6210\\u529F\",\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\"refresh\")),\n                onChange: onRefreshChange\n              }, {\n                pulling: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loosing: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loading: _withCtx(() => [\n                  _createVNode(_component_van_loading, { size: \"24px\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"\\u52A0\\u8F7D\\u4E2D...\")\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  })\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_van_list, {\n                    loading: listLoading.value,\n                    \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\n                    finished: finished.value,\n                    \"immediate-check\": false,\n                    \"finished-text\": \"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\",\n                    onLoad\n                  }, {\n                    default: _withCtx(() => [\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\n                        _Fragment,\n                        { key: 0 },\n                        _renderList(messageData.value, (item, index) => {\n                          return _openBlock(), _createBlock(\n                            _component_van_swipe_cell,\n                            {\n                              key: item.id,\n                              \"before-close\": beforeDeleteMessage\n                            },\n                            {\n                              right: _withCtx(() => [\n                                _createVNode(_component_van_button, {\n                                  square: \"\",\n                                  type: \"danger\",\n                                  icon: \"delete-o\",\n                                  onClick: ($event) => {\n                                    var _a;\n                                    return onDeleteMessage((_a = item.id) == null ? void 0 : _a.toString());\n                                  }\n                                }, null, 8, [\"onClick\"])\n                              ]),\n                              default: _withCtx(() => [\n                                _createElementVNode(\"div\", {\n                                  class: _normalizeClass([\"message-item flex\", { \"message-item-end\": index === messageData.value.length - 1 }]),\n                                  onClick: ($event) => handleClickMessage(item)\n                                }, [\n                                  showController.value ? (_openBlock(), _createElementBlock(\n                                    \"i\",\n                                    {\n                                      key: 0,\n                                      class: _normalizeClass(item.checked ? \"radio-checked\" : \"item-radio\")\n                                    },\n                                    null,\n                                    2\n                                    /* CLASS */\n                                  )) : _createCommentVNode(\"v-if\", true),\n                                  _createCommentVNode(' <i class=\"message\"></i> '),\n                                  _createElementVNode(\"img\", {\n                                    src: _unref(iconMessage),\n                                    class: \"icon-message\"\n                                  }, null, 8, _hoisted_4),\n                                  _createElementVNode(\"div\", _hoisted_5, [\n                                    _createElementVNode(\"div\", _hoisted_6, [\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true),\n                                      _createElementVNode(\n                                        \"div\",\n                                        null,\n                                        _toDisplayString(item.title),\n                                        1\n                                        /* TEXT */\n                                      )\n                                    ]),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_8,\n                                      _toDisplayString(item.cdesc),\n                                      1\n                                      /* TEXT */\n                                    ),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_9,\n                                      _toDisplayString(item.add_time),\n                                      1\n                                      /* TEXT */\n                                    )\n                                  ])\n                                ], 10, _hoisted_3)\n                              ]),\n                              _: 2\n                              /* DYNAMIC */\n                            },\n                            1024\n                            /* DYNAMIC_SLOTS */\n                          );\n                        }),\n                        128\n                        /* KEYED_FRAGMENT */\n                      )) : _createCommentVNode(\"v-if\", true)\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  }, 8, [\"loading\", \"finished\"]),\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createElementVNode(\"img\", { src: _unref(noData) }, null, 8, _hoisted_11),\n                    _hoisted_12\n                  ])) : _createCommentVNode(\"v-if\", true)\n                ]),\n                _: 1\n                /* STABLE */\n              }, 8, [\"modelValue\"])\n            ],\n            2\n            /* CLASS */\n          ),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { \"show-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-readed\",\n                onClick: onBtnAllSelect\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\n                    _toDisplayString(btnAllSelectName.value),\n                    1\n                    /* TEXT */\n                  )\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-select\",\n                onClick: onRead\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5DF2\\u8BFB \")\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-delete\",\n                onClick: onDelete\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5220\\u9664 \")\n                ]),\n                _: 1\n                /* STABLE */\n              })\n            ],\n            2\n            /* CLASS */\n          ),\n          _createCommentVNode(\" \\u52A8\\u4F5C\\u9762\\u677F \"),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createVNode(_component_van_action_sheet, {\n              show: showConfirmSheet.value,\n              \"onUpdate:show\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\n              actions,\n              \"cancel-text\": \"\\u53D6\\u6D88\",\n              description: description.value,\n              \"close-on-click-action\": \"\",\n              onCancel: onCancelConfirmSheet,\n              \"lazy-render\": false,\n              class: \"full-w-sheet\"\n            }, null, 8, [\"show\", \"description\"])\n          ])\n        ],\n        64\n        /* STABLE_FRAGMENT */\n      );\n    };\n  }\n});\n",
      "start": 1714699771113,
      "end": 1714699771113,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/pages/Mine/message.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, unref as _unref, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-9949fade\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"nav-bar\" };\nconst _hoisted_2 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"i\",\n  { class: \"arrow-right-gray arrow-back\" },\n  null,\n  -1\n  /* HOISTED */\n));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = { class: \"item-content\" };\nconst _hoisted_6 = { class: \"item-title flex items-center\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"unread\"\n};\nconst _hoisted_8 = { class: \"item-cdesc\" };\nconst _hoisted_9 = { class: \"item-add_time\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"no-data flex flex-col items-center justify-center\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"text-no-data text-center\" },\n  \"\\u6682\\u65E0\\u6570\\u636E\",\n  -1\n  /* HOISTED */\n));\nconst _hoisted_13 = { class: \"confirm-sheet-container\" };\nimport { userMessageDelApi, userMessageDetailsApi, userMessageListApi } from \"@/apis/article\";\nimport iconMessage from \"@/assets/images/common/message-gray.png\";\nimport noData from \"@/assets/images/common/noData.png\";\nimport verified from \"@/assets/images/common/verified.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onBeforeUnmount, onMounted, reactive, ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"message\",\n  setup(__props) {\n    const router = useRouter();\n    const messageData = ref([]);\n    const isLoading = ref(false);\n    const showController = ref(false);\n    const isDisabledDelete = ref(true);\n    const showConfirmSheet = reactive({ type: 1, value: false });\n    const btnAllSelectName = ref(\"\\u5168\\u9009\");\n    const _ids = ref(\"\");\n    const page = ref(1);\n    const listLoading = ref(false);\n    const finished = ref(false);\n    const isRefreshing = ref(false);\n    const onLoad = () => {\n      getUserMessageList(\"load-more\");\n    };\n    const getAllMessageIds = (type) => {\n      _ids.value = messageData.value.reduce((prev, curr) => {\n        var _a;\n        if (type === \"checked\" && curr.checked || type === \"read\" && curr.checked && !curr.is_read) {\n          return (prev !== \"\" ? prev + \",\" : \"\") + (((_a = curr.id) == null ? void 0 : _a.toString()) || \"\");\n        }\n        return prev;\n      }, \"\");\n      return _ids.value;\n    };\n    const onDelMessage = async () => {\n      if (showConfirmSheet.type === 2) {\n        getAllMessageIds(\"checked\");\n      }\n      const res = await userMessageDelApi({\n        ids: _ids.value\n      });\n      if (res) {\n        if (showConfirmSheet.type === 2) {\n          onNavBtnClick();\n        }\n        showToast({\n          message: \"\\u5220\\u9664\\u6210\\u529F\",\n          icon: verified,\n          iconSize: \"48px\"\n        });\n        messageData.value = messageData.value.filter((item) => !_ids.value.includes(item.id.toString()));\n        if (!messageData.value.length) {\n          page.value = 1;\n          getUserMessageList();\n        }\n      }\n    };\n    const actions = [{ name: \"\\u786E\\u8BA4\", callback: onDelMessage }];\n    const onCancelConfirmSheet = () => {\n      _ids.value = \"\";\n    };\n    const onRefreshChange = ({ status, distance }) => {\n    };\n    const getUserMessageList = async (type = \"\") => {\n      try {\n        if (isRefreshing.value)\n          return;\n        if (type === \"refresh\") {\n          page.value = 1;\n          isLoading.value = true;\n          isRefreshing.value = true;\n        } else if (type === \"load-more\") {\n          listLoading.value = page.value !== 1 && !!messageData.value.length;\n        } else {\n          isLoading.value = true;\n        }\n        finished.value = false;\n        const res = await userMessageListApi({ page: page.value, limit: 10 });\n        if (!res.count) {\n          messageData.value = [];\n          return;\n        }\n        const list = res.list.map((item) => {\n          item.checked = 0;\n          return item;\n        });\n        if (type === \"refresh\") {\n          messageData.value = list;\n        } else {\n          messageData.value.push(...list);\n        }\n        if (messageData.value.length < res.count) {\n          page.value++;\n        }\n        if (messageData.value.length === res.count) {\n          finished.value = true;\n        }\n        window.log(\"\\u6D88\\u606F\\u5217\\u8868\", res);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading.value = false;\n        listLoading.value = false;\n        isRefreshing.value = false;\n      }\n    };\n    const hasUnread = computed(() => messageData.value.some((item) => !item.is_read));\n    const navBarRightText = computed(() => {\n      return showController.value ? \"\\u5B8C\\u6210\" : \"\\u64CD\\u4F5C\";\n    });\n    const isAllChecked = computed(() => messageData.value.every((item) => item.checked));\n    const isSomeChecked = computed(() => messageData.value.some((item) => item.checked));\n    const onNavBtnClick = () => {\n      if (!messageData.value.length)\n        return;\n      if (!isDisabledDelete.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n        showController.value = false;\n      } else {\n        showController.value = !showController.value;\n      }\n    };\n    const handleClickMessage = (item) => {\n      if (showController.value) {\n        item.checked = item.checked === 1 ? 0 : 1;\n        return;\n      }\n      router.push(`/details/message/${item.id}`);\n    };\n    const description = ref(\"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\");\n    const onDeleteMessage = (ids) => {\n      description.value = \"\\u60A8\\u8981\\u5220\\u9664\\u6B64\\u6D88\\u606F\\u5417\\uFF1F\";\n      _ids.value = ids;\n    };\n    let confirmSheetTimer;\n    const beforeDeleteMessage = ({ position }) => {\n      switch (position) {\n        case \"cell\":\n          return true;\n        case \"outside\":\n          return !showConfirmSheet.value;\n        case \"right\":\n          return new Promise((resolve) => {\n            showConfirmSheet.type = 1;\n            showConfirmSheet.value = true;\n            const doCheckConfirmSheet = () => {\n              if (showConfirmSheet.value) {\n                confirmSheetTimer && clearTimeout(confirmSheetTimer);\n                confirmSheetTimer = setTimeout(doCheckConfirmSheet, 0);\n              } else {\n                resolve(true);\n              }\n            };\n            doCheckConfirmSheet();\n          });\n      }\n    };\n    const onRead = async () => {\n      try {\n        if (!hasUnread.value || !isSomeChecked.value)\n          return;\n        if (!getAllMessageIds(\"read\")) {\n          getUserMessageList();\n          showController.value = false;\n          return;\n        }\n        const res = await userMessageDetailsApi({\n          ids: _ids.value\n        });\n        if (res) {\n          showController.value = false;\n          messageData.value.forEach((item) => {\n            if (_ids.value.includes(item.id.toString())) {\n              item.is_read = 1;\n            }\n          });\n        }\n        window.log(\"\\u5168\\u90E8\\u5DF2\\u8BFB\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const onBtnAllSelect = () => {\n      if (isAllChecked.value) {\n        messageData.value.forEach((item) => item.checked = 0);\n      } else {\n        messageData.value.forEach((item) => item.checked = 1);\n      }\n    };\n    const onDelete = () => {\n      if (isDisabledDelete.value)\n        return;\n      description.value = \"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u4FE1\\u606F\\u5417\\uFF1F\";\n      showConfirmSheet.type = 2;\n      showConfirmSheet.value = true;\n    };\n    watch(\n      messageData,\n      (value, oldValue) => {\n        let checkedNum = 0;\n        messageData.value.forEach((item) => {\n          if (item.checked) {\n            checkedNum++;\n          }\n        });\n        isDisabledDelete.value = !checkedNum;\n        btnAllSelectName.value = checkedNum === messageData.value.length ? \"\\u53D6\\u6D88\\u5168\\u9009\" : \"\\u5168\\u9009\";\n      },\n      {\n        deep: true\n      }\n    );\n    onMounted(() => {\n      getUserMessageList();\n      mitt.emit(\"action-sheet-show\");\n    });\n    onBeforeUnmount(() => {\n      confirmSheetTimer && clearTimeout(confirmSheetTimer);\n    });\n    return (_ctx, _cache) => {\n      const _component_nav_bar = _resolveComponent(\"nav-bar\");\n      const _component_van_icon = _resolveComponent(\"van-icon\");\n      const _component_van_loading = _resolveComponent(\"van-loading\");\n      const _component_van_button = _resolveComponent(\"van-button\");\n      const _component_van_swipe_cell = _resolveComponent(\"van-swipe-cell\");\n      const _component_van_list = _resolveComponent(\"van-list\");\n      const _component_van_pull_refresh = _resolveComponent(\"van-pull-refresh\");\n      const _component_van_action_sheet = _resolveComponent(\"van-action-sheet\");\n      return _openBlock(), _createElementBlock(\n        _Fragment,\n        null,\n        [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createVNode(_component_nav_bar, {\n              title: \"\\u6D88\\u606F\",\n              mode: \"white\"\n            }, {\n              left: _withCtx(() => [\n                _hoisted_2\n              ]),\n              right: _withCtx(() => [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"btn-text\",\n                    onClick: onNavBtnClick\n                  },\n                  _toDisplayString(navBarRightText.value),\n                  1\n                  /* TEXT */\n                )\n              ]),\n              _: 1\n              /* STABLE */\n            })\n          ]),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"message-container\", { \"with-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_pull_refresh, {\n                modelValue: isLoading.value,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => isLoading.value = $event),\n                \"success-text\": \"\\u5237\\u65B0\\u6210\\u529F\",\n                onRefresh: _cache[2] || (_cache[2] = ($event) => getUserMessageList(\"refresh\")),\n                onChange: onRefreshChange\n              }, {\n                pulling: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loosing: _withCtx((props) => [\n                  _createVNode(_component_van_icon, {\n                    name: \"replay\",\n                    size: \"24\",\n                    style: _normalizeStyle({ transform: `rotateZ(${props.distance / 50 * 360}deg)` })\n                  }, null, 8, [\"style\"])\n                ]),\n                loading: _withCtx(() => [\n                  _createVNode(_component_van_loading, { size: \"24px\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"\\u52A0\\u8F7D\\u4E2D...\")\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  })\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_van_list, {\n                    loading: listLoading.value,\n                    \"onUpdate:loading\": _cache[0] || (_cache[0] = ($event) => listLoading.value = $event),\n                    finished: finished.value,\n                    \"immediate-check\": false,\n                    \"finished-text\": \"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\",\n                    onLoad\n                  }, {\n                    default: _withCtx(() => [\n                      messageData.value.length && !isLoading.value ? (_openBlock(true), _createElementBlock(\n                        _Fragment,\n                        { key: 0 },\n                        _renderList(messageData.value, (item, index) => {\n                          return _openBlock(), _createBlock(\n                            _component_van_swipe_cell,\n                            {\n                              key: item.id,\n                              \"before-close\": beforeDeleteMessage\n                            },\n                            {\n                              right: _withCtx(() => [\n                                _createVNode(_component_van_button, {\n                                  square: \"\",\n                                  type: \"danger\",\n                                  icon: \"delete-o\",\n                                  onClick: ($event) => {\n                                    var _a;\n                                    return onDeleteMessage((_a = item.id) == null ? void 0 : _a.toString());\n                                  }\n                                }, null, 8, [\"onClick\"])\n                              ]),\n                              default: _withCtx(() => [\n                                _createElementVNode(\"div\", {\n                                  class: _normalizeClass([\"message-item flex\", { \"message-item-end\": index === messageData.value.length - 1 }]),\n                                  onClick: ($event) => handleClickMessage(item)\n                                }, [\n                                  showController.value ? (_openBlock(), _createElementBlock(\n                                    \"i\",\n                                    {\n                                      key: 0,\n                                      class: _normalizeClass(item.checked ? \"radio-checked\" : \"item-radio\")\n                                    },\n                                    null,\n                                    2\n                                    /* CLASS */\n                                  )) : _createCommentVNode(\"v-if\", true),\n                                  _createCommentVNode(' <i class=\"message\"></i> '),\n                                  _createElementVNode(\"img\", {\n                                    src: _unref(iconMessage),\n                                    class: \"icon-message\"\n                                  }, null, 8, _hoisted_4),\n                                  _createElementVNode(\"div\", _hoisted_5, [\n                                    _createElementVNode(\"div\", _hoisted_6, [\n                                      !item.is_read ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true),\n                                      _createElementVNode(\n                                        \"div\",\n                                        null,\n                                        _toDisplayString(item.title),\n                                        1\n                                        /* TEXT */\n                                      )\n                                    ]),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_8,\n                                      _toDisplayString(item.cdesc),\n                                      1\n                                      /* TEXT */\n                                    ),\n                                    _createElementVNode(\n                                      \"div\",\n                                      _hoisted_9,\n                                      _toDisplayString(item.add_time),\n                                      1\n                                      /* TEXT */\n                                    )\n                                  ])\n                                ], 10, _hoisted_3)\n                              ]),\n                              _: 2\n                              /* DYNAMIC */\n                            },\n                            1024\n                            /* DYNAMIC_SLOTS */\n                          );\n                        }),\n                        128\n                        /* KEYED_FRAGMENT */\n                      )) : _createCommentVNode(\"v-if\", true)\n                    ]),\n                    _: 1\n                    /* STABLE */\n                  }, 8, [\"loading\", \"finished\"]),\n                  !messageData.value.length && !isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createElementVNode(\"img\", { src: _unref(noData) }, null, 8, _hoisted_11),\n                    _hoisted_12\n                  ])) : _createCommentVNode(\"v-if\", true)\n                ]),\n                _: 1\n                /* STABLE */\n              }, 8, [\"modelValue\"])\n            ],\n            2\n            /* CLASS */\n          ),\n          _createElementVNode(\n            \"div\",\n            {\n              class: _normalizeClass([\"btn-controller-container flex items-center justify-center hairline-border\", { \"show-controller\": showController.value }])\n            },\n            [\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-readed\",\n                onClick: onBtnAllSelect\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\n                    _toDisplayString(btnAllSelectName.value),\n                    1\n                    /* TEXT */\n                  )\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-all-select\",\n                onClick: onRead\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5DF2\\u8BFB \")\n                ]),\n                _: 1\n                /* STABLE */\n              }),\n              _createVNode(_component_van_button, {\n                type: \"primary\",\n                class: \"btn-delete\",\n                onClick: onDelete\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" \\u5220\\u9664 \")\n                ]),\n                _: 1\n                /* STABLE */\n              })\n            ],\n            2\n            /* CLASS */\n          ),\n          _createCommentVNode(\" \\u52A8\\u4F5C\\u9762\\u677F \"),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createVNode(_component_van_action_sheet, {\n              show: showConfirmSheet.value,\n              \"onUpdate:show\": _cache[3] || (_cache[3] = ($event) => showConfirmSheet.value = $event),\n              actions,\n              \"cancel-text\": \"\\u53D6\\u6D88\",\n              description: description.value,\n              \"close-on-click-action\": \"\",\n              onCancel: onCancelConfirmSheet,\n              \"lazy-render\": false,\n              class: \"full-w-sheet\"\n            }, null, 8, [\"show\", \"description\"])\n          ])\n        ],\n        64\n        /* STABLE_FRAGMENT */\n      );\n    };\n  }\n});\n"
        ],
        "names": [],
        "mappingsiCAAiC,uBAA4B;AAC7D,kCAAkC,uBAA6B;AAC/D,qCAAqC,uBAAgC;AACrE,oCAAoC,uBAA+B;AACnE,wCAAwC,uBAAmC;AAC3E,kCAAkC,uBAA6B;AAC/D,0CAA0C,uBAAqC;AAC/E,0CAA0C,uBAAq
      }
    },
    {
      "name": "vite:style-import",
      "start": 1714699771113,
      "end": 1714699771113,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699771114,
      "end": 1714699771114,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699771114,
      "end": 1714699771114,
      "order": "normal"
    }
  ]
}
