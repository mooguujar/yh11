{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/calendar/CalendarDay.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { makeNumberProp, createNamespace, makeRequiredProp } from \"../utils/index.mjs\";\nimport { bem } from \"./utils.mjs\";\nconst [name] = createNamespace(\"calendar-day\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    item: makeRequiredProp(Object),\n    color: String,\n    index: Number,\n    offset: makeNumberProp(0),\n    rowHeight: String\n  },\n  emits: [\"click\", \"clickDisabledDate\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const style = computed(() => {\n      var _a;\n      const {\n        item,\n        index,\n        color,\n        offset,\n        rowHeight\n      } = props;\n      const style2 = {\n        height: rowHeight\n      };\n      if (item.type === \"placeholder\") {\n        style2.width = \"100%\";\n        return style2;\n      }\n      if (index === 0) {\n        style2.marginLeft = `${100 * offset / 7}%`;\n      }\n      if (color) {\n        switch (item.type) {\n          case \"end\":\n          case \"start\":\n          case \"start-end\":\n          case \"multiple-middle\":\n          case \"multiple-selected\":\n            style2.background = color;\n            break;\n          case \"middle\":\n            style2.color = color;\n            break;\n        }\n      }\n      if (offset + (((_a = item.date) == null ? void 0 : _a.getDate()) || 1) > 28) {\n        style2.marginBottom = 0;\n      }\n      return style2;\n    });\n    const onClick = () => {\n      if (props.item.type !== \"disabled\") {\n        emit(\"click\", props.item);\n      } else {\n        emit(\"clickDisabledDate\", props.item);\n      }\n    };\n    const renderTopInfo = () => {\n      const {\n        topInfo\n      } = props.item;\n      if (topInfo || slots[\"top-info\"]) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"top-info\")\n        }, [slots[\"top-info\"] ? slots[\"top-info\"](props.item) : topInfo]);\n      }\n    };\n    const renderBottomInfo = () => {\n      const {\n        bottomInfo\n      } = props.item;\n      if (bottomInfo || slots[\"bottom-info\"]) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"bottom-info\")\n        }, [slots[\"bottom-info\"] ? slots[\"bottom-info\"](props.item) : bottomInfo]);\n      }\n    };\n    const renderContent = () => {\n      const {\n        item,\n        color,\n        rowHeight\n      } = props;\n      const {\n        type,\n        text\n      } = item;\n      const Nodes = [renderTopInfo(), text, renderBottomInfo()];\n      if (type === \"selected\") {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"selected-day\"),\n          \"style\": {\n            width: rowHeight,\n            height: rowHeight,\n            background: color\n          }\n        }, [Nodes]);\n      }\n      return Nodes;\n    };\n    return () => {\n      const {\n        type,\n        className\n      } = props.item;\n      if (type === \"placeholder\") {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"day\"),\n          \"style\": style.value\n        }, null);\n      }\n      return _createVNode(\"div\", {\n        \"role\": \"gridcell\",\n        \"style\": style.value,\n        \"class\": [bem(\"day\", type), className],\n        \"tabindex\": type === \"disabled\" ? void 0 : -1,\n        \"onClick\": onClick\n      }, [renderContent()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1714699768245,
      "end": 1714699768292,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768292,
      "end": 1714699768292,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768292,
      "end": 1714699768292,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768292,
      "end": 1714699768292,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { makeNumberProp, createNamespace, makeRequiredProp } from \"../utils/index.mjs\";\nimport { bem } from \"./utils.mjs\";\nconst [name] = createNamespace(\"calendar-day\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    item: makeRequiredProp(Object),\n    color: String,\n    index: Number,\n    offset: makeNumberProp(0),\n    rowHeight: String\n  },\n  emits: [\"click\", \"clickDisabledDate\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const style = computed(() => {\n      var _a;\n      const {\n        item,\n        index,\n        color,\n        offset,\n        rowHeight\n      } = props;\n      const style2 = {\n        height: rowHeight\n      };\n      if (item.type === \"placeholder\") {\n        style2.width = \"100%\";\n        return style2;\n      }\n      if (index === 0) {\n        style2.marginLeft = `${100 * offset / 7}%`;\n      }\n      if (color) {\n        switch (item.type) {\n          case \"end\":\n          case \"start\":\n          case \"start-end\":\n          case \"multiple-middle\":\n          case \"multiple-selected\":\n            style2.background = color;\n            break;\n          case \"middle\":\n            style2.color = color;\n            break;\n        }\n      }\n      if (offset + (((_a = item.date) == null ? void 0 : _a.getDate()) || 1) > 28) {\n        style2.marginBottom = 0;\n      }\n      return style2;\n    });\n    const onClick = () => {\n      if (props.item.type !== \"disabled\") {\n        emit(\"click\", props.item);\n      } else {\n        emit(\"clickDisabledDate\", props.item);\n      }\n    };\n    const renderTopInfo = () => {\n      const {\n        topInfo\n      } = props.item;\n      if (topInfo || slots[\"top-info\"]) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"top-info\")\n        }, [slots[\"top-info\"] ? slots[\"top-info\"](props.item) : topInfo]);\n      }\n    };\n    const renderBottomInfo = () => {\n      const {\n        bottomInfo\n      } = props.item;\n      if (bottomInfo || slots[\"bottom-info\"]) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"bottom-info\")\n        }, [slots[\"bottom-info\"] ? slots[\"bottom-info\"](props.item) : bottomInfo]);\n      }\n    };\n    const renderContent = () => {\n      const {\n        item,\n        color,\n        rowHeight\n      } = props;\n      const {\n        type,\n        text\n      } = item;\n      const Nodes = [renderTopInfo(), text, renderBottomInfo()];\n      if (type === \"selected\") {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"selected-day\"),\n          \"style\": {\n            width: rowHeight,\n            height: rowHeight,\n            background: color\n          }\n        }, [Nodes]);\n      }\n      return Nodes;\n    };\n    return () => {\n      const {\n        type,\n        className\n      } = props.item;\n      if (type === \"placeholder\") {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"day\"),\n          \"style\": style.value\n        }, null);\n      }\n      return _createVNode(\"div\", {\n        \"role\": \"gridcell\",\n        \"style\": style.value,\n        \"class\": [bem(\"day\", type), className],\n        \"tabindex\": type === \"disabled\" ? void 0 : -1,\n        \"onClick\": onClick\n      }, [renderContent()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768293,
      "end": 1714699768293,
      "order": "normal"
    }
  ]
}
