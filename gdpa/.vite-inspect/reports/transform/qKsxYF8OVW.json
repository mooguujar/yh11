{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/utils/create.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { get, isFunction } from \"./basic.mjs\";\nimport { camelize } from \"./format.mjs\";\nimport locale from \"../locale/index.mjs\";\nfunction createTranslate(name) {\n  const prefix = camelize(name) + \".\";\n  return (path, ...args) => {\n    const messages = locale.messages();\n    const message = get(messages, prefix + path) || get(messages, path);\n    return isFunction(message) ? message(...args) : message;\n  };\n}\nfunction genBem(name, mods) {\n  if (!mods) {\n    return \"\";\n  }\n  if (typeof mods === \"string\") {\n    return ` ${name}--${mods}`;\n  }\n  if (Array.isArray(mods)) {\n    return mods.reduce(\n      (ret, item) => ret + genBem(name, item),\n      \"\"\n    );\n  }\n  return Object.keys(mods).reduce(\n    (ret, key) => ret + (mods[key] ? genBem(name, key) : \"\"),\n    \"\"\n  );\n}\nfunction createBEM(name) {\n  return (el, mods) => {\n    if (el && typeof el !== \"string\") {\n      mods = el;\n      el = \"\";\n    }\n    el = el ? `${name}__${el}` : name;\n    return `${el}${genBem(el, mods)}`;\n  };\n}\nfunction createNamespace(name) {\n  const prefixedName = `van-${name}`;\n  return [\n    prefixedName,\n    createBEM(prefixedName),\n    createTranslate(prefixedName)\n  ];\n}\nexport {\n  createBEM,\n  createNamespace,\n  createTranslate\n};\n",
      "start": 1714699767787,
      "end": 1714699767869,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { get, isFunction } from \"./basic.mjs\";\nimport { camelize } from \"./format.mjs\";\nimport locale from \"../locale/index.mjs\";\nfunction createTranslate(name) {\n  const prefix = camelize(name) + \".\";\n  return (path, ...args) => {\n    const messages = locale.messages();\n    const message = get(messages, prefix + path) || get(messages, path);\n    return isFunction(message) ? message(...args) : message;\n  };\n}\nfunction genBem(name, mods) {\n  if (!mods) {\n    return \"\";\n  }\n  if (typeof mods === \"string\") {\n    return ` ${name}--${mods}`;\n  }\n  if (Array.isArray(mods)) {\n    return mods.reduce(\n      (ret, item) => ret + genBem(name, item),\n      \"\"\n    );\n  }\n  return Object.keys(mods).reduce(\n    (ret, key) => ret + (mods[key] ? genBem(name, key) : \"\"),\n    \"\"\n  );\n}\nfunction createBEM(name) {\n  return (el, mods) => {\n    if (el && typeof el !== \"string\") {\n      mods = el;\n      el = \"\";\n    }\n    el = el ? `${name}__${el}` : name;\n    return `${el}${genBem(el, mods)}`;\n  };\n}\nfunction createNamespace(name) {\n  const prefixedName = `van-${name}`;\n  return [\n    prefixedName,\n    createBEM(prefixedName),\n    createTranslate(prefixedName)\n  ];\n}\nexport {\n  createBEM,\n  createNamespace,\n  createTranslate\n};\n",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767869,
      "end": 1714699767869,
      "order": "normal"
    }
  ]
}
