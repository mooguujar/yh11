{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n",
      "start": 1714699768713,
      "end": 1714699768726,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768726,
      "end": 1714699768726,
      "order": "normal"
    }
  ]
}
