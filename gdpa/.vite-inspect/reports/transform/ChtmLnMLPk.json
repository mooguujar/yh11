{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/store/modules/auth/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\n  CountryParams,\n  H5InitApi,\n  IH5initParams,\n  LoginParams,\n  RegisterParams,\n  getCountryCode,\n  loginApi,\n  registerApi\n} from '@/apis/auth'\nimport { getUserCoinApi, getUserCoinsParams, getUserInfoApi, getUserInfoApi2 } from '@/apis/user'\nimport { ICoin } from '@/store/types/coin'\nimport { isEqualWith } from 'lodash-es'\nimport { defineStore } from 'pinia'\nimport { AuthState, ICountryCoin } from '../../types/auth'\nimport { useArticleStore } from '../article'\nimport { useTaskActivityStore } from '../taskActivity'\n\nexport const useAuthStore = defineStore('auth', {\n  state: () =>\n    ({\n      Websocket: null,\n      token: '',\n      userInfo: {},\n      editreview: {},\n      processnum: {\n        buy: 0,\n        buy_orders: [],\n        sell: 0,\n        sell_orders: [],\n        total: 0\n      },\n      countryCode: {\n        country_coin: [],\n        lastGetTime: 0,\n        current: {}\n      },\n      coins: []\n    } as AuthState),\n  getters: {\n    isLogin(state): boolean {\n      return !!state.token\n    },\n    isSetPayPassword(state): boolean {\n      return state?.userInfo?.is_set_paypassword === 1\n    },\n    // 用户积分\n    getUserPoint(state) {\n      return state.coins.find(item => item.mtype === 20)\n    },\n    // 根据mtype参数获取对应coins信息\n    getUserMoneyByMType(state) {\n      const userMoney = state.coins.filter(item => item.mtype)\n      return (mtype: number) => userMoney.find(item => item.mtype === mtype) || ({} as ICoin)\n    },\n    // 不可用资金，手动计算=》 总资金 - 可用资金\n    getFreezeMoney(state) {\n      return (mtype: number) => {\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype) as ICoin\n        return +coincash - +available_coincash\n      }\n    }\n  },\n  actions: {\n    updateEntryState(partial: Partial<AuthState>) {\n      this.$patch(partial)\n    },\n    async getH5init(params: IH5initParams) {\n      try {\n        // 请求前先清空\n        this.token = ''\n\n        const response = await H5InitApi(params)\n\n        if (response.token) {\n          sessionStorage.setItem('vtoken', params.vtoken)\n          sessionStorage.setItem('deviceid', params.deviceid)\n          localStorage.setItem('token', response.token)\n          localStorage.setItem('md5_pri', response.md5_pri)\n          sessionStorage.setItem('md5_pri', response.md5_pri)\n\n          const localTimestamp = Math.round(Date.now() / 1000)\n          const timestampDiff = localTimestamp - +response.sys_time\n          // 记录本地时间和服务系统时间偏移值\n          sessionStorage.setItem('timestamp_diff', timestampDiff.toString())\n          // 获取到token后，才能渲染视图\n          this.token = response.token\n        }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getLoginApi(params: LoginParams) {\n      try {\n        const response = await loginApi(params)\n        const { mobile, pass } = params\n\n        // const _mobile = mobile.replace(phoneCode, '')\n        // const currentCountryInfo = this.countryCode.country_coin.find(\n        //   (item: ICountryCoin) => item.country_code === countryCode\n        // )\n\n        this.token = response.token\n\n        if (!!!this.token) return false\n        localStorage.setItem('token', response.token)\n        this.userInfo = { ...response.info, mobile, pass }\n        this.editreview = response.editreview\n        // this.countryCode = { ...this.countryCode, current: currentCountryInfo }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getRegisterApi(params: RegisterParams) {\n      try {\n        const response = await registerApi(params)\n\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params\n\n        const _mobile = mobile.replace(phoneCode as string, '')\n        const currentCountryInfo = this.countryCode.country_coin.find(\n          (item: ICountryCoin) => item.country_code === countryCode\n        )\n\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass }\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo as ICountryCoin }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getCountryCodeApi(params: CountryParams) {\n      try {\n        const response = await getCountryCode(params)\n        this.countryCode = response\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 累计任务列表\n    async getUserCoin(params: getUserCoinsParams) {\n      try {\n        const response = await getUserCoinApi(params)\n\n        if (response && !isEqualWith(this.coins, response)) {\n          this.coins = response\n        }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 更新币种信息\n    updateUserCoin(coins: ICoin[] | []) {\n      this.coins = coins\n    },\n    // 用户相关信息\n    async getUserInfo() {\n      try {\n        const response = await getUserInfoApi()\n\n        this.token = response.token\n        this.userInfo = {\n          ...response.info\n          // is_set_paypassword: 2,\n        }\n        this.processnum = response.processnum\n\n        console.log(response?.info?.is_set_paypassword, 'response.info')\n        this.editreview = response.editreview\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // app直接跳转进入特定页面时使用该方法传入token获取用户信息\n    async getUserInfo2(token: string) {\n      try {\n        const response = await getUserInfoApi2(token)\n\n        this.userInfo = {\n          ...response.info\n        }\n        console.log('用户信息2', response, JSON.stringify(response.info))\n        sessionStorage.setItem('app_user_info', JSON.stringify(response?.info ?? {}))\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 退出登录时，重置相应store状态\n    logout() {\n      this.token = ''\n      // sessionStorage.clear()\n      sessionStorage.removeItem('token')\n      localStorage.removeItem('token')\n      const articleStore = useArticleStore()\n      const taskActivityStore = useTaskActivityStore()\n\n      // articleStore.$reset()\n      taskActivityStore.$reset()\n    }\n  },\n  persist: true\n})\n",
      "start": 1714699767186,
      "end": 1714699767247,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767247,
      "end": 1714699767247,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import {\n  H5InitApi,\n  getCountryCode,\n  loginApi,\n  registerApi\n} from \"@/apis/auth\";\nimport { getUserCoinApi, getUserInfoApi, getUserInfoApi2 } from \"@/apis/user\";\nimport { isEqualWith } from \"lodash-es\";\nimport { defineStore } from \"pinia\";\nimport { useArticleStore } from \"../article\";\nimport { useTaskActivityStore } from \"../taskActivity\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    Websocket: null,\n    token: \"\",\n    userInfo: {},\n    editreview: {},\n    processnum: {\n      buy: 0,\n      buy_orders: [],\n      sell: 0,\n      sell_orders: [],\n      total: 0\n    },\n    countryCode: {\n      country_coin: [],\n      lastGetTime: 0,\n      current: {}\n    },\n    coins: []\n  }),\n  getters: {\n    isLogin(state) {\n      return !!state.token;\n    },\n    isSetPayPassword(state) {\n      return state?.userInfo?.is_set_paypassword === 1;\n    },\n    // 用户积分\n    getUserPoint(state) {\n      return state.coins.find((item) => item.mtype === 20);\n    },\n    // 根据mtype参数获取对应coins信息\n    getUserMoneyByMType(state) {\n      const userMoney = state.coins.filter((item) => item.mtype);\n      return (mtype) => userMoney.find((item) => item.mtype === mtype) || {};\n    },\n    // 不可用资金，手动计算=》 总资金 - 可用资金\n    getFreezeMoney(state) {\n      return (mtype) => {\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype);\n        return +coincash - +available_coincash;\n      };\n    }\n  },\n  actions: {\n    updateEntryState(partial) {\n      this.$patch(partial);\n    },\n    async getH5init(params) {\n      try {\n        this.token = \"\";\n        const response = await H5InitApi(params);\n        if (response.token) {\n          sessionStorage.setItem(\"vtoken\", params.vtoken);\n          sessionStorage.setItem(\"deviceid\", params.deviceid);\n          localStorage.setItem(\"token\", response.token);\n          localStorage.setItem(\"md5_pri\", response.md5_pri);\n          sessionStorage.setItem(\"md5_pri\", response.md5_pri);\n          const localTimestamp = Math.round(Date.now() / 1e3);\n          const timestampDiff = localTimestamp - +response.sys_time;\n          sessionStorage.setItem(\"timestamp_diff\", timestampDiff.toString());\n          this.token = response.token;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getLoginApi(params) {\n      try {\n        const response = await loginApi(params);\n        const { mobile, pass } = params;\n        this.token = response.token;\n        if (!!!this.token)\n          return false;\n        localStorage.setItem(\"token\", response.token);\n        this.userInfo = { ...response.info, mobile, pass };\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getRegisterApi(params) {\n      try {\n        const response = await registerApi(params);\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params;\n        const _mobile = mobile.replace(phoneCode, \"\");\n        const currentCountryInfo = this.countryCode.country_coin.find(\n          (item) => item.country_code === countryCode\n        );\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass };\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo };\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getCountryCodeApi(params) {\n      try {\n        const response = await getCountryCode(params);\n        this.countryCode = response;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 累计任务列表\n    async getUserCoin(params) {\n      try {\n        const response = await getUserCoinApi(params);\n        if (response && !isEqualWith(this.coins, response)) {\n          this.coins = response;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 更新币种信息\n    updateUserCoin(coins) {\n      this.coins = coins;\n    },\n    // 用户相关信息\n    async getUserInfo() {\n      try {\n        const response = await getUserInfoApi();\n        this.token = response.token;\n        this.userInfo = {\n          ...response.info\n          // is_set_paypassword: 2,\n        };\n        this.processnum = response.processnum;\n        console.log(response?.info?.is_set_paypassword, \"response.info\");\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // app直接跳转进入特定页面时使用该方法传入token获取用户信息\n    async getUserInfo2(token) {\n      try {\n        const response = await getUserInfoApi2(token);\n        this.userInfo = {\n          ...response.info\n        };\n        console.log(\"用户信息2\", response, JSON.stringify(response.info));\n        sessionStorage.setItem(\"app_user_info\", JSON.stringify(response?.info ?? {}));\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 退出登录时，重置相应store状态\n    logout() {\n      this.token = \"\";\n      sessionStorage.removeItem(\"token\");\n      localStorage.removeItem(\"token\");\n      const articleStore = useArticleStore();\n      const taskActivityStore = useTaskActivityStore();\n      taskActivityStore.$reset();\n    }\n  },\n  persist: true\n});\n",
      "start": 1714699767247,
      "end": 1714699767419,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/store/modules/auth/index.ts"
        ],
        "sourcesContent": [
          "import {\n  CountryParams,\n  H5InitApi,\n  IH5initParams,\n  LoginParams,\n  RegisterParams,\n  getCountryCode,\n  loginApi,\n  registerApi\n} from '@/apis/auth'\nimport { getUserCoinApi, getUserCoinsParams, getUserInfoApi, getUserInfoApi2 } from '@/apis/user'\nimport { ICoin } from '@/store/types/coin'\nimport { isEqualWith } from 'lodash-es'\nimport { defineStore } from 'pinia'\nimport { AuthState, ICountryCoin } from '../../types/auth'\nimport { useArticleStore } from '../article'\nimport { useTaskActivityStore } from '../taskActivity'\n\nexport const useAuthStore = defineStore('auth', {\n  state: () =>\n    ({\n      Websocket: null,\n      token: '',\n      userInfo: {},\n      editreview: {},\n      processnum: {\n        buy: 0,\n        buy_orders: [],\n        sell: 0,\n        sell_orders: [],\n        total: 0\n      },\n      countryCode: {\n        country_coin: [],\n        lastGetTime: 0,\n        current: {}\n      },\n      coins: []\n    } as AuthState),\n  getters: {\n    isLogin(state): boolean {\n      return !!state.token\n    },\n    isSetPayPassword(state): boolean {\n      return state?.userInfo?.is_set_paypassword === 1\n    },\n    // 用户积分\n    getUserPoint(state) {\n      return state.coins.find(item => item.mtype === 20)\n    },\n    // 根据mtype参数获取对应coins信息\n    getUserMoneyByMType(state) {\n      const userMoney = state.coins.filter(item => item.mtype)\n      return (mtype: number) => userMoney.find(item => item.mtype === mtype) || ({} as ICoin)\n    },\n    // 不可用资金，手动计算=》 总资金 - 可用资金\n    getFreezeMoney(state) {\n      return (mtype: number) => {\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype) as ICoin\n        return +coincash - +available_coincash\n      }\n    }\n  },\n  actions: {\n    updateEntryState(partial: Partial<AuthState>) {\n      this.$patch(partial)\n    },\n    async getH5init(params: IH5initParams) {\n      try {\n        // 请求前先清空\n        this.token = ''\n\n        const response = await H5InitApi(params)\n\n        if (response.token) {\n          sessionStorage.setItem('vtoken', params.vtoken)\n          sessionStorage.setItem('deviceid', params.deviceid)\n          localStorage.setItem('token', response.token)\n          localStorage.setItem('md5_pri', response.md5_pri)\n          sessionStorage.setItem('md5_pri', response.md5_pri)\n\n          const localTimestamp = Math.round(Date.now() / 1000)\n          const timestampDiff = localTimestamp - +response.sys_time\n          // 记录本地时间和服务系统时间偏移值\n          sessionStorage.setItem('timestamp_diff', timestampDiff.toString())\n          // 获取到token后，才能渲染视图\n          this.token = response.token\n        }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getLoginApi(params: LoginParams) {\n      try {\n        const response = await loginApi(params)\n        const { mobile, pass } = params\n\n        // const _mobile = mobile.replace(phoneCode, '')\n        // const currentCountryInfo = this.countryCode.country_coin.find(\n        //   (item: ICountryCoin) => item.country_code === countryCode\n        // )\n\n        this.token = response.token\n\n        if (!!!this.token) return false\n        localStorage.setItem('token', response.token)\n        this.userInfo = { ...response.info, mobile, pass }\n        this.editreview = response.editreview\n        // this.countryCode = { ...this.countryCode, current: currentCountryInfo }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getRegisterApi(params: RegisterParams) {\n      try {\n        const response = await registerApi(params)\n\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params\n\n        const _mobile = mobile.replace(phoneCode as string, '')\n        const currentCountryInfo = this.countryCode.country_coin.find(\n          (item: ICountryCoin) => item.country_code === countryCode\n        )\n\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass }\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo as ICountryCoin }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    async getCountryCodeApi(params: CountryParams) {\n      try {\n        const response = await getCountryCode(params)\n        this.countryCode = response\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 累计任务列表\n    async getUserCoin(params: getUserCoinsParams) {\n      try {\n        const response = await getUserCoinApi(params)\n\n        if (response && !isEqualWith(this.coins, response)) {\n          this.coins = response\n        }\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 更新币种信息\n    updateUserCoin(coins: ICoin[] | []) {\n      this.coins = coins\n    },\n    // 用户相关信息\n    async getUserInfo() {\n      try {\n        const response = await getUserInfoApi()\n\n        this.token = response.token\n        this.userInfo = {\n          ...response.info\n          // is_set_paypassword: 2,\n        }\n        this.processnum = response.processnum\n\n        console.log(response?.info?.is_set_paypassword, 'response.info')\n        this.editreview = response.editreview\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // app直接跳转进入特定页面时使用该方法传入token获取用户信息\n    async getUserInfo2(token: string) {\n      try {\n        const response = await getUserInfoApi2(token)\n\n        this.userInfo = {\n          ...response.info\n        }\n        console.log('用户信息2', response, JSON.stringify(response.info))\n        sessionStorage.setItem('app_user_info', JSON.stringify(response?.info ?? {}))\n\n        return response\n      } catch (error) {\n        console.log(error)\n        throw error\n      }\n    },\n    // 退出登录时，重置相应store状态\n    logout() {\n      this.token = ''\n      // sessionStorage.clear()\n      sessionStorage.removeItem('token')\n      localStorage.removeItem('token')\n      const articleStore = useArticleStore()\n      const taskActivityStore = useTaskActivityStore()\n\n      // articleStore.$reset()\n      taskActivityStore.$reset()\n    }\n  },\n  persist: true\n})\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714699767419,
      "end": 1714699767419,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767419,
      "end": 1714699767419,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767419,
      "end": 1714699767419,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767419,
      "end": 1714699767419,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import {\n  H5InitApi,\n  getCountryCode,\n  loginApi,\n  registerApi\n} from \"@/apis/auth\";\nimport { getUserCoinApi, getUserInfoApi, getUserInfoApi2 } from \"@/apis/user\";\nimport { isEqualWith } from \"lodash-es\";\nimport { defineStore } from \"pinia\";\nimport { useArticleStore } from \"../article\";\nimport { useTaskActivityStore } from \"../taskActivity\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    Websocket: null,\n    token: \"\",\n    userInfo: {},\n    editreview: {},\n    processnum: {\n      buy: 0,\n      buy_orders: [],\n      sell: 0,\n      sell_orders: [],\n      total: 0\n    },\n    countryCode: {\n      country_coin: [],\n      lastGetTime: 0,\n      current: {}\n    },\n    coins: []\n  }),\n  getters: {\n    isLogin(state) {\n      return !!state.token;\n    },\n    isSetPayPassword(state) {\n      return state?.userInfo?.is_set_paypassword === 1;\n    },\n    // 用户积分\n    getUserPoint(state) {\n      return state.coins.find((item) => item.mtype === 20);\n    },\n    // 根据mtype参数获取对应coins信息\n    getUserMoneyByMType(state) {\n      const userMoney = state.coins.filter((item) => item.mtype);\n      return (mtype) => userMoney.find((item) => item.mtype === mtype) || {};\n    },\n    // 不可用资金，手动计算=》 总资金 - 可用资金\n    getFreezeMoney(state) {\n      return (mtype) => {\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype);\n        return +coincash - +available_coincash;\n      };\n    }\n  },\n  actions: {\n    updateEntryState(partial) {\n      this.$patch(partial);\n    },\n    async getH5init(params) {\n      try {\n        this.token = \"\";\n        const response = await H5InitApi(params);\n        if (response.token) {\n          sessionStorage.setItem(\"vtoken\", params.vtoken);\n          sessionStorage.setItem(\"deviceid\", params.deviceid);\n          localStorage.setItem(\"token\", response.token);\n          localStorage.setItem(\"md5_pri\", response.md5_pri);\n          sessionStorage.setItem(\"md5_pri\", response.md5_pri);\n          const localTimestamp = Math.round(Date.now() / 1e3);\n          const timestampDiff = localTimestamp - +response.sys_time;\n          sessionStorage.setItem(\"timestamp_diff\", timestampDiff.toString());\n          this.token = response.token;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getLoginApi(params) {\n      try {\n        const response = await loginApi(params);\n        const { mobile, pass } = params;\n        this.token = response.token;\n        if (!!!this.token)\n          return false;\n        localStorage.setItem(\"token\", response.token);\n        this.userInfo = { ...response.info, mobile, pass };\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getRegisterApi(params) {\n      try {\n        const response = await registerApi(params);\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params;\n        const _mobile = mobile.replace(phoneCode, \"\");\n        const currentCountryInfo = this.countryCode.country_coin.find(\n          (item) => item.country_code === countryCode\n        );\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass };\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo };\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getCountryCodeApi(params) {\n      try {\n        const response = await getCountryCode(params);\n        this.countryCode = response;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 累计任务列表\n    async getUserCoin(params) {\n      try {\n        const response = await getUserCoinApi(params);\n        if (response && !isEqualWith(this.coins, response)) {\n          this.coins = response;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 更新币种信息\n    updateUserCoin(coins) {\n      this.coins = coins;\n    },\n    // 用户相关信息\n    async getUserInfo() {\n      try {\n        const response = await getUserInfoApi();\n        this.token = response.token;\n        this.userInfo = {\n          ...response.info\n          // is_set_paypassword: 2,\n        };\n        this.processnum = response.processnum;\n        console.log(response?.info?.is_set_paypassword, \"response.info\");\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // app直接跳转进入特定页面时使用该方法传入token获取用户信息\n    async getUserInfo2(token) {\n      try {\n        const response = await getUserInfoApi2(token);\n        this.userInfo = {\n          ...response.info\n        };\n        console.log(\"用户信息2\", response, JSON.stringify(response.info));\n        sessionStorage.setItem(\"app_user_info\", JSON.stringify(response?.info ?? {}));\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 退出登录时，重置相应store状态\n    logout() {\n      this.token = \"\";\n      sessionStorage.removeItem(\"token\");\n      localStorage.removeItem(\"token\");\n      const articleStore = useArticleStore();\n      const taskActivityStore = useTaskActivityStore();\n      taskActivityStore.$reset();\n    }\n  },\n  persist: true\n});\n",
      "start": 1714699767419,
      "end": 1714699767419,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nimport {\n  H5InitApi,\n  getCountryCode,\n  loginApi,\n  registerApi\n} from \"@/apis/auth\";\nimport { getUserCoinApi, getUserInfoApi, getUserInfoApi2 } from \"@/apis/user\";\nimport { isEqualWith } from \"lodash-es\";\nimport { defineStore } from \"pinia\";\nimport { useArticleStore } from \"../article\";\nimport { useTaskActivityStore } from \"../taskActivity\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    Websocket: null,\n    token: \"\",\n    userInfo: {},\n    editreview: {},\n    processnum: {\n      buy: 0,\n      buy_orders: [],\n      sell: 0,\n      sell_orders: [],\n      total: 0\n    },\n    countryCode: {\n      country_coin: [],\n      lastGetTime: 0,\n      current: {}\n    },\n    coins: []\n  }),\n  getters: {\n    isLogin(state) {\n      return !!state.token;\n    },\n    isSetPayPassword(state) {\n      var _a;\n      return ((_a = state == null ? void 0 : state.userInfo) == null ? void 0 : _a.is_set_paypassword) === 1;\n    },\n    // 用户积分\n    getUserPoint(state) {\n      return state.coins.find((item) => item.mtype === 20);\n    },\n    // 根据mtype参数获取对应coins信息\n    getUserMoneyByMType(state) {\n      const userMoney = state.coins.filter((item) => item.mtype);\n      return (mtype) => userMoney.find((item) => item.mtype === mtype) || {};\n    },\n    // 不可用资金，手动计算=》 总资金 - 可用资金\n    getFreezeMoney(state) {\n      return (mtype) => {\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype);\n        return +coincash - +available_coincash;\n      };\n    }\n  },\n  actions: {\n    updateEntryState(partial) {\n      this.$patch(partial);\n    },\n    async getH5init(params) {\n      try {\n        this.token = \"\";\n        const response = await H5InitApi(params);\n        if (response.token) {\n          sessionStorage.setItem(\"vtoken\", params.vtoken);\n          sessionStorage.setItem(\"deviceid\", params.deviceid);\n          localStorage.setItem(\"token\", response.token);\n          localStorage.setItem(\"md5_pri\", response.md5_pri);\n          sessionStorage.setItem(\"md5_pri\", response.md5_pri);\n          const localTimestamp = Math.round(Date.now() / 1e3);\n          const timestampDiff = localTimestamp - +response.sys_time;\n          sessionStorage.setItem(\"timestamp_diff\", timestampDiff.toString());\n          this.token = response.token;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getLoginApi(params) {\n      try {\n        const response = await loginApi(params);\n        const { mobile, pass } = params;\n        this.token = response.token;\n        if (!!!this.token)\n          return false;\n        localStorage.setItem(\"token\", response.token);\n        this.userInfo = { ...response.info, mobile, pass };\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getRegisterApi(params) {\n      try {\n        const response = await registerApi(params);\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params;\n        const _mobile = mobile.replace(phoneCode, \"\");\n        const currentCountryInfo = this.countryCode.country_coin.find(\n          (item) => item.country_code === countryCode\n        );\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass };\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo };\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    async getCountryCodeApi(params) {\n      try {\n        const response = await getCountryCode(params);\n        this.countryCode = response;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 累计任务列表\n    async getUserCoin(params) {\n      try {\n        const response = await getUserCoinApi(params);\n        if (response && !isEqualWith(this.coins, response)) {\n          this.coins = response;\n        }\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 更新币种信息\n    updateUserCoin(coins) {\n      this.coins = coins;\n    },\n    // 用户相关信息\n    async getUserInfo() {\n      var _a;\n      try {\n        const response = await getUserInfoApi();\n        this.token = response.token;\n        this.userInfo = {\n          ...response.info\n          // is_set_paypassword: 2,\n        };\n        this.processnum = response.processnum;\n        console.log((_a = response == null ? void 0 : response.info) == null ? void 0 : _a.is_set_paypassword, \"response.info\");\n        this.editreview = response.editreview;\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // app直接跳转进入特定页面时使用该方法传入token获取用户信息\n    async getUserInfo2(token) {\n      var _a;\n      try {\n        const response = await getUserInfoApi2(token);\n        this.userInfo = {\n          ...response.info\n        };\n        console.log(\"\\u7528\\u6237\\u4FE1\\u606F2\", response, JSON.stringify(response.info));\n        sessionStorage.setItem(\"app_user_info\", JSON.stringify((_a = response == null ? void 0 : response.info) != null ? _a : {}));\n        return response;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    // 退出登录时，重置相应store状态\n    logout() {\n      this.token = \"\";\n      sessionStorage.removeItem(\"token\");\n      localStorage.removeItem(\"token\");\n      const articleStore = useArticleStore();\n      const taskActivityStore = useTaskActivityStore();\n      taskActivityStore.$reset();\n    }\n  },\n  persist: true\n});\n",
      "start": 1714699767419,
      "end": 1714699767606,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/store/modules/auth/index.ts\"],\n  \"sourcesContent\": [\"import {\\n  H5InitApi,\\n  getCountryCode,\\n  loginApi,\\n  registerApi\\n} from \\\"@/apis/auth\\\";\\nimport { getUserCoinApi, getUserInfoApi, getUserInfoApi2 } from \\\"@/apis/user\\\";\\nimport { isEqualWith } from \\\"lodash-es\\\";\\nimport { defineStore } from \\\"pinia\\\";\\nimport { useArticleStore } from \\\"../article\\\";\\nimport { useTaskActivityStore } from \\\"../taskActivity\\\";\\nexport const useAuthStore = defineStore(\\\"auth\\\", {\\n  state: () => ({\\n    Websocket: null,\\n    token: \\\"\\\",\\n    userInfo: {},\\n    editreview: {},\\n    processnum: {\\n      buy: 0,\\n      buy_orders: [],\\n      sell: 0,\\n      sell_orders: [],\\n      total: 0\\n    },\\n    countryCode: {\\n      country_coin: [],\\n      lastGetTime: 0,\\n      current: {}\\n    },\\n    coins: []\\n  }),\\n  getters: {\\n    isLogin(state) {\\n      return !!state.token;\\n    },\\n    isSetPayPassword(state) {\\n      return state?.userInfo?.is_set_paypassword === 1;\\n    },\\n    // \\u7528\\u6237\\u79EF\\u5206\\n    getUserPoint(state) {\\n      return state.coins.find((item) => item.mtype === 20);\\n    },\\n    // \\u6839\\u636Emtype\\u53C2\\u6570\\u83B7\\u53D6\\u5BF9\\u5E94coins\\u4FE1\\u606F\\n    getUserMoneyByMType(state) {\\n      const userMoney = state.coins.filter((item) => item.mtype);\\n      return (mtype) => userMoney.find((item) => item.mtype === mtype) || {};\\n    },\\n    // \\u4E0D\\u53EF\\u7528\\u8D44\\u91D1\\uFF0C\\u624B\\u52A8\\u8BA1\\u7B97=\\u300B \\u603B\\u8D44\\u91D1 - \\u53EF\\u7528\\u8D44\\u91D1\\n    getFreezeMoney(state) {\\n      return (mtype) => {\\n        const { available_coincash = 0, coincash = 0 } = this.getUserMoneyByMType(mtype);\\n        return +coincash - +available_coincash;\\n      };\\n    }\\n  },\\n  actions: {\\n    updateEntryState(partial) {\\n      this.$patch(partial);\\n    },\\n    async getH5init(params) {\\n      try {\\n        this.token = \\\"\\\";\\n        const response = await H5InitApi(params);\\n        if (response.token) {\\n          sessionStorage.setItem(\\\"vtoken\\\", params.vtoken);\\n          sessionStorage.setItem(\\\"deviceid\\\", params.deviceid);\\n          localStorage.setItem(\\\"token\\\", response.token);\\n          localStorage.setItem(\\\"md5_pri\\\", response.md5_pri);\\n          sessionStorage.setItem(\\\"md5_pri\\\", response.md5_pri);\\n          const localTimestamp = Math.round(Date.now() / 1e3);\\n          const timestampDiff = localTimestamp - +response.sys_time;\\n          sessionStorage.setItem(\\\"timestamp_diff\\\", timestampDiff.toString());\\n          this.token = response.token;\\n        }\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    async getLoginApi(params) {\\n      try {\\n        const response = await loginApi(params);\\n        const { mobile, pass } = params;\\n        this.token = response.token;\\n        if (!!!this.token)\\n          return false;\\n        localStorage.setItem(\\\"token\\\", response.token);\\n        this.userInfo = { ...response.info, mobile, pass };\\n        this.editreview = response.editreview;\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    async getRegisterApi(params) {\\n      try {\\n        const response = await registerApi(params);\\n        const { country_code: countryCode, internationalcode: phoneCode, mobile, pass } = params;\\n        const _mobile = mobile.replace(phoneCode, \\\"\\\");\\n        const currentCountryInfo = this.countryCode.country_coin.find(\\n          (item) => item.country_code === countryCode\\n        );\\n        this.userInfo = { ...this.userInfo, countryCode, phoneCode, mobile: _mobile, pass };\\n        this.countryCode = { ...this.countryCode, current: currentCountryInfo };\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    async getCountryCodeApi(params) {\\n      try {\\n        const response = await getCountryCode(params);\\n        this.countryCode = response;\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    // \\u7D2F\\u8BA1\\u4EFB\\u52A1\\u5217\\u8868\\n    async getUserCoin(params) {\\n      try {\\n        const response = await getUserCoinApi(params);\\n        if (response && !isEqualWith(this.coins, response)) {\\n          this.coins = response;\\n        }\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    // \\u66F4\\u65B0\\u5E01\\u79CD\\u4FE1\\u606F\\n    updateUserCoin(coins) {\\n      this.coins = coins;\\n    },\\n    // \\u7528\\u6237\\u76F8\\u5173\\u4FE1\\u606F\\n    async getUserInfo() {\\n      try {\\n        const response = await getUserInfoApi();\\n        this.token = response.token;\\n        this.userInfo = {\\n          ...response.info\\n          // is_set_paypassword: 2,\\n        };\\n        this.processnum = response.processnum;\\n        console.log(response?.info?.is_set_paypassword, \\\"response.info\\\");\\n        this.editreview = response.editreview;\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    // app\\u76F4\\u63A5\\u8DF3\\u8F6C\\u8FDB\\u5165\\u7279\\u5B9A\\u9875\\u9762\\u65F6\\u4F7F\\u7528\\u8BE5\\u65B9\\u6CD5\\u4F20\\u5165token\\u83B7\\u53D6\\u7528\\u6237\\u4FE1\\u606F\\n    async getUserInfo2(token) {\\n      try {\\n        const response = await getUserInfoApi2(token);\\n        this.userInfo = {\\n          ...response.info\\n        };\\n        console.log(\\\"\\u7528\\u6237\\u4FE1\\u606F2\\\", response, JSON.stringify(response.info));\\n        sessionStorage.setItem(\\\"app_user_info\\\", JSON.stringify(response?.info ?? {}));\\n        return response;\\n      } catch (error) {\\n        console.log(error);\\n        throw error;\\n      }\\n    },\\n    // \\u9000\\u51FA\\u767B\\u5F55\\u65F6\\uFF0C\\u91CD\\u7F6E\\u76F8\\u5E94store\\u72B6\\u6001\\n    logout() {\\n      this.token = \\\"\\\";\\n      sessionStorage.removeItem(\\\"token\\\");\\n      localStorage.removeItem(\\\"token\\\");\\n      const articleStore = useArticleStore();\\n      const taskActivityStore = useTaskActivityStore();\\n      taskActivityStore.$reset();\\n    }\\n  },\\n  persist: true\\n});\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:define",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767606,
      "end": 1714699767606,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767606,
      "end": 1714699767608,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767608,
      "end": 1714699767608,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767608,
      "end": 1714699767608,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767608,
      "end": 1714699767608,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767608,
      "end": 1714699767608,
      "order": "normal"
    }
  ]
}
