{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/radio/Radio.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, extend, createNamespace } from \"../utils/index.mjs\";\nimport { RADIO_KEY } from \"../radio-group/RadioGroup.mjs\";\nimport { useParent } from \"@vant/use\";\nimport Checker, { checkerProps } from \"../checkbox/Checker.mjs\";\nconst radioProps = extend({}, checkerProps, {\n  shape: String\n});\nconst [name, bem] = createNamespace(\"radio\");\nvar stdin_default = defineComponent({\n  name,\n  props: radioProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(RADIO_KEY);\n    const checked = () => {\n      const value = parent ? parent.props.modelValue : props.modelValue;\n      return value === props.name;\n    };\n    const toggle = () => {\n      if (parent) {\n        parent.updateValue(props.name);\n      } else {\n        emit(\"update:modelValue\", props.name);\n      }\n    };\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"radio\",\n      \"parent\": parent,\n      \"checked\": checked(),\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n});\nexport {\n  stdin_default as default,\n  radioProps\n};\n",
      "start": 1714699767312,
      "end": 1714699767343,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, extend, createNamespace } from \"../utils/index.mjs\";\nimport { RADIO_KEY } from \"../radio-group/RadioGroup.mjs\";\nimport { useParent } from \"@vant/use\";\nimport Checker, { checkerProps } from \"../checkbox/Checker.mjs\";\nconst radioProps = extend({}, checkerProps, {\n  shape: String\n});\nconst [name, bem] = createNamespace(\"radio\");\nvar stdin_default = defineComponent({\n  name,\n  props: radioProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(RADIO_KEY);\n    const checked = () => {\n      const value = parent ? parent.props.modelValue : props.modelValue;\n      return value === props.name;\n    };\n    const toggle = () => {\n      if (parent) {\n        parent.updateValue(props.name);\n      } else {\n        emit(\"update:modelValue\", props.name);\n      }\n    };\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"radio\",\n      \"parent\": parent,\n      \"checked\": checked(),\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n});\nexport {\n  stdin_default as default,\n  radioProps\n};\n",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767343,
      "end": 1714699767343,
      "order": "normal"
    }
  ]
}
