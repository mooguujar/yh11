{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/CheckIn.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" }\nconst _hoisted_2 = { class: \"tips\" }\nconst _hoisted_3 = { class: \"consequent-days\" }\nconst _hoisted_4 = { class: \"tomorrow-get-point\" }\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n}\nconst _hoisted_8 = { key: 2 }\nconst _hoisted_9 = { class: \"item-date\" }\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport error from '@/assets/images/common/error.png'\nimport info from '@/assets/images/common/info.png'\nimport success from '@/assets/images/common/success.png'\nimport router from '@/router'\nimport { useAuthStore } from '@/store/modules/auth'\nimport { useTaskActivityStore } from '@/store/modules/taskActivity'\nimport { ISignInRecord } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { InWEB } from '@/utils/tools'\nimport dayjs from 'dayjs'\nimport { storeToRefs } from 'pinia'\nimport { showToast } from 'vant'\nimport { computed, onMounted, ref, watchEffect } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CheckIn',\n  setup(__props) {\n\nconst taskActivityStore = useTaskActivityStore()\nconst point = ref(0)\nconst { signInData } = storeToRefs(taskActivityStore)\nconst authStore = useAuthStore()\nconst { token } = storeToRefs(authStore)\nconst { verified_status } = authStore.userInfo ?? {}\nconst cardList = ref<ISignInRecord[]>([])\nconst btnCheckInName = ref(signInData.value.todayisok ? '今日已签到' : '点击签到')\n\nconst onCheckIn = async () => {\n  if (signInData.value.todayisok) {\n    return showToast({\n      message: '今日已签到',\n      icon: info,\n      iconSize: '48px',\n      teleport: '.check-in-container'\n    })\n  }\n  const isLogin = computed(() => !!token.value)\n\n  if (InWEB()) {\n    if (!isLogin.value) {\n      return router.push('/auth/login')\n    }\n  }\n  if (!verified_status) {\n    return showToast({\n      message: '用户还未实名认证',\n      icon: error,\n      teleport: '.check-in-container'\n    })\n  }\n\n  try {\n    const res = await userDoTaskApi({\n      idd: signInData.value.task_idd\n    })\n\n    window.log('签到状态', res)\n\n    // 签到成功后更新状态\n    if (res.money) {\n      // 更新顶部积分数值\n      mitt.emit('updateCoins', true)\n      mitt.emit('updateTodayActivity', true)\n\n      getSignInData(true)\n\n      showToast({\n        message: `签到成功，+${res.money}积分`,\n        icon: success,\n        teleport: '.check-in-container'\n      })\n      btnCheckInName.value = '今日已签到'\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst getSignInData = async (isReq: boolean = false) => {\n  window.log('每日签到积分列表', signInData.value)\n\n  // 签到缓存数据是否异常，若异常则需重新请求接口数据\n  const listError = signInData.value.list?.[3]?.date !== dayjs().format('YYYY-MM-DD')\n  if (signInData.value.list && !listError && !isReq) return\n\n  await taskActivityStore.getSignInListApi()\n\n  window.log('每日签到积分列表2', signInData.value)\n}\n\nconst cardClassName = (item: ISignInRecord) => {\n  let className\n  const isSame = dayjs().isSame(dayjs(item.date), 'day')\n  const isAfter = dayjs().isAfter(dayjs(item.date), 'day')\n\n  if (isSame) {\n    className = item.hisokflag ? 'item-checked-in' : 'item-today'\n  } else if (isAfter) {\n    className = item.hisokflag ? 'item-checked-in' : 'item-expires'\n  } else {\n    className = 'item-point'\n  }\n  return className\n}\n\nwatchEffect(() => {\n  const list = signInData.value.list\n  cardList.value = list\n})\n\nonMounted(() => {\n  getSignInData()\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_van_button = _resolveComponent(\"van-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createTextVNode(\" 已连续签到 \"),\n      _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(signInData).out_num?.day), 1 /* TEXT */),\n      _createTextVNode(\" 天，明天签到 \"),\n      _createElementVNode(\"span\", _hoisted_4, \"+\" + _toDisplayString(_unref(signInData).out_num?.money), 1 /* TEXT */),\n      _createTextVNode(\" 积分 \")\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cardList.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.date,\n          class: \"flex flex-col items-center justify-start\"\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"item-card\", cardClassName(item)])\n          }, [\n            (cardClassName(item) === 'item-checked-in')\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6))\n              : (cardClassName(item) === 'item-expires')\n                ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"+\" + _toDisplayString(item.money), 1 /* TEXT */))\n          ], 2 /* CLASS */),\n          _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.datetxt), 1 /* TEXT */)\n        ]))\n      }), 128 /* KEYED_FRAGMENT */))\n    ]),\n    _createVNode(_component_van_button, {\n      type: \"primary\",\n      class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? ' checked' : ''}`),\n      onClick: onCheckIn\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(btnCheckInName.value), 1 /* TEXT */)\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"])\n  ]))\n}\n}\n\n})",
      "start": 1714699771912,
      "end": 1714699771912
    },
    {
      "name": "vite:css",
      "start": 1714699771912,
      "end": 1714699771912,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" };\nconst _hoisted_2 = { class: \"tips\" };\nconst _hoisted_3 = { class: \"consequent-days\" };\nconst _hoisted_4 = { class: \"tomorrow-get-point\" };\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" };\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n};\nconst _hoisted_8 = { key: 2 };\nconst _hoisted_9 = { class: \"item-date\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport error from \"@/assets/images/common/error.png\";\nimport info from \"@/assets/images/common/info.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport router from \"@/router\";\nimport { useAuthStore } from \"@/store/modules/auth\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { InWEB } from \"@/utils/tools\";\nimport dayjs from \"dayjs\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, ref, watchEffect } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"CheckIn\",\n  setup(__props) {\n    const taskActivityStore = useTaskActivityStore();\n    const point = ref(0);\n    const { signInData } = storeToRefs(taskActivityStore);\n    const authStore = useAuthStore();\n    const { token } = storeToRefs(authStore);\n    const { verified_status } = authStore.userInfo ?? {};\n    const cardList = ref([]);\n    const btnCheckInName = ref(signInData.value.todayisok ? \"今日已签到\" : \"点击签到\");\n    const onCheckIn = async () => {\n      if (signInData.value.todayisok) {\n        return showToast({\n          message: \"今日已签到\",\n          icon: info,\n          iconSize: \"48px\",\n          teleport: \".check-in-container\"\n        });\n      }\n      const isLogin = computed(() => !!token.value);\n      if (InWEB()) {\n        if (!isLogin.value) {\n          return router.push(\"/auth/login\");\n        }\n      }\n      if (!verified_status) {\n        return showToast({\n          message: \"用户还未实名认证\",\n          icon: error,\n          teleport: \".check-in-container\"\n        });\n      }\n      try {\n        const res = await userDoTaskApi({\n          idd: signInData.value.task_idd\n        });\n        window.log(\"签到状态\", res);\n        if (res.money) {\n          mitt.emit(\"updateCoins\", true);\n          mitt.emit(\"updateTodayActivity\", true);\n          getSignInData(true);\n          showToast({\n            message: `签到成功，+${res.money}积分`,\n            icon: success,\n            teleport: \".check-in-container\"\n          });\n          btnCheckInName.value = \"今日已签到\";\n        }\n      } catch (error2) {\n        console.error(error2);\n      }\n    };\n    const getSignInData = async (isReq = false) => {\n      window.log(\"每日签到积分列表\", signInData.value);\n      const listError = signInData.value.list?.[3]?.date !== dayjs().format(\"YYYY-MM-DD\");\n      if (signInData.value.list && !listError && !isReq)\n        return;\n      await taskActivityStore.getSignInListApi();\n      window.log(\"每日签到积分列表2\", signInData.value);\n    };\n    const cardClassName = (item) => {\n      let className;\n      const isSame = dayjs().isSame(dayjs(item.date), \"day\");\n      const isAfter = dayjs().isAfter(dayjs(item.date), \"day\");\n      if (isSame) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-today\";\n      } else if (isAfter) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-expires\";\n      } else {\n        className = \"item-point\";\n      }\n      return className;\n    };\n    watchEffect(() => {\n      const list = signInData.value.list;\n      cardList.value = list;\n    });\n    onMounted(() => {\n      getSignInData();\n    });\n    return (_ctx, _cache) => {\n      const _component_van_button = _resolveComponent(\"van-button\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" 已连续签到 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_3,\n            _toDisplayString(_unref(signInData).out_num?.day),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" 天，明天签到 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_4,\n            \"+\" + _toDisplayString(_unref(signInData).out_num?.money),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" 积分 \")\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(\n            _Fragment,\n            null,\n            _renderList(cardList.value, (item) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: item.date,\n                class: \"flex flex-col items-center justify-start\"\n              }, [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: _normalizeClass([\"item-card\", cardClassName(item)])\n                  },\n                  [\n                    cardClassName(item) === \"item-checked-in\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6)) : cardClassName(item) === \"item-expires\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"div\",\n                      _hoisted_8,\n                      \"+\" + _toDisplayString(item.money),\n                      1\n                      /* TEXT */\n                    ))\n                  ],\n                  2\n                  /* CLASS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_9,\n                  _toDisplayString(item.datetxt),\n                  1\n                  /* TEXT */\n                )\n              ]);\n            }),\n            128\n            /* KEYED_FRAGMENT */\n          ))\n        ]),\n        _createVNode(_component_van_button, {\n          type: \"primary\",\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \" checked\" : \"\"}`),\n          onClick: onCheckIn\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\n              _toDisplayString(btnCheckInName.value),\n              1\n              /* TEXT */\n            )\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"class\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699771915,
      "end": 1714699772151,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/CheckIn.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" }\nconst _hoisted_2 = { class: \"tips\" }\nconst _hoisted_3 = { class: \"consequent-days\" }\nconst _hoisted_4 = { class: \"tomorrow-get-point\" }\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n}\nconst _hoisted_8 = { key: 2 }\nconst _hoisted_9 = { class: \"item-date\" }\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport error from '@/assets/images/common/error.png'\nimport info from '@/assets/images/common/info.png'\nimport success from '@/assets/images/common/success.png'\nimport router from '@/router'\nimport { useAuthStore } from '@/store/modules/auth'\nimport { useTaskActivityStore } from '@/store/modules/taskActivity'\nimport { ISignInRecord } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { InWEB } from '@/utils/tools'\nimport dayjs from 'dayjs'\nimport { storeToRefs } from 'pinia'\nimport { showToast } from 'vant'\nimport { computed, onMounted, ref, watchEffect } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CheckIn',\n  setup(__props) {\n\nconst taskActivityStore = useTaskActivityStore()\nconst point = ref(0)\nconst { signInData } = storeToRefs(taskActivityStore)\nconst authStore = useAuthStore()\nconst { token } = storeToRefs(authStore)\nconst { verified_status } = authStore.userInfo ?? {}\nconst cardList = ref<ISignInRecord[]>([])\nconst btnCheckInName = ref(signInData.value.todayisok ? '今日已签到' : '点击签到')\n\nconst onCheckIn = async () => {\n  if (signInData.value.todayisok) {\n    return showToast({\n      message: '今日已签到',\n      icon: info,\n      iconSize: '48px',\n      teleport: '.check-in-container'\n    })\n  }\n  const isLogin = computed(() => !!token.value)\n\n  if (InWEB()) {\n    if (!isLogin.value) {\n      return router.push('/auth/login')\n    }\n  }\n  if (!verified_status) {\n    return showToast({\n      message: '用户还未实名认证',\n      icon: error,\n      teleport: '.check-in-container'\n    })\n  }\n\n  try {\n    const res = await userDoTaskApi({\n      idd: signInData.value.task_idd\n    })\n\n    window.log('签到状态', res)\n\n    // 签到成功后更新状态\n    if (res.money) {\n      // 更新顶部积分数值\n      mitt.emit('updateCoins', true)\n      mitt.emit('updateTodayActivity', true)\n\n      getSignInData(true)\n\n      showToast({\n        message: `签到成功，+${res.money}积分`,\n        icon: success,\n        teleport: '.check-in-container'\n      })\n      btnCheckInName.value = '今日已签到'\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst getSignInData = async (isReq: boolean = false) => {\n  window.log('每日签到积分列表', signInData.value)\n\n  // 签到缓存数据是否异常，若异常则需重新请求接口数据\n  const listError = signInData.value.list?.[3]?.date !== dayjs().format('YYYY-MM-DD')\n  if (signInData.value.list && !listError && !isReq) return\n\n  await taskActivityStore.getSignInListApi()\n\n  window.log('每日签到积分列表2', signInData.value)\n}\n\nconst cardClassName = (item: ISignInRecord) => {\n  let className\n  const isSame = dayjs().isSame(dayjs(item.date), 'day')\n  const isAfter = dayjs().isAfter(dayjs(item.date), 'day')\n\n  if (isSame) {\n    className = item.hisokflag ? 'item-checked-in' : 'item-today'\n  } else if (isAfter) {\n    className = item.hisokflag ? 'item-checked-in' : 'item-expires'\n  } else {\n    className = 'item-point'\n  }\n  return className\n}\n\nwatchEffect(() => {\n  const list = signInData.value.list\n  cardList.value = list\n})\n\nonMounted(() => {\n  getSignInData()\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_van_button = _resolveComponent(\"van-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createTextVNode(\" 已连续签到 \"),\n      _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(signInData).out_num?.day), 1 /* TEXT */),\n      _createTextVNode(\" 天，明天签到 \"),\n      _createElementVNode(\"span\", _hoisted_4, \"+\" + _toDisplayString(_unref(signInData).out_num?.money), 1 /* TEXT */),\n      _createTextVNode(\" 积分 \")\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cardList.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.date,\n          class: \"flex flex-col items-center justify-start\"\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"item-card\", cardClassName(item)])\n          }, [\n            (cardClassName(item) === 'item-checked-in')\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6))\n              : (cardClassName(item) === 'item-expires')\n                ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"+\" + _toDisplayString(item.money), 1 /* TEXT */))\n          ], 2 /* CLASS */),\n          _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.datetxt), 1 /* TEXT */)\n        ]))\n      }), 128 /* KEYED_FRAGMENT */))\n    ]),\n    _createVNode(_component_van_button, {\n      type: \"primary\",\n      class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? ' checked' : ''}`),\n      onClick: onCheckIn\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(btnCheckInName.value), 1 /* TEXT */)\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": [
          "error"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" };\nconst _hoisted_2 = { class: \"tips\" };\nconst _hoisted_3 = { class: \"consequent-days\" };\nconst _hoisted_4 = { class: \"tomorrow-get-point\" };\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" };\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n};\nconst _hoisted_8 = { key: 2 };\nconst _hoisted_9 = { class: \"item-date\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport error from \"@/assets/images/common/error.png\";\nimport info from \"@/assets/images/common/info.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport router from \"@/router\";\nimport { useAuthStore } from \"@/store/modules/auth\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { InWEB } from \"@/utils/tools\";\nimport dayjs from \"dayjs\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, ref, watchEffect } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"CheckIn\",\n  setup(__props) {\n    const taskActivityStore = useTaskActivityStore();\n    const point = ref(0);\n    const { signInData } = storeToRefs(taskActivityStore);\n    const authStore = useAuthStore();\n    const { token } = storeToRefs(authStore);\n    const { verified_status } = authStore.userInfo ?? {};\n    const cardList = ref([]);\n    const btnCheckInName = ref(signInData.value.todayisok ? \"今日已签到\" : \"点击签到\");\n    const onCheckIn = async () => {\n      if (signInData.value.todayisok) {\n        return showToast({\n          message: \"今日已签到\",\n          icon: info,\n          iconSize: \"48px\",\n          teleport: \".check-in-container\"\n        });\n      }\n      const isLogin = computed(() => !!token.value);\n      if (InWEB()) {\n        if (!isLogin.value) {\n          return router.push(\"/auth/login\");\n        }\n      }\n      if (!verified_status) {\n        return showToast({\n          message: \"用户还未实名认证\",\n          icon: error,\n          teleport: \".check-in-container\"\n        });\n      }\n      try {\n        const res = await userDoTaskApi({\n          idd: signInData.value.task_idd\n        });\n        window.log(\"签到状态\", res);\n        if (res.money) {\n          mitt.emit(\"updateCoins\", true);\n          mitt.emit(\"updateTodayActivity\", true);\n          getSignInData(true);\n          showToast({\n            message: `签到成功，+${res.money}积分`,\n            icon: success,\n            teleport: \".check-in-container\"\n          });\n          btnCheckInName.value = \"今日已签到\";\n        }\n      } catch (error2) {\n        console.error(error2);\n      }\n    };\n    const getSignInData = async (isReq = false) => {\n      window.log(\"每日签到积分列表\", signInData.value);\n      const listError = signInData.value.list?.[3]?.date !== dayjs().format(\"YYYY-MM-DD\");\n      if (signInData.value.list && !listError && !isReq)\n        return;\n      await taskActivityStore.getSignInListApi();\n      window.log(\"每日签到积分列表2\", signInData.value);\n    };\n    const cardClassName = (item) => {\n      let className;\n      const isSame = dayjs().isSame(dayjs(item.date), \"day\");\n      const isAfter = dayjs().isAfter(dayjs(item.date), \"day\");\n      if (isSame) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-today\";\n      } else if (isAfter) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-expires\";\n      } else {\n        className = \"item-point\";\n      }\n      return className;\n    };\n    watchEffect(() => {\n      const list = signInData.value.list;\n      cardList.value = list;\n    });\n    onMounted(() => {\n      getSignInData();\n    });\n    return (_ctx, _cache) => {\n      const _component_van_button = _resolveComponent(\"van-button\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" 已连续签到 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_3,\n            _toDisplayString(_unref(signInData).out_num?.day),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" 天，明天签到 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_4,\n            \"+\" + _toDisplayString(_unref(signInData).out_num?.money),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" 积分 \")\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(\n            _Fragment,\n            null,\n            _renderList(cardList.value, (item) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: item.date,\n                class: \"flex flex-col items-center justify-start\"\n              }, [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: _normalizeClass([\"item-card\", cardClassName(item)])\n                  },\n                  [\n                    cardClassName(item) === \"item-checked-in\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6)) : cardClassName(item) === \"item-expires\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"div\",\n                      _hoisted_8,\n                      \"+\" + _toDisplayString(item.money),\n                      1\n                      /* TEXT */\n                    ))\n                  ],\n                  2\n                  /* CLASS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_9,\n                  _toDisplayString(item.datetxt),\n                  1\n                  /* TEXT */\n                )\n              ]);\n            }),\n            128\n            /* KEYED_FRAGMENT */\n          ))\n        ]),\n        _createVNode(_component_van_button, {\n          type: \"primary\",\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \" checked\" : \"\"}`),\n          onClick: onCheckIn\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\n              _toDisplayString(btnCheckInName.value),\n              1\n              /* TEXT */\n            )\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"class\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" };\nconst _hoisted_2 = { class: \"tips\" };\nconst _hoisted_3 = { class: \"consequent-days\" };\nconst _hoisted_4 = { class: \"tomorrow-get-point\" };\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" };\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n};\nconst _hoisted_8 = { key: 2 };\nconst _hoisted_9 = { class: \"item-date\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport error from \"@/assets/images/common/error.png\";\nimport info from \"@/assets/images/common/info.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport router from \"@/router\";\nimport { useAuthStore } from \"@/store/modules/auth\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { InWEB } from \"@/utils/tools\";\nimport dayjs from \"dayjs\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, ref, watchEffect } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"CheckIn\",\n  setup(__props) {\n    var _a;\n    const taskActivityStore = useTaskActivityStore();\n    const point = ref(0);\n    const { signInData } = storeToRefs(taskActivityStore);\n    const authStore = useAuthStore();\n    const { token } = storeToRefs(authStore);\n    const { verified_status } = (_a = authStore.userInfo) != null ? _a : {};\n    const cardList = ref([]);\n    const btnCheckInName = ref(signInData.value.todayisok ? \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\" : \"\\u70B9\\u51FB\\u7B7E\\u5230\");\n    const onCheckIn = async () => {\n      if (signInData.value.todayisok) {\n        return showToast({\n          message: \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\",\n          icon: info,\n          iconSize: \"48px\",\n          teleport: \".check-in-container\"\n        });\n      }\n      const isLogin = computed(() => !!token.value);\n      if (InWEB()) {\n        if (!isLogin.value) {\n          return router.push(\"/auth/login\");\n        }\n      }\n      if (!verified_status) {\n        return showToast({\n          message: \"\\u7528\\u6237\\u8FD8\\u672A\\u5B9E\\u540D\\u8BA4\\u8BC1\",\n          icon: error,\n          teleport: \".check-in-container\"\n        });\n      }\n      try {\n        const res = await userDoTaskApi({\n          idd: signInData.value.task_idd\n        });\n        window.log(\"\\u7B7E\\u5230\\u72B6\\u6001\", res);\n        if (res.money) {\n          mitt.emit(\"updateCoins\", true);\n          mitt.emit(\"updateTodayActivity\", true);\n          getSignInData(true);\n          showToast({\n            message: `\\u7B7E\\u5230\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".check-in-container\"\n          });\n          btnCheckInName.value = \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\";\n        }\n      } catch (error2) {\n        console.error(error2);\n      }\n    };\n    const getSignInData = async (isReq = false) => {\n      var _a2, _b;\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u8868\", signInData.value);\n      const listError = ((_b = (_a2 = signInData.value.list) == null ? void 0 : _a2[3]) == null ? void 0 : _b.date) !== dayjs().format(\"YYYY-MM-DD\");\n      if (signInData.value.list && !listError && !isReq)\n        return;\n      await taskActivityStore.getSignInListApi();\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u88682\", signInData.value);\n    };\n    const cardClassName = (item) => {\n      let className;\n      const isSame = dayjs().isSame(dayjs(item.date), \"day\");\n      const isAfter = dayjs().isAfter(dayjs(item.date), \"day\");\n      if (isSame) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-today\";\n      } else if (isAfter) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-expires\";\n      } else {\n        className = \"item-point\";\n      }\n      return className;\n    };\n    watchEffect(() => {\n      const list = signInData.value.list;\n      cardList.value = list;\n    });\n    onMounted(() => {\n      getSignInData();\n    });\n    return (_ctx, _cache) => {\n      var _a2, _b;\n      const _component_van_button = _resolveComponent(\"van-button\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u5DF2\\u8FDE\\u7EED\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_3,\n            _toDisplayString((_a2 = _unref(signInData).out_num) == null ? void 0 : _a2.day),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u5929\\uFF0C\\u660E\\u5929\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_4,\n            \"+\" + _toDisplayString((_b = _unref(signInData).out_num) == null ? void 0 : _b.money),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u79EF\\u5206 \")\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(\n            _Fragment,\n            null,\n            _renderList(cardList.value, (item) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: item.date,\n                class: \"flex flex-col items-center justify-start\"\n              }, [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: _normalizeClass([\"item-card\", cardClassName(item)])\n                  },\n                  [\n                    cardClassName(item) === \"item-checked-in\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6)) : cardClassName(item) === \"item-expires\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"div\",\n                      _hoisted_8,\n                      \"+\" + _toDisplayString(item.money),\n                      1\n                      /* TEXT */\n                    ))\n                  ],\n                  2\n                  /* CLASS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_9,\n                  _toDisplayString(item.datetxt),\n                  1\n                  /* TEXT */\n                )\n              ]);\n            }),\n            128\n            /* KEYED_FRAGMENT */\n          ))\n        ]),\n        _createVNode(_component_van_button, {\n          type: \"primary\",\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \" checked\" : \"\"}`),\n          onClick: onCheckIn\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\n              _toDisplayString(btnCheckInName.value),\n              1\n              /* TEXT */\n            )\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"class\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772151,
      "end": 1714699772224,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/CheckIn.vue?vue&type=script&setup=true&lang.ts\"],\n  \"sourcesContent\": [\"import { defineComponent as _defineComponent } from \\\"vue\\\";\\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \\\"vue\\\";\\nconst _hoisted_1 = { class: \\\"check-in-container flex flex-col items-start justify-start\\\" };\\nconst _hoisted_2 = { class: \\\"tips\\\" };\\nconst _hoisted_3 = { class: \\\"consequent-days\\\" };\\nconst _hoisted_4 = { class: \\\"tomorrow-get-point\\\" };\\nconst _hoisted_5 = { class: \\\"card-container flex items-center justify-start\\\" };\\nconst _hoisted_6 = {\\n  key: 0,\\n  class: \\\"checked-in\\\"\\n};\\nconst _hoisted_7 = {\\n  key: 1,\\n  class: \\\"point-expires\\\"\\n};\\nconst _hoisted_8 = { key: 2 };\\nconst _hoisted_9 = { class: \\\"item-date\\\" };\\nimport { userDoTaskApi } from \\\"@/apis/taskActivity\\\";\\nimport error from \\\"@/assets/images/common/error.png\\\";\\nimport info from \\\"@/assets/images/common/info.png\\\";\\nimport success from \\\"@/assets/images/common/success.png\\\";\\nimport router from \\\"@/router\\\";\\nimport { useAuthStore } from \\\"@/store/modules/auth\\\";\\nimport { useTaskActivityStore } from \\\"@/store/modules/taskActivity\\\";\\nimport mitt from \\\"@/utils/mitt\\\";\\nimport { InWEB } from \\\"@/utils/tools\\\";\\nimport dayjs from \\\"dayjs\\\";\\nimport { storeToRefs } from \\\"pinia\\\";\\nimport { showToast } from \\\"vant\\\";\\nimport { computed, onMounted, ref, watchEffect } from \\\"vue\\\";\\nexport default /* @__PURE__ */ _defineComponent({\\n  __name: \\\"CheckIn\\\",\\n  setup(__props) {\\n    const taskActivityStore = useTaskActivityStore();\\n    const point = ref(0);\\n    const { signInData } = storeToRefs(taskActivityStore);\\n    const authStore = useAuthStore();\\n    const { token } = storeToRefs(authStore);\\n    const { verified_status } = authStore.userInfo ?? {};\\n    const cardList = ref([]);\\n    const btnCheckInName = ref(signInData.value.todayisok ? \\\"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\\\" : \\\"\\u70B9\\u51FB\\u7B7E\\u5230\\\");\\n    const onCheckIn = async () => {\\n      if (signInData.value.todayisok) {\\n        return showToast({\\n          message: \\\"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\\\",\\n          icon: info,\\n          iconSize: \\\"48px\\\",\\n          teleport: \\\".check-in-container\\\"\\n        });\\n      }\\n      const isLogin = computed(() => !!token.value);\\n      if (InWEB()) {\\n        if (!isLogin.value) {\\n          return router.push(\\\"/auth/login\\\");\\n        }\\n      }\\n      if (!verified_status) {\\n        return showToast({\\n          message: \\\"\\u7528\\u6237\\u8FD8\\u672A\\u5B9E\\u540D\\u8BA4\\u8BC1\\\",\\n          icon: error,\\n          teleport: \\\".check-in-container\\\"\\n        });\\n      }\\n      try {\\n        const res = await userDoTaskApi({\\n          idd: signInData.value.task_idd\\n        });\\n        window.log(\\\"\\u7B7E\\u5230\\u72B6\\u6001\\\", res);\\n        if (res.money) {\\n          mitt.emit(\\\"updateCoins\\\", true);\\n          mitt.emit(\\\"updateTodayActivity\\\", true);\\n          getSignInData(true);\\n          showToast({\\n            message: `\\u7B7E\\u5230\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\\n            icon: success,\\n            teleport: \\\".check-in-container\\\"\\n          });\\n          btnCheckInName.value = \\\"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\\\";\\n        }\\n      } catch (error2) {\\n        console.error(error2);\\n      }\\n    };\\n    const getSignInData = async (isReq = false) => {\\n      window.log(\\\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u8868\\\", signInData.value);\\n      const listError = signInData.value.list?.[3]?.date !== dayjs().format(\\\"YYYY-MM-DD\\\");\\n      if (signInData.value.list && !listError && !isReq)\\n        return;\\n      await taskActivityStore.getSignInListApi();\\n      window.log(\\\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u88682\\\", signInData.value);\\n    };\\n    const cardClassName = (item) => {\\n      let className;\\n      const isSame = dayjs().isSame(dayjs(item.date), \\\"day\\\");\\n      const isAfter = dayjs().isAfter(dayjs(item.date), \\\"day\\\");\\n      if (isSame) {\\n        className = item.hisokflag ? \\\"item-checked-in\\\" : \\\"item-today\\\";\\n      } else if (isAfter) {\\n        className = item.hisokflag ? \\\"item-checked-in\\\" : \\\"item-expires\\\";\\n      } else {\\n        className = \\\"item-point\\\";\\n      }\\n      return className;\\n    };\\n    watchEffect(() => {\\n      const list = signInData.value.list;\\n      cardList.value = list;\\n    });\\n    onMounted(() => {\\n      getSignInData();\\n    });\\n    return (_ctx, _cache) => {\\n      const _component_van_button = _resolveComponent(\\\"van-button\\\");\\n      return _openBlock(), _createElementBlock(\\\"div\\\", _hoisted_1, [\\n        _createElementVNode(\\\"div\\\", _hoisted_2, [\\n          _createTextVNode(\\\" \\u5DF2\\u8FDE\\u7EED\\u7B7E\\u5230 \\\"),\\n          _createElementVNode(\\n            \\\"span\\\",\\n            _hoisted_3,\\n            _toDisplayString(_unref(signInData).out_num?.day),\\n            1\\n            /* TEXT */\\n          ),\\n          _createTextVNode(\\\" \\u5929\\uFF0C\\u660E\\u5929\\u7B7E\\u5230 \\\"),\\n          _createElementVNode(\\n            \\\"span\\\",\\n            _hoisted_4,\\n            \\\"+\\\" + _toDisplayString(_unref(signInData).out_num?.money),\\n            1\\n            /* TEXT */\\n          ),\\n          _createTextVNode(\\\" \\u79EF\\u5206 \\\")\\n        ]),\\n        _createElementVNode(\\\"div\\\", _hoisted_5, [\\n          (_openBlock(true), _createElementBlock(\\n            _Fragment,\\n            null,\\n            _renderList(cardList.value, (item) => {\\n              return _openBlock(), _createElementBlock(\\\"div\\\", {\\n                key: item.date,\\n                class: \\\"flex flex-col items-center justify-start\\\"\\n              }, [\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  {\\n                    class: _normalizeClass([\\\"item-card\\\", cardClassName(item)])\\n                  },\\n                  [\\n                    cardClassName(item) === \\\"item-checked-in\\\" ? (_openBlock(), _createElementBlock(\\\"i\\\", _hoisted_6)) : cardClassName(item) === \\\"item-expires\\\" ? (_openBlock(), _createElementBlock(\\\"i\\\", _hoisted_7)) : (_openBlock(), _createElementBlock(\\n                      \\\"div\\\",\\n                      _hoisted_8,\\n                      \\\"+\\\" + _toDisplayString(item.money),\\n                      1\\n                      /* TEXT */\\n                    ))\\n                  ],\\n                  2\\n                  /* CLASS */\\n                ),\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  _hoisted_9,\\n                  _toDisplayString(item.datetxt),\\n                  1\\n                  /* TEXT */\\n                )\\n              ]);\\n            }),\\n            128\\n            /* KEYED_FRAGMENT */\\n          ))\\n        ]),\\n        _createVNode(_component_van_button, {\\n          type: \\\"primary\\\",\\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \\\" checked\\\" : \\\"\\\"}`),\\n          onClick: onCheckIn\\n        }, {\\n          default: _withCtx(() => [\\n            _createTextVNode(\\n              _toDisplayString(btnCheckInName.value),\\n              1\\n              /* TEXT */\\n            )\\n          ]),\\n          _: 1\\n          /* STABLE */\\n        }, 8, [\\\"class\\\"])\\n      ]);\\n    };\\n  }\\n});\\n\"],\n  \"mappings\": \"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\",\n  \"names\": [\"_a\"]\n}\n"
    },
    {
      "name": "vite:define",
      "start": 1714699772224,
      "end": 1714699772224,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699772224,
      "end": 1714699772224,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699772224,
      "end": 1714699772224,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699772224,
      "end": 1714699772224,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699772225,
      "end": 1714699772225,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699772225,
      "end": 1714699772225,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699772225,
      "end": 1714699772225,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699772225,
      "end": 1714699772225,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699772225,
      "end": 1714699772227,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */import { Button as __unplugin_components_0 } from 'vant/es';import 'vant/es/button/style/index';\n\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" };\nconst _hoisted_2 = { class: \"tips\" };\nconst _hoisted_3 = { class: \"consequent-days\" };\nconst _hoisted_4 = { class: \"tomorrow-get-point\" };\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" };\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n};\nconst _hoisted_8 = { key: 2 };\nconst _hoisted_9 = { class: \"item-date\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport error from \"@/assets/images/common/error.png\";\nimport info from \"@/assets/images/common/info.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport router from \"@/router\";\nimport { useAuthStore } from \"@/store/modules/auth\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { InWEB } from \"@/utils/tools\";\nimport dayjs from \"dayjs\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, ref, watchEffect } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"CheckIn\",\n  setup(__props) {\n    var _a;\n    const taskActivityStore = useTaskActivityStore();\n    const point = ref(0);\n    const { signInData } = storeToRefs(taskActivityStore);\n    const authStore = useAuthStore();\n    const { token } = storeToRefs(authStore);\n    const { verified_status } = (_a = authStore.userInfo) != null ? _a : {};\n    const cardList = ref([]);\n    const btnCheckInName = ref(signInData.value.todayisok ? \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\" : \"\\u70B9\\u51FB\\u7B7E\\u5230\");\n    const onCheckIn = async () => {\n      if (signInData.value.todayisok) {\n        return showToast({\n          message: \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\",\n          icon: info,\n          iconSize: \"48px\",\n          teleport: \".check-in-container\"\n        });\n      }\n      const isLogin = computed(() => !!token.value);\n      if (InWEB()) {\n        if (!isLogin.value) {\n          return router.push(\"/auth/login\");\n        }\n      }\n      if (!verified_status) {\n        return showToast({\n          message: \"\\u7528\\u6237\\u8FD8\\u672A\\u5B9E\\u540D\\u8BA4\\u8BC1\",\n          icon: error,\n          teleport: \".check-in-container\"\n        });\n      }\n      try {\n        const res = await userDoTaskApi({\n          idd: signInData.value.task_idd\n        });\n        window.log(\"\\u7B7E\\u5230\\u72B6\\u6001\", res);\n        if (res.money) {\n          mitt.emit(\"updateCoins\", true);\n          mitt.emit(\"updateTodayActivity\", true);\n          getSignInData(true);\n          showToast({\n            message: `\\u7B7E\\u5230\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".check-in-container\"\n          });\n          btnCheckInName.value = \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\";\n        }\n      } catch (error2) {\n        console.error(error2);\n      }\n    };\n    const getSignInData = async (isReq = false) => {\n      var _a2, _b;\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u8868\", signInData.value);\n      const listError = ((_b = (_a2 = signInData.value.list) == null ? void 0 : _a2[3]) == null ? void 0 : _b.date) !== dayjs().format(\"YYYY-MM-DD\");\n      if (signInData.value.list && !listError && !isReq)\n        return;\n      await taskActivityStore.getSignInListApi();\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u88682\", signInData.value);\n    };\n    const cardClassName = (item) => {\n      let className;\n      const isSame = dayjs().isSame(dayjs(item.date), \"day\");\n      const isAfter = dayjs().isAfter(dayjs(item.date), \"day\");\n      if (isSame) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-today\";\n      } else if (isAfter) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-expires\";\n      } else {\n        className = \"item-point\";\n      }\n      return className;\n    };\n    watchEffect(() => {\n      const list = signInData.value.list;\n      cardList.value = list;\n    });\n    onMounted(() => {\n      getSignInData();\n    });\n    return (_ctx, _cache) => {\n      var _a2, _b;\n      const _component_van_button = __unplugin_components_0;\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u5DF2\\u8FDE\\u7EED\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_3,\n            _toDisplayString((_a2 = _unref(signInData).out_num) == null ? void 0 : _a2.day),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u5929\\uFF0C\\u660E\\u5929\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_4,\n            \"+\" + _toDisplayString((_b = _unref(signInData).out_num) == null ? void 0 : _b.money),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u79EF\\u5206 \")\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(\n            _Fragment,\n            null,\n            _renderList(cardList.value, (item) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: item.date,\n                class: \"flex flex-col items-center justify-start\"\n              }, [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: _normalizeClass([\"item-card\", cardClassName(item)])\n                  },\n                  [\n                    cardClassName(item) === \"item-checked-in\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6)) : cardClassName(item) === \"item-expires\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"div\",\n                      _hoisted_8,\n                      \"+\" + _toDisplayString(item.money),\n                      1\n                      /* TEXT */\n                    ))\n                  ],\n                  2\n                  /* CLASS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_9,\n                  _toDisplayString(item.datetxt),\n                  1\n                  /* TEXT */\n                )\n              ]);\n            }),\n            128\n            /* KEYED_FRAGMENT */\n          ))\n        ]),\n        _createVNode(_component_van_button, {\n          type: \"primary\",\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \" checked\" : \"\"}`),\n          onClick: onCheckIn\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\n              _toDisplayString(btnCheckInName.value),\n              1\n              /* TEXT */\n            )\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"class\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772227,
      "end": 1714699772227,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/CheckIn.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"check-in-container flex flex-col items-start justify-start\" };\nconst _hoisted_2 = { class: \"tips\" };\nconst _hoisted_3 = { class: \"consequent-days\" };\nconst _hoisted_4 = { class: \"tomorrow-get-point\" };\nconst _hoisted_5 = { class: \"card-container flex items-center justify-start\" };\nconst _hoisted_6 = {\n  key: 0,\n  class: \"checked-in\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"point-expires\"\n};\nconst _hoisted_8 = { key: 2 };\nconst _hoisted_9 = { class: \"item-date\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport error from \"@/assets/images/common/error.png\";\nimport info from \"@/assets/images/common/info.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport router from \"@/router\";\nimport { useAuthStore } from \"@/store/modules/auth\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { InWEB } from \"@/utils/tools\";\nimport dayjs from \"dayjs\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, ref, watchEffect } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"CheckIn\",\n  setup(__props) {\n    var _a;\n    const taskActivityStore = useTaskActivityStore();\n    const point = ref(0);\n    const { signInData } = storeToRefs(taskActivityStore);\n    const authStore = useAuthStore();\n    const { token } = storeToRefs(authStore);\n    const { verified_status } = (_a = authStore.userInfo) != null ? _a : {};\n    const cardList = ref([]);\n    const btnCheckInName = ref(signInData.value.todayisok ? \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\" : \"\\u70B9\\u51FB\\u7B7E\\u5230\");\n    const onCheckIn = async () => {\n      if (signInData.value.todayisok) {\n        return showToast({\n          message: \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\",\n          icon: info,\n          iconSize: \"48px\",\n          teleport: \".check-in-container\"\n        });\n      }\n      const isLogin = computed(() => !!token.value);\n      if (InWEB()) {\n        if (!isLogin.value) {\n          return router.push(\"/auth/login\");\n        }\n      }\n      if (!verified_status) {\n        return showToast({\n          message: \"\\u7528\\u6237\\u8FD8\\u672A\\u5B9E\\u540D\\u8BA4\\u8BC1\",\n          icon: error,\n          teleport: \".check-in-container\"\n        });\n      }\n      try {\n        const res = await userDoTaskApi({\n          idd: signInData.value.task_idd\n        });\n        window.log(\"\\u7B7E\\u5230\\u72B6\\u6001\", res);\n        if (res.money) {\n          mitt.emit(\"updateCoins\", true);\n          mitt.emit(\"updateTodayActivity\", true);\n          getSignInData(true);\n          showToast({\n            message: `\\u7B7E\\u5230\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".check-in-container\"\n          });\n          btnCheckInName.value = \"\\u4ECA\\u65E5\\u5DF2\\u7B7E\\u5230\";\n        }\n      } catch (error2) {\n        console.error(error2);\n      }\n    };\n    const getSignInData = async (isReq = false) => {\n      var _a2, _b;\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u8868\", signInData.value);\n      const listError = ((_b = (_a2 = signInData.value.list) == null ? void 0 : _a2[3]) == null ? void 0 : _b.date) !== dayjs().format(\"YYYY-MM-DD\");\n      if (signInData.value.list && !listError && !isReq)\n        return;\n      await taskActivityStore.getSignInListApi();\n      window.log(\"\\u6BCF\\u65E5\\u7B7E\\u5230\\u79EF\\u5206\\u5217\\u88682\", signInData.value);\n    };\n    const cardClassName = (item) => {\n      let className;\n      const isSame = dayjs().isSame(dayjs(item.date), \"day\");\n      const isAfter = dayjs().isAfter(dayjs(item.date), \"day\");\n      if (isSame) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-today\";\n      } else if (isAfter) {\n        className = item.hisokflag ? \"item-checked-in\" : \"item-expires\";\n      } else {\n        className = \"item-point\";\n      }\n      return className;\n    };\n    watchEffect(() => {\n      const list = signInData.value.list;\n      cardList.value = list;\n    });\n    onMounted(() => {\n      getSignInData();\n    });\n    return (_ctx, _cache) => {\n      var _a2, _b;\n      const _component_van_button = _resolveComponent(\"van-button\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u5DF2\\u8FDE\\u7EED\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_3,\n            _toDisplayString((_a2 = _unref(signInData).out_num) == null ? void 0 : _a2.day),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u5929\\uFF0C\\u660E\\u5929\\u7B7E\\u5230 \"),\n          _createElementVNode(\n            \"span\",\n            _hoisted_4,\n            \"+\" + _toDisplayString((_b = _unref(signInData).out_num) == null ? void 0 : _b.money),\n            1\n            /* TEXT */\n          ),\n          _createTextVNode(\" \\u79EF\\u5206 \")\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(\n            _Fragment,\n            null,\n            _renderList(cardList.value, (item) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: item.date,\n                class: \"flex flex-col items-center justify-start\"\n              }, [\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: _normalizeClass([\"item-card\", cardClassName(item)])\n                  },\n                  [\n                    cardClassName(item) === \"item-checked-in\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6)) : cardClassName(item) === \"item-expires\" ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"div\",\n                      _hoisted_8,\n                      \"+\" + _toDisplayString(item.money),\n                      1\n                      /* TEXT */\n                    ))\n                  ],\n                  2\n                  /* CLASS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_9,\n                  _toDisplayString(item.datetxt),\n                  1\n                  /* TEXT */\n                )\n              ]);\n            }),\n            128\n            /* KEYED_FRAGMENT */\n          ))\n        ]),\n        _createVNode(_component_van_button, {\n          type: \"primary\",\n          class: _normalizeClass(`btn-check-in${_unref(signInData).todayisok ? \" checked\" : \"\"}`),\n          onClick: onCheckIn\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\n              _toDisplayString(btnCheckInName.value),\n              1\n              /* TEXT */\n            )\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"class\"])\n      ]);\n    };\n  }\n});\n"
        ],
        "names": [],
        "mappingsoCAAoC,uBAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;"
      }
    },
    {
      "name": "vite:style-import",
      "start": 1714699772227,
      "end": 1714699772227,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699772227,
      "end": 1714699772227,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699772227,
      "end": 1714699772227,
      "order": "normal"
    }
  ]
}
