{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/action-bar-button/ActionBarButton.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { extend, createNamespace } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Button } from \"../button/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-button\");\nconst actionBarButtonProps = extend({}, routeProps, {\n  type: String,\n  text: String,\n  icon: String,\n  color: String,\n  loading: Boolean,\n  disabled: Boolean\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarButtonProps,\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    const {\n      parent,\n      index\n    } = useParent(ACTION_BAR_KEY);\n    const isFirst = computed(() => {\n      if (parent) {\n        const prev = parent.children[index.value - 1];\n        return !(prev && \"isButton\" in prev);\n      }\n    });\n    const isLast = computed(() => {\n      if (parent) {\n        const next = parent.children[index.value + 1];\n        return !(next && \"isButton\" in next);\n      }\n    });\n    useExpose({\n      isButton: true\n    });\n    return () => {\n      const {\n        type,\n        icon,\n        text,\n        color,\n        loading,\n        disabled\n      } = props;\n      return _createVNode(Button, {\n        \"class\": bem([type, {\n          last: isLast.value,\n          first: isFirst.value\n        }]),\n        \"size\": \"large\",\n        \"type\": type,\n        \"icon\": icon,\n        \"color\": color,\n        \"loading\": loading,\n        \"disabled\": disabled,\n        \"onClick\": route\n      }, {\n        default: () => [slots.default ? slots.default() : text]\n      });\n    };\n  }\n});\nexport {\n  actionBarButtonProps,\n  stdin_default as default\n};\n",
      "start": 1714699767147,
      "end": 1714699767188,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { extend, createNamespace } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Button } from \"../button/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-button\");\nconst actionBarButtonProps = extend({}, routeProps, {\n  type: String,\n  text: String,\n  icon: String,\n  color: String,\n  loading: Boolean,\n  disabled: Boolean\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarButtonProps,\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    const {\n      parent,\n      index\n    } = useParent(ACTION_BAR_KEY);\n    const isFirst = computed(() => {\n      if (parent) {\n        const prev = parent.children[index.value - 1];\n        return !(prev && \"isButton\" in prev);\n      }\n    });\n    const isLast = computed(() => {\n      if (parent) {\n        const next = parent.children[index.value + 1];\n        return !(next && \"isButton\" in next);\n      }\n    });\n    useExpose({\n      isButton: true\n    });\n    return () => {\n      const {\n        type,\n        icon,\n        text,\n        color,\n        loading,\n        disabled\n      } = props;\n      return _createVNode(Button, {\n        \"class\": bem([type, {\n          last: isLast.value,\n          first: isFirst.value\n        }]),\n        \"size\": \"large\",\n        \"type\": type,\n        \"icon\": icon,\n        \"color\": color,\n        \"loading\": loading,\n        \"disabled\": disabled,\n        \"onClick\": route\n      }, {\n        default: () => [slots.default ? slots.default() : text]\n      });\n    };\n  }\n});\nexport {\n  actionBarButtonProps,\n  stdin_default as default\n};\n",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    }
  ]
}
