{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/qrcode@1.5.3/node_modules/qrcode/lib/renderer/utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n",
      "start": 1714699771043,
      "end": 1714699771063,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699771063,
      "end": 1714699771063,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as utils } from \"\\u0000/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/qrcode@1.5.3/node_modules/qrcode/lib/renderer/utils.js?commonjs-exports\";\n\n(function (exports) {\n\tfunction hex2rgba (hex) {\n\t  if (typeof hex === 'number') {\n\t    hex = hex.toString()\n\t  }\n\n\t  if (typeof hex !== 'string') {\n\t    throw new Error('Color should be defined as hex string')\n\t  }\n\n\t  let hexCode = hex.slice().replace('#', '').split('')\n\t  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n\t    throw new Error('Invalid hex color: ' + hex)\n\t  }\n\n\t  // Convert from short to long form (fff -> ffffff)\n\t  if (hexCode.length === 3 || hexCode.length === 4) {\n\t    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n\t      return [c, c]\n\t    }))\n\t  }\n\n\t  // Add default alpha value\n\t  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n\t  const hexValue = parseInt(hexCode.join(''), 16)\n\n\t  return {\n\t    r: (hexValue >> 24) & 255,\n\t    g: (hexValue >> 16) & 255,\n\t    b: (hexValue >> 8) & 255,\n\t    a: hexValue & 255,\n\t    hex: '#' + hexCode.slice(0, 6).join('')\n\t  }\n\t}\n\n\texports.getOptions = function getOptions (options) {\n\t  if (!options) options = {}\n\t  if (!options.color) options.color = {}\n\n\t  const margin = typeof options.margin === 'undefined' ||\n\t    options.margin === null ||\n\t    options.margin < 0\n\t    ? 4\n\t    : options.margin\n\n\t  const width = options.width && options.width >= 21 ? options.width : undefined\n\t  const scale = options.scale || 4\n\n\t  return {\n\t    width: width,\n\t    scale: width ? 4 : scale,\n\t    margin: margin,\n\t    color: {\n\t      dark: hex2rgba(options.color.dark || '#000000ff'),\n\t      light: hex2rgba(options.color.light || '#ffffffff')\n\t    },\n\t    type: options.type,\n\t    rendererOpts: options.rendererOpts || {}\n\t  }\n\t}\n\n\texports.getScale = function getScale (qrSize, opts) {\n\t  return opts.width && opts.width >= qrSize + opts.margin * 2\n\t    ? opts.width / (qrSize + opts.margin * 2)\n\t    : opts.scale\n\t}\n\n\texports.getImageWidth = function getImageWidth (qrSize, opts) {\n\t  const scale = exports.getScale(qrSize, opts)\n\t  return Math.floor((qrSize + opts.margin * 2) * scale)\n\t}\n\n\texports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n\t  const size = qr.modules.size\n\t  const data = qr.modules.data\n\t  const scale = exports.getScale(size, opts)\n\t  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n\t  const scaledMargin = opts.margin * scale\n\t  const palette = [opts.color.light, opts.color.dark]\n\n\t  for (let i = 0; i < symbolSize; i++) {\n\t    for (let j = 0; j < symbolSize; j++) {\n\t      let posDst = (i * symbolSize + j) * 4\n\t      let pxColor = opts.color.light\n\n\t      if (i >= scaledMargin && j >= scaledMargin &&\n\t        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n\t        const iSrc = Math.floor((i - scaledMargin) / scale)\n\t        const jSrc = Math.floor((j - scaledMargin) / scale)\n\t        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n\t      }\n\n\t      imgData[posDst++] = pxColor.r\n\t      imgData[posDst++] = pxColor.g\n\t      imgData[posDst++] = pxColor.b\n\t      imgData[posDst] = pxColor.a\n\t    }\n\t  }\n\t} \n} (utils));\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(utils);\nexport { utils as __moduleExports };",
      "start": 1714699771063,
      "end": 1714699771064,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;CAAA,SAAS,QAAQ,EAAE,GAAG,EAAE;CACxB,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;CAC/B,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE;CACxB,GAAG;AACH;CACA,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;CAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;CAC5D,GAAG;AACH;CACA,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;CACtD,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;CACxE,IAAI,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,GAAG,CAAC;CAChD,GAAG;AACH;CACA;CACA,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;CACpD,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;CACxE,MAAM,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;CACnB,KAAK,CAAC,CAAC;CACP,GAAG;AACH;CACA;CACA,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAClD;CACA,EAAE,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AACjD;CACA,EAAE,OAAO;CACT,IAAI,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,IAAI,GAAG;CAC7B,IAAI,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,IAAI,GAAG;CAC7B,IAAI,CAAC,EAAE,CAAC,QAAQ,IAAI,CAAC,IAAI,GAAG;CAC5B,IAAI,CAAC,EAAE,QAAQ,GAAG,GAAG;CACrB,IAAI,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;CAC3C,GAAG;CACH,CAAC;AACD;CACA,qBAAqB,SAAS,UAAU,EAAE,OAAO,EAAE;CACnD,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE;CAC5B,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,EAAE;AACxC;CACA,EAAE,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,MAAM,KAAK,WAAW;CACtD,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI;CAC3B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;CACtB,MAAM,CAAC;CACP,MAAM,OAAO,CAAC,MAAM;AACpB;CACA,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,GAAG,SAAS;CAChF,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,CAAC;AAClC;CACA,EAAE,OAAO;CACT,IAAI,KAAK,EAAE,KAAK;CAChB,IAAI,KAAK,EAAE,KAAK,GAAG,CAAC,GAAG,KAAK;CAC5B,IAAI,MAAM,EAAE,MAAM;CAClB,IAAI,KAAK,EAAE;CACX,MAAM,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,WAAW,CAAC;CACvD,MAAM,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,WAAW,CAAC;CACzD,KAAK;CACL,IAAI,IAAI,EAAE,OAAO,CAAC,IAAI;CACtB,IAAI,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE;CAC5C,GAAG;CACH,CAAC;AACD;CACA,mBAAmB,SAAS,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;CACpD,EAAE,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;CAC7D,MAAM,IAAI,CAAC,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;CAC7C,MAAM,IAAI,CAAC,KAAK;CAChB,CAAC;AACD;CACA,wBAAwB,SAAS,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE;CAC9D,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;CAC9C,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC;CACvD,CAAC;AACD;CACA,wBAAwB,SAAS,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE;CACnE,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI;CAC9B,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI;CAC9B,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;CAC5C,EAAE,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC;CACjE,EAAE,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK;CAC1C,EAAE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACrD;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;CACvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;CACzC,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC;CAC3C,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;AACpC;CACA,MAAM,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI,YAAY;CAChD,QAAQ,CAAC,GAAG,UAAU,GAAG,YAAY,IAAI,CAAC,GAAG,UAAU,GAAG,YAAY,EAAE;CACxE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,KAAK,CAAC;CAC3D,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,KAAK,CAAC;CAC3D,QAAQ,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAC3D,OAAO;AACP;CACA,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;CACnC,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;CACnC,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;CACnC,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC;CACjC,KAAK;CACL,GAAG;CACH"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699771064,
      "end": 1714699771064,
      "order": "normal"
    }
  ]
}
