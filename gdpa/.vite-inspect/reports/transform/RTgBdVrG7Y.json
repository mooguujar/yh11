{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vxe-table@4.5.21_vue@3.4.19_xe-utils@3.5.24/node_modules/vxe-table/es/export/src/import-panel.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, h, ref, computed, inject, reactive, nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport VxeModalComponent from '../../modal/src/modal';\nimport VxeRadioGroupComponent from '../../radio/src/group';\nimport VxeRadioComponent from '../../radio/src/radio';\nimport VxeButtonComponent from '../../button/src/button';\nimport { parseFile } from '../../tools/utils';\nexport default defineComponent({\n    name: 'VxeImportPanel',\n    props: {\n        defaultOptions: Object,\n        storeData: Object\n    },\n    setup: function (props) {\n        var $xetable = inject('$xetable', {});\n        var computeImportOpts = $xetable.getComputeMaps().computeImportOpts;\n        var reactData = reactive({\n            loading: false\n        });\n        var refFileBtn = ref();\n        var computeSelectName = computed(function () {\n            var storeData = props.storeData;\n            return \"\".concat(storeData.filename, \".\").concat(storeData.type);\n        });\n        var computeHasFile = computed(function () {\n            var storeData = props.storeData;\n            return storeData.file && storeData.type;\n        });\n        var computeParseTypeLabel = computed(function () {\n            var storeData = props.storeData;\n            var type = storeData.type, typeList = storeData.typeList;\n            if (type) {\n                var selectItem = XEUtils.find(typeList, function (item) { return type === item.value; });\n                return selectItem ? GlobalConfig.i18n(selectItem.label) : '*.*';\n            }\n            return \"*.\".concat(typeList.map(function (item) { return item.value; }).join(', *.'));\n        });\n        var clearFileEvent = function () {\n            var storeData = props.storeData;\n            Object.assign(storeData, {\n                filename: '',\n                sheetName: '',\n                type: ''\n            });\n        };\n        var selectFileEvent = function () {\n            var storeData = props.storeData, defaultOptions = props.defaultOptions;\n            $xetable.readFile(defaultOptions).then(function (params) {\n                var file = params.file;\n                Object.assign(storeData, parseFile(file), { file: file });\n            }).catch(function (e) { return e; });\n        };\n        var showEvent = function () {\n            nextTick(function () {\n                var targetElem = refFileBtn.value;\n                if (targetElem) {\n                    targetElem.focus();\n                }\n            });\n        };\n        var cancelEvent = function () {\n            var storeData = props.storeData;\n            storeData.visible = false;\n        };\n        var importEvent = function () {\n            var storeData = props.storeData, defaultOptions = props.defaultOptions;\n            var importOpts = computeImportOpts.value;\n            reactData.loading = true;\n            $xetable.importByFile(storeData.file, Object.assign({}, importOpts, defaultOptions)).then(function () {\n                reactData.loading = false;\n                storeData.visible = false;\n            }).catch(function () {\n                reactData.loading = false;\n            });\n        };\n        var renderVN = function () {\n            var defaultOptions = props.defaultOptions, storeData = props.storeData;\n            var selectName = computeSelectName.value;\n            var hasFile = computeHasFile.value;\n            var parseTypeLabel = computeParseTypeLabel.value;\n            return h(VxeModalComponent, {\n                modelValue: storeData.visible,\n                title: GlobalConfig.i18n('vxe.import.impTitle'),\n                width: 440,\n                mask: true,\n                lockView: true,\n                showFooter: false,\n                escClosable: true,\n                maskClosable: true,\n                loading: reactData.loading,\n                'onUpdate:modelValue': function (value) {\n                    storeData.visible = value;\n                },\n                onShow: showEvent\n            }, {\n                default: function () {\n                    return h('div', {\n                        class: 'vxe-export--panel'\n                    }, [\n                        h('table', {\n                            cellspacing: 0,\n                            cellpadding: 0,\n                            border: 0\n                        }, [\n                            h('tbody', [\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impFile')),\n                                    h('td', [\n                                        hasFile ? h('div', {\n                                            class: 'vxe-import-selected--file',\n                                            title: selectName\n                                        }, [\n                                            h('span', selectName),\n                                            h('i', {\n                                                class: GlobalConfig.icon.INPUT_CLEAR,\n                                                onClick: clearFileEvent\n                                            })\n                                        ]) : h('button', {\n                                            ref: refFileBtn,\n                                            class: 'vxe-import-select--file',\n                                            onClick: selectFileEvent\n                                        }, GlobalConfig.i18n('vxe.import.impSelect'))\n                                    ])\n                                ]),\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impType')),\n                                    h('td', parseTypeLabel)\n                                ]),\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impOpts')),\n                                    h('td', [\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: defaultOptions.mode,\n                                            'onUpdate:modelValue': function (value) {\n                                                defaultOptions.mode = value;\n                                            }\n                                        }, {\n                                            default: function () { return storeData.modeList.map(function (item) { return h(VxeRadioComponent, { label: item.value, content: GlobalConfig.i18n(item.label) }); }); }\n                                        })\n                                    ])\n                                ])\n                            ])\n                        ]),\n                        h('div', {\n                            class: 'vxe-export--panel-btns'\n                        }, [\n                            h(VxeButtonComponent, {\n                                content: GlobalConfig.i18n('vxe.import.impCancel'),\n                                onClick: cancelEvent\n                            }),\n                            h(VxeButtonComponent, {\n                                status: 'primary',\n                                disabled: !hasFile,\n                                content: GlobalConfig.i18n('vxe.import.impConfirm'),\n                                onClick: importEvent\n                            })\n                        ])\n                    ]);\n                }\n            });\n        };\n        return renderVN;\n    }\n});\n",
      "start": 1714699767733,
      "end": 1714699767752,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { defineComponent, h, ref, computed, inject, reactive, nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport VxeModalComponent from '../../modal/src/modal';\nimport VxeRadioGroupComponent from '../../radio/src/group';\nimport VxeRadioComponent from '../../radio/src/radio';\nimport VxeButtonComponent from '../../button/src/button';\nimport { parseFile } from '../../tools/utils';\nexport default defineComponent({\n    name: 'VxeImportPanel',\n    props: {\n        defaultOptions: Object,\n        storeData: Object\n    },\n    setup: function (props) {\n        var $xetable = inject('$xetable', {});\n        var computeImportOpts = $xetable.getComputeMaps().computeImportOpts;\n        var reactData = reactive({\n            loading: false\n        });\n        var refFileBtn = ref();\n        var computeSelectName = computed(function () {\n            var storeData = props.storeData;\n            return \"\".concat(storeData.filename, \".\").concat(storeData.type);\n        });\n        var computeHasFile = computed(function () {\n            var storeData = props.storeData;\n            return storeData.file && storeData.type;\n        });\n        var computeParseTypeLabel = computed(function () {\n            var storeData = props.storeData;\n            var type = storeData.type, typeList = storeData.typeList;\n            if (type) {\n                var selectItem = XEUtils.find(typeList, function (item) { return type === item.value; });\n                return selectItem ? GlobalConfig.i18n(selectItem.label) : '*.*';\n            }\n            return \"*.\".concat(typeList.map(function (item) { return item.value; }).join(', *.'));\n        });\n        var clearFileEvent = function () {\n            var storeData = props.storeData;\n            Object.assign(storeData, {\n                filename: '',\n                sheetName: '',\n                type: ''\n            });\n        };\n        var selectFileEvent = function () {\n            var storeData = props.storeData, defaultOptions = props.defaultOptions;\n            $xetable.readFile(defaultOptions).then(function (params) {\n                var file = params.file;\n                Object.assign(storeData, parseFile(file), { file: file });\n            }).catch(function (e) { return e; });\n        };\n        var showEvent = function () {\n            nextTick(function () {\n                var targetElem = refFileBtn.value;\n                if (targetElem) {\n                    targetElem.focus();\n                }\n            });\n        };\n        var cancelEvent = function () {\n            var storeData = props.storeData;\n            storeData.visible = false;\n        };\n        var importEvent = function () {\n            var storeData = props.storeData, defaultOptions = props.defaultOptions;\n            var importOpts = computeImportOpts.value;\n            reactData.loading = true;\n            $xetable.importByFile(storeData.file, Object.assign({}, importOpts, defaultOptions)).then(function () {\n                reactData.loading = false;\n                storeData.visible = false;\n            }).catch(function () {\n                reactData.loading = false;\n            });\n        };\n        var renderVN = function () {\n            var defaultOptions = props.defaultOptions, storeData = props.storeData;\n            var selectName = computeSelectName.value;\n            var hasFile = computeHasFile.value;\n            var parseTypeLabel = computeParseTypeLabel.value;\n            return h(VxeModalComponent, {\n                modelValue: storeData.visible,\n                title: GlobalConfig.i18n('vxe.import.impTitle'),\n                width: 440,\n                mask: true,\n                lockView: true,\n                showFooter: false,\n                escClosable: true,\n                maskClosable: true,\n                loading: reactData.loading,\n                'onUpdate:modelValue': function (value) {\n                    storeData.visible = value;\n                },\n                onShow: showEvent\n            }, {\n                default: function () {\n                    return h('div', {\n                        class: 'vxe-export--panel'\n                    }, [\n                        h('table', {\n                            cellspacing: 0,\n                            cellpadding: 0,\n                            border: 0\n                        }, [\n                            h('tbody', [\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impFile')),\n                                    h('td', [\n                                        hasFile ? h('div', {\n                                            class: 'vxe-import-selected--file',\n                                            title: selectName\n                                        }, [\n                                            h('span', selectName),\n                                            h('i', {\n                                                class: GlobalConfig.icon.INPUT_CLEAR,\n                                                onClick: clearFileEvent\n                                            })\n                                        ]) : h('button', {\n                                            ref: refFileBtn,\n                                            class: 'vxe-import-select--file',\n                                            onClick: selectFileEvent\n                                        }, GlobalConfig.i18n('vxe.import.impSelect'))\n                                    ])\n                                ]),\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impType')),\n                                    h('td', parseTypeLabel)\n                                ]),\n                                h('tr', [\n                                    h('td', GlobalConfig.i18n('vxe.import.impOpts')),\n                                    h('td', [\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: defaultOptions.mode,\n                                            'onUpdate:modelValue': function (value) {\n                                                defaultOptions.mode = value;\n                                            }\n                                        }, {\n                                            default: function () { return storeData.modeList.map(function (item) { return h(VxeRadioComponent, { label: item.value, content: GlobalConfig.i18n(item.label) }); }); }\n                                        })\n                                    ])\n                                ])\n                            ])\n                        ]),\n                        h('div', {\n                            class: 'vxe-export--panel-btns'\n                        }, [\n                            h(VxeButtonComponent, {\n                                content: GlobalConfig.i18n('vxe.import.impCancel'),\n                                onClick: cancelEvent\n                            }),\n                            h(VxeButtonComponent, {\n                                status: 'primary',\n                                disabled: !hasFile,\n                                content: GlobalConfig.i18n('vxe.import.impConfirm'),\n                                onClick: importEvent\n                            })\n                        ])\n                    ]);\n                }\n            });\n        };\n        return renderVN;\n    }\n});\n",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767752,
      "end": 1714699767752,
      "order": "normal"
    }
  ]
}
