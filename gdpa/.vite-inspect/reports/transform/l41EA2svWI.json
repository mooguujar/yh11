{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/findIndex.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n",
      "start": 1714699768345,
      "end": 1714699768357,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768357,
      "end": 1714699768357,
      "order": "normal"
    }
  ]
}
