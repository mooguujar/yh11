{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/action-bar-icon/ActionBarIcon.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, createNamespace, unknownProp, numericProp } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Badge } from \"../badge/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-icon\");\nconst actionBarIconProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  color: String,\n  badge: numericProp,\n  iconClass: unknownProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarIconProps,\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    useParent(ACTION_BAR_KEY);\n    const renderIcon = () => {\n      const {\n        dot,\n        badge,\n        icon,\n        color,\n        iconClass,\n        badgeProps,\n        iconPrefix\n      } = props;\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": dot,\n          \"class\": bem(\"icon\"),\n          \"content\": badge\n        }, badgeProps), {\n          default: slots.icon\n        });\n      }\n      return _createVNode(Icon, {\n        \"tag\": \"div\",\n        \"dot\": dot,\n        \"name\": icon,\n        \"badge\": badge,\n        \"color\": color,\n        \"class\": [bem(\"icon\"), iconClass],\n        \"badgeProps\": badgeProps,\n        \"classPrefix\": iconPrefix\n      }, null);\n    };\n    return () => _createVNode(\"div\", {\n      \"role\": \"button\",\n      \"class\": bem(),\n      \"tabindex\": 0,\n      \"onClick\": route\n    }, [renderIcon(), slots.default ? slots.default() : props.text]);\n  }\n});\nexport {\n  actionBarIconProps,\n  stdin_default as default\n};\n",
      "start": 1714699767147,
      "end": 1714699767188,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, createNamespace, unknownProp, numericProp } from \"../utils/index.mjs\";\nimport { ACTION_BAR_KEY } from \"../action-bar/ActionBar.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Badge } from \"../badge/index.mjs\";\nconst [name, bem] = createNamespace(\"action-bar-icon\");\nconst actionBarIconProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  color: String,\n  badge: numericProp,\n  iconClass: unknownProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: actionBarIconProps,\n  setup(props, {\n    slots\n  }) {\n    const route = useRoute();\n    useParent(ACTION_BAR_KEY);\n    const renderIcon = () => {\n      const {\n        dot,\n        badge,\n        icon,\n        color,\n        iconClass,\n        badgeProps,\n        iconPrefix\n      } = props;\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": dot,\n          \"class\": bem(\"icon\"),\n          \"content\": badge\n        }, badgeProps), {\n          default: slots.icon\n        });\n      }\n      return _createVNode(Icon, {\n        \"tag\": \"div\",\n        \"dot\": dot,\n        \"name\": icon,\n        \"badge\": badge,\n        \"color\": color,\n        \"class\": [bem(\"icon\"), iconClass],\n        \"badgeProps\": badgeProps,\n        \"classPrefix\": iconPrefix\n      }, null);\n    };\n    return () => _createVNode(\"div\", {\n      \"role\": \"button\",\n      \"class\": bem(),\n      \"tabindex\": 0,\n      \"onClick\": route\n    }, [renderIcon(), slots.default ? slots.default() : props.text]);\n  }\n});\nexport {\n  actionBarIconProps,\n  stdin_default as default\n};\n",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767188,
      "end": 1714699767188,
      "order": "normal"
    }
  ]
}
