{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/watermark/Watermark.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, nextTick, onUnmounted, ref, watch, watchEffect } from \"vue\";\nimport { extend, truthProp, numericProp, createNamespace, getZIndexStyle, makeNumberProp, makeNumericProp, makeStringProp } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"watermark\");\nconst watermarkProps = {\n  gapX: makeNumberProp(0),\n  gapY: makeNumberProp(0),\n  image: String,\n  width: makeNumberProp(100),\n  height: makeNumberProp(100),\n  rotate: makeNumericProp(-22),\n  zIndex: numericProp,\n  content: String,\n  opacity: numericProp,\n  fullPage: truthProp,\n  textColor: makeStringProp(\"#dcdee0\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: watermarkProps,\n  setup(props, {\n    slots\n  }) {\n    const svgElRef = ref();\n    const watermarkUrl = ref(\"\");\n    const imageBase64 = ref(\"\");\n    const renderWatermark = () => {\n      const rotateStyle = {\n        transformOrigin: \"center\",\n        transform: `rotate(${props.rotate}deg)`\n      };\n      const svgInner = () => {\n        if (props.image && !slots.content) {\n          return _createVNode(\"image\", {\n            \"href\": imageBase64.value,\n            \"xlink:href\": imageBase64.value,\n            \"x\": \"0\",\n            \"y\": \"0\",\n            \"width\": props.width,\n            \"height\": props.height,\n            \"style\": rotateStyle\n          }, null);\n        }\n        return _createVNode(\"foreignObject\", {\n          \"x\": \"0\",\n          \"y\": \"0\",\n          \"width\": props.width,\n          \"height\": props.height\n        }, [_createVNode(\"div\", {\n          \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n          \"style\": rotateStyle\n        }, [slots.content ? slots.content() : _createVNode(\"span\", {\n          \"style\": {\n            color: props.textColor\n          }\n        }, [props.content])])]);\n      };\n      const svgWidth = props.width + props.gapX;\n      const svgHeight = props.height + props.gapY;\n      return _createVNode(\"svg\", {\n        \"viewBox\": `0 0 ${svgWidth} ${svgHeight}`,\n        \"width\": svgWidth,\n        \"height\": svgHeight,\n        \"xmlns\": \"http://www.w3.org/2000/svg\",\n        \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n        \"style\": {\n          padding: `0 ${props.gapX}px ${props.gapY}px 0`,\n          opacity: props.opacity\n        }\n      }, [svgInner()]);\n    };\n    const makeImageToBase64 = (url) => {\n      const canvas = document.createElement(\"canvas\");\n      const image = new Image();\n      image.crossOrigin = \"anonymous\";\n      image.referrerPolicy = \"no-referrer\";\n      image.onload = () => {\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx == null ? void 0 : ctx.drawImage(image, 0, 0);\n        imageBase64.value = canvas.toDataURL();\n      };\n      image.src = url;\n    };\n    const makeSvgToBlobUrl = (svgStr) => {\n      const svgBlob = new Blob([svgStr], {\n        type: \"image/svg+xml\"\n      });\n      return URL.createObjectURL(svgBlob);\n    };\n    watchEffect(() => {\n      if (props.image) {\n        makeImageToBase64(props.image);\n      }\n    });\n    watch(() => [imageBase64.value, props.content, props.textColor, props.height, props.width, props.rotate, props.gapX, props.gapY], () => {\n      nextTick(() => {\n        if (svgElRef.value) {\n          if (watermarkUrl.value) {\n            URL.revokeObjectURL(watermarkUrl.value);\n          }\n          watermarkUrl.value = makeSvgToBlobUrl(svgElRef.value.innerHTML);\n        }\n      });\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      if (watermarkUrl.value) {\n        URL.revokeObjectURL(watermarkUrl.value);\n      }\n    });\n    return () => {\n      const style = extend({\n        backgroundImage: `url(${watermarkUrl.value})`\n      }, getZIndexStyle(props.zIndex));\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          full: props.fullPage\n        }),\n        \"style\": style\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"wrapper\"),\n        \"ref\": svgElRef\n      }, [renderWatermark()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  watermarkProps\n};\n",
      "start": 1714699767721,
      "end": 1714699767733,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767733,
      "end": 1714699767733,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767733,
      "end": 1714699767733,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767733,
      "end": 1714699767733,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767733,
      "end": 1714699767733,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767733,
      "end": 1714699767733,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767733,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, nextTick, onUnmounted, ref, watch, watchEffect } from \"vue\";\nimport { extend, truthProp, numericProp, createNamespace, getZIndexStyle, makeNumberProp, makeNumericProp, makeStringProp } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"watermark\");\nconst watermarkProps = {\n  gapX: makeNumberProp(0),\n  gapY: makeNumberProp(0),\n  image: String,\n  width: makeNumberProp(100),\n  height: makeNumberProp(100),\n  rotate: makeNumericProp(-22),\n  zIndex: numericProp,\n  content: String,\n  opacity: numericProp,\n  fullPage: truthProp,\n  textColor: makeStringProp(\"#dcdee0\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: watermarkProps,\n  setup(props, {\n    slots\n  }) {\n    const svgElRef = ref();\n    const watermarkUrl = ref(\"\");\n    const imageBase64 = ref(\"\");\n    const renderWatermark = () => {\n      const rotateStyle = {\n        transformOrigin: \"center\",\n        transform: `rotate(${props.rotate}deg)`\n      };\n      const svgInner = () => {\n        if (props.image && !slots.content) {\n          return _createVNode(\"image\", {\n            \"href\": imageBase64.value,\n            \"xlink:href\": imageBase64.value,\n            \"x\": \"0\",\n            \"y\": \"0\",\n            \"width\": props.width,\n            \"height\": props.height,\n            \"style\": rotateStyle\n          }, null);\n        }\n        return _createVNode(\"foreignObject\", {\n          \"x\": \"0\",\n          \"y\": \"0\",\n          \"width\": props.width,\n          \"height\": props.height\n        }, [_createVNode(\"div\", {\n          \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n          \"style\": rotateStyle\n        }, [slots.content ? slots.content() : _createVNode(\"span\", {\n          \"style\": {\n            color: props.textColor\n          }\n        }, [props.content])])]);\n      };\n      const svgWidth = props.width + props.gapX;\n      const svgHeight = props.height + props.gapY;\n      return _createVNode(\"svg\", {\n        \"viewBox\": `0 0 ${svgWidth} ${svgHeight}`,\n        \"width\": svgWidth,\n        \"height\": svgHeight,\n        \"xmlns\": \"http://www.w3.org/2000/svg\",\n        \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n        \"style\": {\n          padding: `0 ${props.gapX}px ${props.gapY}px 0`,\n          opacity: props.opacity\n        }\n      }, [svgInner()]);\n    };\n    const makeImageToBase64 = (url) => {\n      const canvas = document.createElement(\"canvas\");\n      const image = new Image();\n      image.crossOrigin = \"anonymous\";\n      image.referrerPolicy = \"no-referrer\";\n      image.onload = () => {\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx == null ? void 0 : ctx.drawImage(image, 0, 0);\n        imageBase64.value = canvas.toDataURL();\n      };\n      image.src = url;\n    };\n    const makeSvgToBlobUrl = (svgStr) => {\n      const svgBlob = new Blob([svgStr], {\n        type: \"image/svg+xml\"\n      });\n      return URL.createObjectURL(svgBlob);\n    };\n    watchEffect(() => {\n      if (props.image) {\n        makeImageToBase64(props.image);\n      }\n    });\n    watch(() => [imageBase64.value, props.content, props.textColor, props.height, props.width, props.rotate, props.gapX, props.gapY], () => {\n      nextTick(() => {\n        if (svgElRef.value) {\n          if (watermarkUrl.value) {\n            URL.revokeObjectURL(watermarkUrl.value);\n          }\n          watermarkUrl.value = makeSvgToBlobUrl(svgElRef.value.innerHTML);\n        }\n      });\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      if (watermarkUrl.value) {\n        URL.revokeObjectURL(watermarkUrl.value);\n      }\n    });\n    return () => {\n      const style = extend({\n        backgroundImage: `url(${watermarkUrl.value})`\n      }, getZIndexStyle(props.zIndex));\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          full: props.fullPage\n        }),\n        \"style\": style\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"wrapper\"),\n        \"ref\": svgElRef\n      }, [renderWatermark()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  watermarkProps\n};\n",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767734,
      "end": 1714699767734,
      "order": "normal"
    }
  ]
}
