{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/overArgs.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport castRest from './_castRest.js';\nimport isArray from './isArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nexport default overArgs;\n",
      "start": 1714699768461,
      "end": 1714699768476,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport castRest from './_castRest.js';\nimport isArray from './isArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nexport default overArgs;\n",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768476,
      "end": 1714699768476,
      "order": "normal"
    }
  ]
}
