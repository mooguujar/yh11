{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/TodayActivity.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"today-activity-container\" }\nconst _hoisted_2 = { class: \"container-title\" }\nconst _hoisted_3 = { class: \"progressbar-container\" }\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" }\nconst _hoisted_7 = [\"src\", \"onClick\"]\nconst _hoisted_8 = { class: \"award-point-value\" }\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n}\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n}\nconst _hoisted_11 = { class: \"task-container\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"task-tips\" }, \"完成每日任务，获得活跃度!\", -1 /* HOISTED */)\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport progressbarGrey from '@/assets/images/common/progressbar-grey.png'\nimport progressbarYellow from '@/assets/images/common/progressbar-yellow.png'\nimport success from '@/assets/images/common/success.png'\nimport { useEntryStore } from '@/store'\nimport { useTaskActivityStore } from '@/store/modules/taskActivity'\nimport { INormal } from '@/store/types/entry'\nimport { IAction, IDayAction, IUserActionData } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { storeToRefs } from 'pinia'\nimport { showToast } from 'vant'\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport Task from './Task.vue'\nimport { DAILYTASK } from './tools'\n\ntype TAction = Partial<IAction>\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TodayActivity',\n  emits: ['update-coins'],\n  setup(__props, { emit: __emit }) {\n\nconst emit = __emit\n\nconst activityValue = ref(0)\nconst finalTarget = ref(0)\n\nconst awardPointList = ref<TAction[]>([\n  {\n    class: 'point-10'\n  },\n  {\n    class: 'point-10'\n  },\n  {\n    class: 'point-30'\n  },\n  {\n    class: 'point-50'\n  },\n  {\n    class: 'point-80'\n  }\n])\nconst dailyTaskList = ref<IDayAction[]>([])\nconst barGrey = ref()\nconst barYellow = ref()\n\nconst entryStore = useEntryStore()\nconst { config } = storeToRefs(entryStore)\n\nconst appDomain = computed(() => {\n  return (config.value.Web_Set_DefaultInfo?.imgserver_url as INormal).v || ''\n})\n\nconst taskActivityStore = useTaskActivityStore()\nconst { getUserActionListApi } = taskActivityStore\nconst { userActionList } = storeToRefs(taskActivityStore)\n\nconst handleTodayActivityData = (data: IUserActionData) => {\n  activityValue.value = data.total\n  awardPointList.value = data.actions\n  dailyTaskList.value = data.dayactions\n  finalTarget.value = +(data.actions[data.actions.length - 1].target ?? 0)\n\n  barYellow.value.style.width =\n    (activityValue.value / finalTarget.value) * barGrey.value.clientWidth + 'px'\n}\nconst getUserActionList = async (isReq: boolean = false) => {\n  try {\n    // if (userActionList.value.dayactions && !isReq) {\n    //   handleTodayActivityData(userActionList.value)\n    //   return\n    // }\n\n    const res = await getUserActionListApi()\n\n    window.log('每日活跃度任务列表', res)\n\n    if (res) {\n      handleTodayActivityData(res)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst awardBox = ref()\n// 计算积分宝箱的位置\nconst awardBoxPos = (item: TAction, index: number) => {\n  if (awardBox.value?.[index]) {\n    if (!item.target) return\n\n    // 宝箱一半的距离，最后一个宝箱微调\n    const distance = +(item.target as unknown as number) === finalTarget.value ? 32 : 53 / 2\n    // 宝箱偏移位置\n    const left =\n      Math.abs(\n        (+(item.target as unknown as number) / finalTarget.value) * barGrey.value.clientWidth -\n          distance\n      ) + 'px'\n    return `left: ${left}`\n  }\n}\n\n// 点击宝箱领取积分\nconst getBoxAward = async (item: TAction) => {\n  try {\n    if (!item.cando) return\n\n    const res = await userDoTaskApi({\n      idd: userActionList.value.task_idd,\n      levelid: item.id\n    })\n\n    // 领取积分后更新积分数据\n    if (res.money) {\n      getUserActionList()\n      emit('update-coins', true)\n\n      showToast({\n        message: `领取成功，+${res.money}积分`,\n        icon: success,\n        teleport: '.today-activity-container'\n      })\n    }\n\n    window.log('领取宝箱积分奖励', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nonMounted(() => {\n  getUserActionList()\n  mitt.on('updateTodayActivity', getUserActionList)\n})\nonUnmounted(() => {\n  mitt.off('updateTodayActivity', getUserActionList)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createTextVNode(\" 今日活跃度： \"),\n      _createElementVNode(\"span\", null, _toDisplayString(activityValue.value), 1 /* TEXT */)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"img\", {\n        src: _unref(progressbarGrey),\n        class: \"progressbar-grey\",\n        ref_key: \"barGrey\",\n        ref: barGrey\n      }, null, 8 /* PROPS */, _hoisted_4),\n      _createElementVNode(\"img\", {\n        src: _unref(progressbarYellow),\n        class: \"progressbar-yellow\",\n        ref_key: \"barYellow\",\n        ref: barYellow\n      }, null, 8 /* PROPS */, _hoisted_5),\n      _createElementVNode(\"div\", _hoisted_6, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(awardPointList.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: index,\n            ref_for: true,\n            ref_key: \"awardBox\",\n            ref: awardBox,\n            class: \"item-point-column flex flex-col items-center\",\n            style: _normalizeStyle(awardBoxPos(item, index))\n          }, [\n            (item.task_img)\n              ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  src: appDomain.value + item.task_img,\n                  class: _normalizeClass([\"award-box\", { 'award-gray-box': item.flag }]),\n                  onClick: ($event: any) => (getBoxAward(item))\n                }, null, 10 /* CLASS, PROPS */, _hoisted_7))\n              : (_openBlock(), _createElementBlock(\"i\", {\n                  key: 1,\n                  class: _normalizeClass(item.class)\n                }, null, 2 /* CLASS */)),\n            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.target), 1 /* TEXT */),\n            (item.cando)\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9))\n              : _createCommentVNode(\"v-if\", true),\n            (item.flag)\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10))\n              : _createCommentVNode(\"v-if\", true)\n          ], 4 /* STYLE */))\n        }), 128 /* KEYED_FRAGMENT */))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      _hoisted_12,\n      _createVNode(Task, {\n        list: dailyTaskList.value,\n        type: _unref(DAILYTASK),\n        onUpdateList: getUserActionList\n      }, null, 8 /* PROPS */, [\"list\", \"type\"])\n    ])\n  ]))\n}\n}\n\n})",
      "start": 1714699771916,
      "end": 1714699771916
    },
    {
      "name": "vite:css",
      "start": 1714699771916,
      "end": 1714699771916,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"today-activity-container\" };\nconst _hoisted_2 = { class: \"container-title\" };\nconst _hoisted_3 = { class: \"progressbar-container\" };\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" };\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = { class: \"award-point-value\" };\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n};\nconst _hoisted_11 = { class: \"task-container\" };\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"task-tips\" },\n  \"完成每日任务，获得活跃度!\",\n  -1\n  /* HOISTED */\n);\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport progressbarGrey from \"@/assets/images/common/progressbar-grey.png\";\nimport progressbarYellow from \"@/assets/images/common/progressbar-yellow.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport { useEntryStore } from \"@/store\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport Task from \"./Task.vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TodayActivity\",\n  emits: [\"update-coins\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const activityValue = ref(0);\n    const finalTarget = ref(0);\n    const awardPointList = ref([\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-30\"\n      },\n      {\n        class: \"point-50\"\n      },\n      {\n        class: \"point-80\"\n      }\n    ]);\n    const dailyTaskList = ref([]);\n    const barGrey = ref();\n    const barYellow = ref();\n    const entryStore = useEntryStore();\n    const { config } = storeToRefs(entryStore);\n    const appDomain = computed(() => {\n      return (config.value.Web_Set_DefaultInfo?.imgserver_url).v || \"\";\n    });\n    const taskActivityStore = useTaskActivityStore();\n    const { getUserActionListApi } = taskActivityStore;\n    const { userActionList } = storeToRefs(taskActivityStore);\n    const handleTodayActivityData = (data) => {\n      activityValue.value = data.total;\n      awardPointList.value = data.actions;\n      dailyTaskList.value = data.dayactions;\n      finalTarget.value = +(data.actions[data.actions.length - 1].target ?? 0);\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \"px\";\n    };\n    const getUserActionList = async (isReq = false) => {\n      try {\n        const res = await getUserActionListApi();\n        window.log(\"每日活跃度任务列表\", res);\n        if (res) {\n          handleTodayActivityData(res);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const awardBox = ref();\n    const awardBoxPos = (item, index) => {\n      if (awardBox.value?.[index]) {\n        if (!item.target)\n          return;\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\n        const left = Math.abs(\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\n        ) + \"px\";\n        return `left: ${left}`;\n      }\n    };\n    const getBoxAward = async (item) => {\n      try {\n        if (!item.cando)\n          return;\n        const res = await userDoTaskApi({\n          idd: userActionList.value.task_idd,\n          levelid: item.id\n        });\n        if (res.money) {\n          getUserActionList();\n          emit(\"update-coins\", true);\n          showToast({\n            message: `领取成功，+${res.money}积分`,\n            icon: success,\n            teleport: \".today-activity-container\"\n          });\n        }\n        window.log(\"领取宝箱积分奖励\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      getUserActionList();\n      mitt.on(\"updateTodayActivity\", getUserActionList);\n    });\n    onUnmounted(() => {\n      mitt.off(\"updateTodayActivity\", getUserActionList);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" 今日活跃度： \"),\n          _createElementVNode(\n            \"span\",\n            null,\n            _toDisplayString(activityValue.value),\n            1\n            /* TEXT */\n          )\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarGrey),\n            class: \"progressbar-grey\",\n            ref_key: \"barGrey\",\n            ref: barGrey\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarYellow),\n            class: \"progressbar-yellow\",\n            ref_key: \"barYellow\",\n            ref: barYellow\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(\n              _Fragment,\n              null,\n              _renderList(awardPointList.value, (item, index) => {\n                return _openBlock(), _createElementBlock(\n                  \"div\",\n                  {\n                    key: index,\n                    ref_for: true,\n                    ref_key: \"awardBox\",\n                    ref: awardBox,\n                    class: \"item-point-column flex flex-col items-center\",\n                    style: _normalizeStyle(awardBoxPos(item, index))\n                  },\n                  [\n                    item.task_img ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: appDomain.value + item.task_img,\n                      class: _normalizeClass([\"award-box\", { \"award-gray-box\": item.flag }]),\n                      onClick: ($event) => getBoxAward(item)\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"i\",\n                      {\n                        key: 1,\n                        class: _normalizeClass(item.class)\n                      },\n                      null,\n                      2\n                      /* CLASS */\n                    )),\n                    _createElementVNode(\n                      \"div\",\n                      _hoisted_8,\n                      _toDisplayString(item.target),\n                      1\n                      /* TEXT */\n                    ),\n                    item.cando ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9)) : _createCommentVNode(\"v-if\", true),\n                    item.flag ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10)) : _createCommentVNode(\"v-if\", true)\n                  ],\n                  4\n                  /* STYLE */\n                );\n              }),\n              128\n              /* KEYED_FRAGMENT */\n            ))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _createVNode(Task, {\n            list: dailyTaskList.value,\n            type: _unref(DAILYTASK),\n            onUpdateList: getUserActionList\n          }, null, 8, [\"list\", \"type\"])\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699771917,
      "end": 1714699772151,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/TodayActivity.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"today-activity-container\" }\nconst _hoisted_2 = { class: \"container-title\" }\nconst _hoisted_3 = { class: \"progressbar-container\" }\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" }\nconst _hoisted_7 = [\"src\", \"onClick\"]\nconst _hoisted_8 = { class: \"award-point-value\" }\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n}\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n}\nconst _hoisted_11 = { class: \"task-container\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"task-tips\" }, \"完成每日任务，获得活跃度!\", -1 /* HOISTED */)\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport progressbarGrey from '@/assets/images/common/progressbar-grey.png'\nimport progressbarYellow from '@/assets/images/common/progressbar-yellow.png'\nimport success from '@/assets/images/common/success.png'\nimport { useEntryStore } from '@/store'\nimport { useTaskActivityStore } from '@/store/modules/taskActivity'\nimport { INormal } from '@/store/types/entry'\nimport { IAction, IDayAction, IUserActionData } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { storeToRefs } from 'pinia'\nimport { showToast } from 'vant'\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\nimport Task from './Task.vue'\nimport { DAILYTASK } from './tools'\n\ntype TAction = Partial<IAction>\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TodayActivity',\n  emits: ['update-coins'],\n  setup(__props, { emit: __emit }) {\n\nconst emit = __emit\n\nconst activityValue = ref(0)\nconst finalTarget = ref(0)\n\nconst awardPointList = ref<TAction[]>([\n  {\n    class: 'point-10'\n  },\n  {\n    class: 'point-10'\n  },\n  {\n    class: 'point-30'\n  },\n  {\n    class: 'point-50'\n  },\n  {\n    class: 'point-80'\n  }\n])\nconst dailyTaskList = ref<IDayAction[]>([])\nconst barGrey = ref()\nconst barYellow = ref()\n\nconst entryStore = useEntryStore()\nconst { config } = storeToRefs(entryStore)\n\nconst appDomain = computed(() => {\n  return (config.value.Web_Set_DefaultInfo?.imgserver_url as INormal).v || ''\n})\n\nconst taskActivityStore = useTaskActivityStore()\nconst { getUserActionListApi } = taskActivityStore\nconst { userActionList } = storeToRefs(taskActivityStore)\n\nconst handleTodayActivityData = (data: IUserActionData) => {\n  activityValue.value = data.total\n  awardPointList.value = data.actions\n  dailyTaskList.value = data.dayactions\n  finalTarget.value = +(data.actions[data.actions.length - 1].target ?? 0)\n\n  barYellow.value.style.width =\n    (activityValue.value / finalTarget.value) * barGrey.value.clientWidth + 'px'\n}\nconst getUserActionList = async (isReq: boolean = false) => {\n  try {\n    // if (userActionList.value.dayactions && !isReq) {\n    //   handleTodayActivityData(userActionList.value)\n    //   return\n    // }\n\n    const res = await getUserActionListApi()\n\n    window.log('每日活跃度任务列表', res)\n\n    if (res) {\n      handleTodayActivityData(res)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst awardBox = ref()\n// 计算积分宝箱的位置\nconst awardBoxPos = (item: TAction, index: number) => {\n  if (awardBox.value?.[index]) {\n    if (!item.target) return\n\n    // 宝箱一半的距离，最后一个宝箱微调\n    const distance = +(item.target as unknown as number) === finalTarget.value ? 32 : 53 / 2\n    // 宝箱偏移位置\n    const left =\n      Math.abs(\n        (+(item.target as unknown as number) / finalTarget.value) * barGrey.value.clientWidth -\n          distance\n      ) + 'px'\n    return `left: ${left}`\n  }\n}\n\n// 点击宝箱领取积分\nconst getBoxAward = async (item: TAction) => {\n  try {\n    if (!item.cando) return\n\n    const res = await userDoTaskApi({\n      idd: userActionList.value.task_idd,\n      levelid: item.id\n    })\n\n    // 领取积分后更新积分数据\n    if (res.money) {\n      getUserActionList()\n      emit('update-coins', true)\n\n      showToast({\n        message: `领取成功，+${res.money}积分`,\n        icon: success,\n        teleport: '.today-activity-container'\n      })\n    }\n\n    window.log('领取宝箱积分奖励', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nonMounted(() => {\n  getUserActionList()\n  mitt.on('updateTodayActivity', getUserActionList)\n})\nonUnmounted(() => {\n  mitt.off('updateTodayActivity', getUserActionList)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createTextVNode(\" 今日活跃度： \"),\n      _createElementVNode(\"span\", null, _toDisplayString(activityValue.value), 1 /* TEXT */)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"img\", {\n        src: _unref(progressbarGrey),\n        class: \"progressbar-grey\",\n        ref_key: \"barGrey\",\n        ref: barGrey\n      }, null, 8 /* PROPS */, _hoisted_4),\n      _createElementVNode(\"img\", {\n        src: _unref(progressbarYellow),\n        class: \"progressbar-yellow\",\n        ref_key: \"barYellow\",\n        ref: barYellow\n      }, null, 8 /* PROPS */, _hoisted_5),\n      _createElementVNode(\"div\", _hoisted_6, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(awardPointList.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: index,\n            ref_for: true,\n            ref_key: \"awardBox\",\n            ref: awardBox,\n            class: \"item-point-column flex flex-col items-center\",\n            style: _normalizeStyle(awardBoxPos(item, index))\n          }, [\n            (item.task_img)\n              ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  src: appDomain.value + item.task_img,\n                  class: _normalizeClass([\"award-box\", { 'award-gray-box': item.flag }]),\n                  onClick: ($event: any) => (getBoxAward(item))\n                }, null, 10 /* CLASS, PROPS */, _hoisted_7))\n              : (_openBlock(), _createElementBlock(\"i\", {\n                  key: 1,\n                  class: _normalizeClass(item.class)\n                }, null, 2 /* CLASS */)),\n            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.target), 1 /* TEXT */),\n            (item.cando)\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9))\n              : _createCommentVNode(\"v-if\", true),\n            (item.flag)\n              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10))\n              : _createCommentVNode(\"v-if\", true)\n          ], 4 /* STYLE */))\n        }), 128 /* KEYED_FRAGMENT */))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      _hoisted_12,\n      _createVNode(Task, {\n        list: dailyTaskList.value,\n        type: _unref(DAILYTASK),\n        onUpdateList: getUserActionList\n      }, null, 8 /* PROPS */, [\"list\", \"type\"])\n    ])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"today-activity-container\" };\nconst _hoisted_2 = { class: \"container-title\" };\nconst _hoisted_3 = { class: \"progressbar-container\" };\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" };\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = { class: \"award-point-value\" };\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n};\nconst _hoisted_11 = { class: \"task-container\" };\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"task-tips\" },\n  \"完成每日任务，获得活跃度!\",\n  -1\n  /* HOISTED */\n);\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport progressbarGrey from \"@/assets/images/common/progressbar-grey.png\";\nimport progressbarYellow from \"@/assets/images/common/progressbar-yellow.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport { useEntryStore } from \"@/store\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport Task from \"./Task.vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TodayActivity\",\n  emits: [\"update-coins\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const activityValue = ref(0);\n    const finalTarget = ref(0);\n    const awardPointList = ref([\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-30\"\n      },\n      {\n        class: \"point-50\"\n      },\n      {\n        class: \"point-80\"\n      }\n    ]);\n    const dailyTaskList = ref([]);\n    const barGrey = ref();\n    const barYellow = ref();\n    const entryStore = useEntryStore();\n    const { config } = storeToRefs(entryStore);\n    const appDomain = computed(() => {\n      return (config.value.Web_Set_DefaultInfo?.imgserver_url).v || \"\";\n    });\n    const taskActivityStore = useTaskActivityStore();\n    const { getUserActionListApi } = taskActivityStore;\n    const { userActionList } = storeToRefs(taskActivityStore);\n    const handleTodayActivityData = (data) => {\n      activityValue.value = data.total;\n      awardPointList.value = data.actions;\n      dailyTaskList.value = data.dayactions;\n      finalTarget.value = +(data.actions[data.actions.length - 1].target ?? 0);\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \"px\";\n    };\n    const getUserActionList = async (isReq = false) => {\n      try {\n        const res = await getUserActionListApi();\n        window.log(\"每日活跃度任务列表\", res);\n        if (res) {\n          handleTodayActivityData(res);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const awardBox = ref();\n    const awardBoxPos = (item, index) => {\n      if (awardBox.value?.[index]) {\n        if (!item.target)\n          return;\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\n        const left = Math.abs(\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\n        ) + \"px\";\n        return `left: ${left}`;\n      }\n    };\n    const getBoxAward = async (item) => {\n      try {\n        if (!item.cando)\n          return;\n        const res = await userDoTaskApi({\n          idd: userActionList.value.task_idd,\n          levelid: item.id\n        });\n        if (res.money) {\n          getUserActionList();\n          emit(\"update-coins\", true);\n          showToast({\n            message: `领取成功，+${res.money}积分`,\n            icon: success,\n            teleport: \".today-activity-container\"\n          });\n        }\n        window.log(\"领取宝箱积分奖励\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      getUserActionList();\n      mitt.on(\"updateTodayActivity\", getUserActionList);\n    });\n    onUnmounted(() => {\n      mitt.off(\"updateTodayActivity\", getUserActionList);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" 今日活跃度： \"),\n          _createElementVNode(\n            \"span\",\n            null,\n            _toDisplayString(activityValue.value),\n            1\n            /* TEXT */\n          )\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarGrey),\n            class: \"progressbar-grey\",\n            ref_key: \"barGrey\",\n            ref: barGrey\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarYellow),\n            class: \"progressbar-yellow\",\n            ref_key: \"barYellow\",\n            ref: barYellow\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(\n              _Fragment,\n              null,\n              _renderList(awardPointList.value, (item, index) => {\n                return _openBlock(), _createElementBlock(\n                  \"div\",\n                  {\n                    key: index,\n                    ref_for: true,\n                    ref_key: \"awardBox\",\n                    ref: awardBox,\n                    class: \"item-point-column flex flex-col items-center\",\n                    style: _normalizeStyle(awardBoxPos(item, index))\n                  },\n                  [\n                    item.task_img ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: appDomain.value + item.task_img,\n                      class: _normalizeClass([\"award-box\", { \"award-gray-box\": item.flag }]),\n                      onClick: ($event) => getBoxAward(item)\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"i\",\n                      {\n                        key: 1,\n                        class: _normalizeClass(item.class)\n                      },\n                      null,\n                      2\n                      /* CLASS */\n                    )),\n                    _createElementVNode(\n                      \"div\",\n                      _hoisted_8,\n                      _toDisplayString(item.target),\n                      1\n                      /* TEXT */\n                    ),\n                    item.cando ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9)) : _createCommentVNode(\"v-if\", true),\n                    item.flag ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10)) : _createCommentVNode(\"v-if\", true)\n                  ],\n                  4\n                  /* STYLE */\n                );\n              }),\n              128\n              /* KEYED_FRAGMENT */\n            ))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _createVNode(Task, {\n            list: dailyTaskList.value,\n            type: _unref(DAILYTASK),\n            onUpdateList: getUserActionList\n          }, null, 8, [\"list\", \"type\"])\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772151,
      "end": 1714699772151,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"today-activity-container\" };\nconst _hoisted_2 = { class: \"container-title\" };\nconst _hoisted_3 = { class: \"progressbar-container\" };\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" };\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = { class: \"award-point-value\" };\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n};\nconst _hoisted_11 = { class: \"task-container\" };\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"task-tips\" },\n  \"\\u5B8C\\u6210\\u6BCF\\u65E5\\u4EFB\\u52A1\\uFF0C\\u83B7\\u5F97\\u6D3B\\u8DC3\\u5EA6!\",\n  -1\n  /* HOISTED */\n);\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport progressbarGrey from \"@/assets/images/common/progressbar-grey.png\";\nimport progressbarYellow from \"@/assets/images/common/progressbar-yellow.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport { useEntryStore } from \"@/store\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport Task from \"./Task.vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TodayActivity\",\n  emits: [\"update-coins\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const activityValue = ref(0);\n    const finalTarget = ref(0);\n    const awardPointList = ref([\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-30\"\n      },\n      {\n        class: \"point-50\"\n      },\n      {\n        class: \"point-80\"\n      }\n    ]);\n    const dailyTaskList = ref([]);\n    const barGrey = ref();\n    const barYellow = ref();\n    const entryStore = useEntryStore();\n    const { config } = storeToRefs(entryStore);\n    const appDomain = computed(() => {\n      var _a;\n      return ((_a = config.value.Web_Set_DefaultInfo) == null ? void 0 : _a.imgserver_url).v || \"\";\n    });\n    const taskActivityStore = useTaskActivityStore();\n    const { getUserActionListApi } = taskActivityStore;\n    const { userActionList } = storeToRefs(taskActivityStore);\n    const handleTodayActivityData = (data) => {\n      var _a;\n      activityValue.value = data.total;\n      awardPointList.value = data.actions;\n      dailyTaskList.value = data.dayactions;\n      finalTarget.value = +((_a = data.actions[data.actions.length - 1].target) != null ? _a : 0);\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \"px\";\n    };\n    const getUserActionList = async (isReq = false) => {\n      try {\n        const res = await getUserActionListApi();\n        window.log(\"\\u6BCF\\u65E5\\u6D3B\\u8DC3\\u5EA6\\u4EFB\\u52A1\\u5217\\u8868\", res);\n        if (res) {\n          handleTodayActivityData(res);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const awardBox = ref();\n    const awardBoxPos = (item, index) => {\n      var _a;\n      if ((_a = awardBox.value) == null ? void 0 : _a[index]) {\n        if (!item.target)\n          return;\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\n        const left = Math.abs(\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\n        ) + \"px\";\n        return `left: ${left}`;\n      }\n    };\n    const getBoxAward = async (item) => {\n      try {\n        if (!item.cando)\n          return;\n        const res = await userDoTaskApi({\n          idd: userActionList.value.task_idd,\n          levelid: item.id\n        });\n        if (res.money) {\n          getUserActionList();\n          emit(\"update-coins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".today-activity-container\"\n          });\n        }\n        window.log(\"\\u9886\\u53D6\\u5B9D\\u7BB1\\u79EF\\u5206\\u5956\\u52B1\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      getUserActionList();\n      mitt.on(\"updateTodayActivity\", getUserActionList);\n    });\n    onUnmounted(() => {\n      mitt.off(\"updateTodayActivity\", getUserActionList);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u4ECA\\u65E5\\u6D3B\\u8DC3\\u5EA6\\uFF1A \"),\n          _createElementVNode(\n            \"span\",\n            null,\n            _toDisplayString(activityValue.value),\n            1\n            /* TEXT */\n          )\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarGrey),\n            class: \"progressbar-grey\",\n            ref_key: \"barGrey\",\n            ref: barGrey\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarYellow),\n            class: \"progressbar-yellow\",\n            ref_key: \"barYellow\",\n            ref: barYellow\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(\n              _Fragment,\n              null,\n              _renderList(awardPointList.value, (item, index) => {\n                return _openBlock(), _createElementBlock(\n                  \"div\",\n                  {\n                    key: index,\n                    ref_for: true,\n                    ref_key: \"awardBox\",\n                    ref: awardBox,\n                    class: \"item-point-column flex flex-col items-center\",\n                    style: _normalizeStyle(awardBoxPos(item, index))\n                  },\n                  [\n                    item.task_img ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: appDomain.value + item.task_img,\n                      class: _normalizeClass([\"award-box\", { \"award-gray-box\": item.flag }]),\n                      onClick: ($event) => getBoxAward(item)\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"i\",\n                      {\n                        key: 1,\n                        class: _normalizeClass(item.class)\n                      },\n                      null,\n                      2\n                      /* CLASS */\n                    )),\n                    _createElementVNode(\n                      \"div\",\n                      _hoisted_8,\n                      _toDisplayString(item.target),\n                      1\n                      /* TEXT */\n                    ),\n                    item.cando ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9)) : _createCommentVNode(\"v-if\", true),\n                    item.flag ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10)) : _createCommentVNode(\"v-if\", true)\n                  ],\n                  4\n                  /* STYLE */\n                );\n              }),\n              128\n              /* KEYED_FRAGMENT */\n            ))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _createVNode(Task, {\n            list: dailyTaskList.value,\n            type: _unref(DAILYTASK),\n            onUpdateList: getUserActionList\n          }, null, 8, [\"list\", \"type\"])\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772151,
      "end": 1714699772245,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/TodayActivity.vue?vue&type=script&setup=true&lang.ts\"],\n  \"sourcesContent\": [\"import { defineComponent as _defineComponent } from \\\"vue\\\";\\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \\\"vue\\\";\\nconst _hoisted_1 = { class: \\\"today-activity-container\\\" };\\nconst _hoisted_2 = { class: \\\"container-title\\\" };\\nconst _hoisted_3 = { class: \\\"progressbar-container\\\" };\\nconst _hoisted_4 = [\\\"src\\\"];\\nconst _hoisted_5 = [\\\"src\\\"];\\nconst _hoisted_6 = { class: \\\"award-point-wrapper flex items-center\\\" };\\nconst _hoisted_7 = [\\\"src\\\", \\\"onClick\\\"];\\nconst _hoisted_8 = { class: \\\"award-point-value\\\" };\\nconst _hoisted_9 = {\\n  key: 2,\\n  class: \\\"light-step\\\"\\n};\\nconst _hoisted_10 = {\\n  key: 3,\\n  class: \\\"received\\\"\\n};\\nconst _hoisted_11 = { class: \\\"task-container\\\" };\\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\\n  \\\"div\\\",\\n  { class: \\\"task-tips\\\" },\\n  \\\"\\u5B8C\\u6210\\u6BCF\\u65E5\\u4EFB\\u52A1\\uFF0C\\u83B7\\u5F97\\u6D3B\\u8DC3\\u5EA6!\\\",\\n  -1\\n  /* HOISTED */\\n);\\nimport { userDoTaskApi } from \\\"@/apis/taskActivity\\\";\\nimport progressbarGrey from \\\"@/assets/images/common/progressbar-grey.png\\\";\\nimport progressbarYellow from \\\"@/assets/images/common/progressbar-yellow.png\\\";\\nimport success from \\\"@/assets/images/common/success.png\\\";\\nimport { useEntryStore } from \\\"@/store\\\";\\nimport { useTaskActivityStore } from \\\"@/store/modules/taskActivity\\\";\\nimport mitt from \\\"@/utils/mitt\\\";\\nimport { storeToRefs } from \\\"pinia\\\";\\nimport { showToast } from \\\"vant\\\";\\nimport { computed, onMounted, onUnmounted, ref } from \\\"vue\\\";\\nimport Task from \\\"./Task.vue\\\";\\nimport { DAILYTASK } from \\\"./tools\\\";\\nexport default /* @__PURE__ */ _defineComponent({\\n  __name: \\\"TodayActivity\\\",\\n  emits: [\\\"update-coins\\\"],\\n  setup(__props, { emit: __emit }) {\\n    const emit = __emit;\\n    const activityValue = ref(0);\\n    const finalTarget = ref(0);\\n    const awardPointList = ref([\\n      {\\n        class: \\\"point-10\\\"\\n      },\\n      {\\n        class: \\\"point-10\\\"\\n      },\\n      {\\n        class: \\\"point-30\\\"\\n      },\\n      {\\n        class: \\\"point-50\\\"\\n      },\\n      {\\n        class: \\\"point-80\\\"\\n      }\\n    ]);\\n    const dailyTaskList = ref([]);\\n    const barGrey = ref();\\n    const barYellow = ref();\\n    const entryStore = useEntryStore();\\n    const { config } = storeToRefs(entryStore);\\n    const appDomain = computed(() => {\\n      return (config.value.Web_Set_DefaultInfo?.imgserver_url).v || \\\"\\\";\\n    });\\n    const taskActivityStore = useTaskActivityStore();\\n    const { getUserActionListApi } = taskActivityStore;\\n    const { userActionList } = storeToRefs(taskActivityStore);\\n    const handleTodayActivityData = (data) => {\\n      activityValue.value = data.total;\\n      awardPointList.value = data.actions;\\n      dailyTaskList.value = data.dayactions;\\n      finalTarget.value = +(data.actions[data.actions.length - 1].target ?? 0);\\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \\\"px\\\";\\n    };\\n    const getUserActionList = async (isReq = false) => {\\n      try {\\n        const res = await getUserActionListApi();\\n        window.log(\\\"\\u6BCF\\u65E5\\u6D3B\\u8DC3\\u5EA6\\u4EFB\\u52A1\\u5217\\u8868\\\", res);\\n        if (res) {\\n          handleTodayActivityData(res);\\n        }\\n      } catch (error) {\\n        console.error(error);\\n      }\\n    };\\n    const awardBox = ref();\\n    const awardBoxPos = (item, index) => {\\n      if (awardBox.value?.[index]) {\\n        if (!item.target)\\n          return;\\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\\n        const left = Math.abs(\\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\\n        ) + \\\"px\\\";\\n        return `left: ${left}`;\\n      }\\n    };\\n    const getBoxAward = async (item) => {\\n      try {\\n        if (!item.cando)\\n          return;\\n        const res = await userDoTaskApi({\\n          idd: userActionList.value.task_idd,\\n          levelid: item.id\\n        });\\n        if (res.money) {\\n          getUserActionList();\\n          emit(\\\"update-coins\\\", true);\\n          showToast({\\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\\n            icon: success,\\n            teleport: \\\".today-activity-container\\\"\\n          });\\n        }\\n        window.log(\\\"\\u9886\\u53D6\\u5B9D\\u7BB1\\u79EF\\u5206\\u5956\\u52B1\\\", res);\\n      } catch (error) {\\n        console.error(error);\\n      }\\n    };\\n    onMounted(() => {\\n      getUserActionList();\\n      mitt.on(\\\"updateTodayActivity\\\", getUserActionList);\\n    });\\n    onUnmounted(() => {\\n      mitt.off(\\\"updateTodayActivity\\\", getUserActionList);\\n    });\\n    return (_ctx, _cache) => {\\n      return _openBlock(), _createElementBlock(\\\"div\\\", _hoisted_1, [\\n        _createElementVNode(\\\"div\\\", _hoisted_2, [\\n          _createTextVNode(\\\" \\u4ECA\\u65E5\\u6D3B\\u8DC3\\u5EA6\\uFF1A \\\"),\\n          _createElementVNode(\\n            \\\"span\\\",\\n            null,\\n            _toDisplayString(activityValue.value),\\n            1\\n            /* TEXT */\\n          )\\n        ]),\\n        _createElementVNode(\\\"div\\\", _hoisted_3, [\\n          _createElementVNode(\\\"img\\\", {\\n            src: _unref(progressbarGrey),\\n            class: \\\"progressbar-grey\\\",\\n            ref_key: \\\"barGrey\\\",\\n            ref: barGrey\\n          }, null, 8, _hoisted_4),\\n          _createElementVNode(\\\"img\\\", {\\n            src: _unref(progressbarYellow),\\n            class: \\\"progressbar-yellow\\\",\\n            ref_key: \\\"barYellow\\\",\\n            ref: barYellow\\n          }, null, 8, _hoisted_5),\\n          _createElementVNode(\\\"div\\\", _hoisted_6, [\\n            (_openBlock(true), _createElementBlock(\\n              _Fragment,\\n              null,\\n              _renderList(awardPointList.value, (item, index) => {\\n                return _openBlock(), _createElementBlock(\\n                  \\\"div\\\",\\n                  {\\n                    key: index,\\n                    ref_for: true,\\n                    ref_key: \\\"awardBox\\\",\\n                    ref: awardBox,\\n                    class: \\\"item-point-column flex flex-col items-center\\\",\\n                    style: _normalizeStyle(awardBoxPos(item, index))\\n                  },\\n                  [\\n                    item.task_img ? (_openBlock(), _createElementBlock(\\\"img\\\", {\\n                      key: 0,\\n                      src: appDomain.value + item.task_img,\\n                      class: _normalizeClass([\\\"award-box\\\", { \\\"award-gray-box\\\": item.flag }]),\\n                      onClick: ($event) => getBoxAward(item)\\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\\n                      \\\"i\\\",\\n                      {\\n                        key: 1,\\n                        class: _normalizeClass(item.class)\\n                      },\\n                      null,\\n                      2\\n                      /* CLASS */\\n                    )),\\n                    _createElementVNode(\\n                      \\\"div\\\",\\n                      _hoisted_8,\\n                      _toDisplayString(item.target),\\n                      1\\n                      /* TEXT */\\n                    ),\\n                    item.cando ? (_openBlock(), _createElementBlock(\\\"i\\\", _hoisted_9)) : _createCommentVNode(\\\"v-if\\\", true),\\n                    item.flag ? (_openBlock(), _createElementBlock(\\\"i\\\", _hoisted_10)) : _createCommentVNode(\\\"v-if\\\", true)\\n                  ],\\n                  4\\n                  /* STYLE */\\n                );\\n              }),\\n              128\\n              /* KEYED_FRAGMENT */\\n            ))\\n          ])\\n        ]),\\n        _createElementVNode(\\\"div\\\", _hoisted_11, [\\n          _hoisted_12,\\n          _createVNode(Task, {\\n            list: dailyTaskList.value,\\n            type: _unref(DAILYTASK),\\n            onUpdateList: getUserActionList\\n          }, null, 8, [\\\"list\\\", \\\"type\\\"])\\n        ])\\n      ]);\\n    };\\n  }\\n});\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:define",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699772245,
      "end": 1714699772245,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699772245,
      "end": 1714699772246,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"today-activity-container\" };\nconst _hoisted_2 = { class: \"container-title\" };\nconst _hoisted_3 = { class: \"progressbar-container\" };\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" };\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = { class: \"award-point-value\" };\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n};\nconst _hoisted_11 = { class: \"task-container\" };\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"task-tips\" },\n  \"\\u5B8C\\u6210\\u6BCF\\u65E5\\u4EFB\\u52A1\\uFF0C\\u83B7\\u5F97\\u6D3B\\u8DC3\\u5EA6!\",\n  -1\n  /* HOISTED */\n);\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport progressbarGrey from \"@/assets/images/common/progressbar-grey.png\";\nimport progressbarYellow from \"@/assets/images/common/progressbar-yellow.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport { useEntryStore } from \"@/store\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport Task from \"./Task.vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TodayActivity\",\n  emits: [\"update-coins\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const activityValue = ref(0);\n    const finalTarget = ref(0);\n    const awardPointList = ref([\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-30\"\n      },\n      {\n        class: \"point-50\"\n      },\n      {\n        class: \"point-80\"\n      }\n    ]);\n    const dailyTaskList = ref([]);\n    const barGrey = ref();\n    const barYellow = ref();\n    const entryStore = useEntryStore();\n    const { config } = storeToRefs(entryStore);\n    const appDomain = computed(() => {\n      var _a;\n      return ((_a = config.value.Web_Set_DefaultInfo) == null ? void 0 : _a.imgserver_url).v || \"\";\n    });\n    const taskActivityStore = useTaskActivityStore();\n    const { getUserActionListApi } = taskActivityStore;\n    const { userActionList } = storeToRefs(taskActivityStore);\n    const handleTodayActivityData = (data) => {\n      var _a;\n      activityValue.value = data.total;\n      awardPointList.value = data.actions;\n      dailyTaskList.value = data.dayactions;\n      finalTarget.value = +((_a = data.actions[data.actions.length - 1].target) != null ? _a : 0);\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \"px\";\n    };\n    const getUserActionList = async (isReq = false) => {\n      try {\n        const res = await getUserActionListApi();\n        window.log(\"\\u6BCF\\u65E5\\u6D3B\\u8DC3\\u5EA6\\u4EFB\\u52A1\\u5217\\u8868\", res);\n        if (res) {\n          handleTodayActivityData(res);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const awardBox = ref();\n    const awardBoxPos = (item, index) => {\n      var _a;\n      if ((_a = awardBox.value) == null ? void 0 : _a[index]) {\n        if (!item.target)\n          return;\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\n        const left = Math.abs(\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\n        ) + \"px\";\n        return `left: ${left}`;\n      }\n    };\n    const getBoxAward = async (item) => {\n      try {\n        if (!item.cando)\n          return;\n        const res = await userDoTaskApi({\n          idd: userActionList.value.task_idd,\n          levelid: item.id\n        });\n        if (res.money) {\n          getUserActionList();\n          emit(\"update-coins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".today-activity-container\"\n          });\n        }\n        window.log(\"\\u9886\\u53D6\\u5B9D\\u7BB1\\u79EF\\u5206\\u5956\\u52B1\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      getUserActionList();\n      mitt.on(\"updateTodayActivity\", getUserActionList);\n    });\n    onUnmounted(() => {\n      mitt.off(\"updateTodayActivity\", getUserActionList);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u4ECA\\u65E5\\u6D3B\\u8DC3\\u5EA6\\uFF1A \"),\n          _createElementVNode(\n            \"span\",\n            null,\n            _toDisplayString(activityValue.value),\n            1\n            /* TEXT */\n          )\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarGrey),\n            class: \"progressbar-grey\",\n            ref_key: \"barGrey\",\n            ref: barGrey\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarYellow),\n            class: \"progressbar-yellow\",\n            ref_key: \"barYellow\",\n            ref: barYellow\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(\n              _Fragment,\n              null,\n              _renderList(awardPointList.value, (item, index) => {\n                return _openBlock(), _createElementBlock(\n                  \"div\",\n                  {\n                    key: index,\n                    ref_for: true,\n                    ref_key: \"awardBox\",\n                    ref: awardBox,\n                    class: \"item-point-column flex flex-col items-center\",\n                    style: _normalizeStyle(awardBoxPos(item, index))\n                  },\n                  [\n                    item.task_img ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: appDomain.value + item.task_img,\n                      class: _normalizeClass([\"award-box\", { \"award-gray-box\": item.flag }]),\n                      onClick: ($event) => getBoxAward(item)\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"i\",\n                      {\n                        key: 1,\n                        class: _normalizeClass(item.class)\n                      },\n                      null,\n                      2\n                      /* CLASS */\n                    )),\n                    _createElementVNode(\n                      \"div\",\n                      _hoisted_8,\n                      _toDisplayString(item.target),\n                      1\n                      /* TEXT */\n                    ),\n                    item.cando ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9)) : _createCommentVNode(\"v-if\", true),\n                    item.flag ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10)) : _createCommentVNode(\"v-if\", true)\n                  ],\n                  4\n                  /* STYLE */\n                );\n              }),\n              128\n              /* KEYED_FRAGMENT */\n            ))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _createVNode(Task, {\n            list: dailyTaskList.value,\n            type: _unref(DAILYTASK),\n            onUpdateList: getUserActionList\n          }, null, 8, [\"list\", \"type\"])\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772246,
      "end": 1714699772246,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/TodayActivity.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"today-activity-container\" };\nconst _hoisted_2 = { class: \"container-title\" };\nconst _hoisted_3 = { class: \"progressbar-container\" };\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = { class: \"award-point-wrapper flex items-center\" };\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = { class: \"award-point-value\" };\nconst _hoisted_9 = {\n  key: 2,\n  class: \"light-step\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"received\"\n};\nconst _hoisted_11 = { class: \"task-container\" };\nconst _hoisted_12 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"task-tips\" },\n  \"\\u5B8C\\u6210\\u6BCF\\u65E5\\u4EFB\\u52A1\\uFF0C\\u83B7\\u5F97\\u6D3B\\u8DC3\\u5EA6!\",\n  -1\n  /* HOISTED */\n);\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport progressbarGrey from \"@/assets/images/common/progressbar-grey.png\";\nimport progressbarYellow from \"@/assets/images/common/progressbar-yellow.png\";\nimport success from \"@/assets/images/common/success.png\";\nimport { useEntryStore } from \"@/store\";\nimport { useTaskActivityStore } from \"@/store/modules/taskActivity\";\nimport mitt from \"@/utils/mitt\";\nimport { storeToRefs } from \"pinia\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\nimport Task from \"./Task.vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"TodayActivity\",\n  emits: [\"update-coins\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const activityValue = ref(0);\n    const finalTarget = ref(0);\n    const awardPointList = ref([\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-10\"\n      },\n      {\n        class: \"point-30\"\n      },\n      {\n        class: \"point-50\"\n      },\n      {\n        class: \"point-80\"\n      }\n    ]);\n    const dailyTaskList = ref([]);\n    const barGrey = ref();\n    const barYellow = ref();\n    const entryStore = useEntryStore();\n    const { config } = storeToRefs(entryStore);\n    const appDomain = computed(() => {\n      var _a;\n      return ((_a = config.value.Web_Set_DefaultInfo) == null ? void 0 : _a.imgserver_url).v || \"\";\n    });\n    const taskActivityStore = useTaskActivityStore();\n    const { getUserActionListApi } = taskActivityStore;\n    const { userActionList } = storeToRefs(taskActivityStore);\n    const handleTodayActivityData = (data) => {\n      var _a;\n      activityValue.value = data.total;\n      awardPointList.value = data.actions;\n      dailyTaskList.value = data.dayactions;\n      finalTarget.value = +((_a = data.actions[data.actions.length - 1].target) != null ? _a : 0);\n      barYellow.value.style.width = activityValue.value / finalTarget.value * barGrey.value.clientWidth + \"px\";\n    };\n    const getUserActionList = async (isReq = false) => {\n      try {\n        const res = await getUserActionListApi();\n        window.log(\"\\u6BCF\\u65E5\\u6D3B\\u8DC3\\u5EA6\\u4EFB\\u52A1\\u5217\\u8868\", res);\n        if (res) {\n          handleTodayActivityData(res);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const awardBox = ref();\n    const awardBoxPos = (item, index) => {\n      var _a;\n      if ((_a = awardBox.value) == null ? void 0 : _a[index]) {\n        if (!item.target)\n          return;\n        const distance = +item.target === finalTarget.value ? 32 : 53 / 2;\n        const left = Math.abs(\n          +item.target / finalTarget.value * barGrey.value.clientWidth - distance\n        ) + \"px\";\n        return `left: ${left}`;\n      }\n    };\n    const getBoxAward = async (item) => {\n      try {\n        if (!item.cando)\n          return;\n        const res = await userDoTaskApi({\n          idd: userActionList.value.task_idd,\n          levelid: item.id\n        });\n        if (res.money) {\n          getUserActionList();\n          emit(\"update-coins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}\\u79EF\\u5206`,\n            icon: success,\n            teleport: \".today-activity-container\"\n          });\n        }\n        window.log(\"\\u9886\\u53D6\\u5B9D\\u7BB1\\u79EF\\u5206\\u5956\\u52B1\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      getUserActionList();\n      mitt.on(\"updateTodayActivity\", getUserActionList);\n    });\n    onUnmounted(() => {\n      mitt.off(\"updateTodayActivity\", getUserActionList);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createTextVNode(\" \\u4ECA\\u65E5\\u6D3B\\u8DC3\\u5EA6\\uFF1A \"),\n          _createElementVNode(\n            \"span\",\n            null,\n            _toDisplayString(activityValue.value),\n            1\n            /* TEXT */\n          )\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarGrey),\n            class: \"progressbar-grey\",\n            ref_key: \"barGrey\",\n            ref: barGrey\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"img\", {\n            src: _unref(progressbarYellow),\n            class: \"progressbar-yellow\",\n            ref_key: \"barYellow\",\n            ref: barYellow\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"div\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(\n              _Fragment,\n              null,\n              _renderList(awardPointList.value, (item, index) => {\n                return _openBlock(), _createElementBlock(\n                  \"div\",\n                  {\n                    key: index,\n                    ref_for: true,\n                    ref_key: \"awardBox\",\n                    ref: awardBox,\n                    class: \"item-point-column flex flex-col items-center\",\n                    style: _normalizeStyle(awardBoxPos(item, index))\n                  },\n                  [\n                    item.task_img ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      src: appDomain.value + item.task_img,\n                      class: _normalizeClass([\"award-box\", { \"award-gray-box\": item.flag }]),\n                      onClick: ($event) => getBoxAward(item)\n                    }, null, 10, _hoisted_7)) : (_openBlock(), _createElementBlock(\n                      \"i\",\n                      {\n                        key: 1,\n                        class: _normalizeClass(item.class)\n                      },\n                      null,\n                      2\n                      /* CLASS */\n                    )),\n                    _createElementVNode(\n                      \"div\",\n                      _hoisted_8,\n                      _toDisplayString(item.target),\n                      1\n                      /* TEXT */\n                    ),\n                    item.cando ? (_openBlock(), _createElementBlock(\"i\", _hoisted_9)) : _createCommentVNode(\"v-if\", true),\n                    item.flag ? (_openBlock(), _createElementBlock(\"i\", _hoisted_10)) : _createCommentVNode(\"v-if\", true)\n                  ],\n                  4\n                  /* STYLE */\n                );\n              }),\n              128\n              /* KEYED_FRAGMENT */\n            ))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _createVNode(Task, {\n            list: dailyTaskList.value,\n            type: _unref(DAILYTASK),\n            onUpdateList: getUserActionList\n          }, null, 8, [\"list\", \"type\"])\n        ])\n      ]);\n    };\n  }\n});\n"
        ],
        "names": [],
        "mappings": "s
      }
    },
    {
      "name": "vite:style-import",
      "start": 1714699772246,
      "end": 1714699772246,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699772246,
      "end": 1714699772246,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699772246,
      "end": 1714699772246,
      "order": "normal"
    }
  ]
}
