{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/assignInWith.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nexport default assignInWith;\n",
      "start": 1714699768283,
      "end": 1714699768313,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nexport default assignInWith;\n",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768313,
      "end": 1714699768313,
      "order": "normal"
    }
  ]
}
