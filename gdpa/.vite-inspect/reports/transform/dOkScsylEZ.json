{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/random.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import baseRandom from './_baseRandom.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nexport default random;\n",
      "start": 1714699768476,
      "end": 1714699768489,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import baseRandom from './_baseRandom.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nexport default random;\n",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768489,
      "end": 1714699768489,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768489,
      "end": 1714699768490,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768490,
      "end": 1714699768490,
      "order": "normal"
    }
  ]
}
