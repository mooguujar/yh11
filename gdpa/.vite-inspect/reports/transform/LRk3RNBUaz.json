{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vxe-table@4.5.21_vue@3.4.19_xe-utils@3.5.24/node_modules/vxe-table/es/footer/src/footer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createCommentVNode, defineComponent, h, ref, inject, nextTick, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { updateCellTitle, getPropClass } from '../../tools/dom';\nvar renderType = 'footer';\nfunction mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex) {\n    for (var mIndex = 0; mIndex < mergeFooterList.length; mIndex++) {\n        var _a = mergeFooterList[mIndex], mergeRowIndex = _a.row, mergeColIndex = _a.col, mergeRowspan = _a.rowspan, mergeColspan = _a.colspan;\n        if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n            if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n                return { rowspan: mergeRowspan, colspan: mergeColspan };\n            }\n            if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n                return { rowspan: 0, colspan: 0 };\n            }\n        }\n    }\n}\nexport default defineComponent({\n    name: 'VxeTableFooter',\n    props: {\n        footerTableData: { type: Array, default: function () { return []; } },\n        tableColumn: { type: Array, default: function () { return []; } },\n        fixedColumn: { type: Array, default: function () { return []; } },\n        fixedType: { type: String, default: null }\n    },\n    setup: function (props) {\n        var $xetable = inject('$xetable', {});\n        var xID = $xetable.xID, tableProps = $xetable.props, tableReactData = $xetable.reactData, tableInternalData = $xetable.internalData;\n        var _a = $xetable.getRefMaps(), refTableHeader = _a.refTableHeader, refTableBody = _a.refTableBody, refValidTooltip = _a.refValidTooltip;\n        var _b = $xetable.getComputeMaps(), computeTooltipOpts = _b.computeTooltipOpts, computeColumnOpts = _b.computeColumnOpts;\n        var refElem = ref();\n        var refFooterTable = ref();\n        var refFooterColgroup = ref();\n        var refFooterTFoot = ref();\n        var refFooterXSpace = ref();\n        /**\n         * 滚动处理\n         * 如果存在列固定左侧，同步更新滚动状态\n         * 如果存在列固定右侧，同步更新滚动状态\n         */\n        var scrollEvent = function (evnt) {\n            var fixedType = props.fixedType;\n            var scrollXLoad = tableReactData.scrollXLoad;\n            var lastScrollLeft = tableInternalData.lastScrollLeft;\n            var validTip = refValidTooltip.value;\n            var tableHeader = refTableHeader.value;\n            var tableBody = refTableBody.value;\n            var headerElem = tableHeader ? tableHeader.$el : null;\n            var footerElem = refElem.value;\n            var bodyElem = tableBody.$el;\n            var scrollLeft = footerElem.scrollLeft;\n            var isX = scrollLeft !== lastScrollLeft;\n            tableInternalData.lastScrollLeft = scrollLeft;\n            tableReactData.lastScrollTime = Date.now();\n            if (headerElem) {\n                headerElem.scrollLeft = scrollLeft;\n            }\n            if (bodyElem) {\n                bodyElem.scrollLeft = scrollLeft;\n            }\n            if (scrollXLoad && isX) {\n                $xetable.triggerScrollXEvent(evnt);\n            }\n            if (isX && validTip && validTip.reactData.visible) {\n                validTip.updatePlacement();\n            }\n            $xetable.dispatchEvent('scroll', { type: renderType, fixed: fixedType, scrollTop: bodyElem.scrollTop, scrollLeft: scrollLeft, isX: isX, isY: false }, evnt);\n        };\n        onMounted(function () {\n            nextTick(function () {\n                var fixedType = props.fixedType;\n                var elemStore = tableInternalData.elemStore;\n                var prefix = \"\".concat(fixedType || 'main', \"-footer-\");\n                elemStore[\"\".concat(prefix, \"wrapper\")] = refElem;\n                elemStore[\"\".concat(prefix, \"table\")] = refFooterTable;\n                elemStore[\"\".concat(prefix, \"colgroup\")] = refFooterColgroup;\n                elemStore[\"\".concat(prefix, \"list\")] = refFooterTFoot;\n                elemStore[\"\".concat(prefix, \"xSpace\")] = refFooterXSpace;\n            });\n        });\n        onUnmounted(function () {\n            var fixedType = props.fixedType;\n            var elemStore = tableInternalData.elemStore;\n            var prefix = \"\".concat(fixedType || 'main', \"-footer-\");\n            elemStore[\"\".concat(prefix, \"wrapper\")] = null;\n            elemStore[\"\".concat(prefix, \"table\")] = null;\n            elemStore[\"\".concat(prefix, \"colgroup\")] = null;\n            elemStore[\"\".concat(prefix, \"list\")] = null;\n            elemStore[\"\".concat(prefix, \"xSpace\")] = null;\n        });\n        var renderVN = function () {\n            var fixedType = props.fixedType, fixedColumn = props.fixedColumn, tableColumn = props.tableColumn, footerTableData = props.footerTableData;\n            var footerRowClassName = tableProps.footerRowClassName, footerCellClassName = tableProps.footerCellClassName, footerRowStyle = tableProps.footerRowStyle, footerCellStyle = tableProps.footerCellStyle, allFooterAlign = tableProps.footerAlign, footerSpanMethod = tableProps.footerSpanMethod, allAlign = tableProps.align, columnKey = tableProps.columnKey, allColumnFooterOverflow = tableProps.showFooterOverflow;\n            var visibleColumn = tableInternalData.visibleColumn;\n            var scrollXLoad = tableReactData.scrollXLoad, overflowX = tableReactData.overflowX, scrollbarWidth = tableReactData.scrollbarWidth, currentColumn = tableReactData.currentColumn, mergeFooterList = tableReactData.mergeFooterList;\n            var tooltipOpts = computeTooltipOpts.value;\n            var columnOpts = computeColumnOpts.value;\n            // 如果是使用优化模式\n            if (fixedType) {\n                // 如果存在展开行使用全量渲染\n                if (!tableReactData.expandColumn && (scrollXLoad || allColumnFooterOverflow)) {\n                    if (!mergeFooterList.length || !footerSpanMethod) {\n                        tableColumn = fixedColumn;\n                    }\n                    else {\n                        tableColumn = visibleColumn;\n                    }\n                }\n                else {\n                    tableColumn = visibleColumn;\n                }\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-table--footer-wrapper', fixedType ? \"fixed-\".concat(fixedType, \"--wrapper\") : 'body--wrapper'],\n                xid: xID,\n                onScroll: scrollEvent\n            }, [\n                fixedType ? createCommentVNode() : h('div', {\n                    ref: refFooterXSpace,\n                    class: 'vxe-body--x-space'\n                }),\n                h('table', {\n                    ref: refFooterTable,\n                    class: 'vxe-table--footer',\n                    xid: xID,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    /**\n                     * 列宽\n                     */\n                    h('colgroup', {\n                        ref: refFooterColgroup\n                    }, tableColumn.map(function (column, $columnIndex) {\n                        return h('col', {\n                            name: column.id,\n                            key: $columnIndex\n                        });\n                    }).concat(scrollbarWidth ? [\n                        h('col', {\n                            name: 'col_gutter'\n                        })\n                    ] : [])),\n                    /**\n                     * 底部\n                     */\n                    h('tfoot', {\n                        ref: refFooterTFoot\n                    }, footerTableData.map(function (list, _rowIndex) {\n                        var $rowIndex = _rowIndex;\n                        return h('tr', {\n                            class: ['vxe-footer--row', footerRowClassName ? XEUtils.isFunction(footerRowClassName) ? footerRowClassName({ $table: $xetable, _rowIndex: _rowIndex, $rowIndex: $rowIndex, fixed: fixedType, type: renderType }) : footerRowClassName : ''],\n                            style: footerRowStyle ? (XEUtils.isFunction(footerRowStyle) ? footerRowStyle({ $table: $xetable, _rowIndex: _rowIndex, $rowIndex: $rowIndex, fixed: fixedType, type: renderType }) : footerRowStyle) : null\n                        }, tableColumn.map(function (column, $columnIndex) {\n                            var _a;\n                            var type = column.type, showFooterOverflow = column.showFooterOverflow, footerAlign = column.footerAlign, align = column.align, footerClassName = column.footerClassName;\n                            var showAllTip = tooltipOpts.showAll;\n                            var isColGroup = column.children && column.children.length;\n                            var fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX;\n                            var footOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;\n                            var footAlign = footerAlign || align || allFooterAlign || allAlign;\n                            var showEllipsis = footOverflow === 'ellipsis';\n                            var showTitle = footOverflow === 'title';\n                            var showTooltip = footOverflow === true || footOverflow === 'tooltip';\n                            var hasEllipsis = showTitle || showTooltip || showEllipsis;\n                            var attrs = { colid: column.id };\n                            var tfOns = {};\n                            var columnIndex = $xetable.getColumnIndex(column);\n                            var _columnIndex = $xetable.getVTColumnIndex(column);\n                            var itemIndex = _columnIndex;\n                            var params = { $table: $xetable, $grid: $xetable.xegrid, _rowIndex: _rowIndex, $rowIndex: $rowIndex, column: column, columnIndex: columnIndex, $columnIndex: $columnIndex, _columnIndex: _columnIndex, itemIndex: itemIndex, items: list, fixed: fixedType, type: renderType, data: footerTableData };\n                            // 纵向虚拟滚动不支持动态行高\n                            if (scrollXLoad && !hasEllipsis) {\n                                showEllipsis = hasEllipsis = true;\n                            }\n                            if (showTitle || showTooltip || showAllTip) {\n                                tfOns.onMouseenter = function (evnt) {\n                                    if (showTitle) {\n                                        updateCellTitle(evnt.currentTarget, column);\n                                    }\n                                    else if (showTooltip || showAllTip) {\n                                        $xetable.triggerFooterTooltipEvent(evnt, params);\n                                    }\n                                };\n                            }\n                            if (showTooltip || showAllTip) {\n                                tfOns.onMouseleave = function (evnt) {\n                                    if (showTooltip || showAllTip) {\n                                        $xetable.handleTargetLeaveEvent(evnt);\n                                    }\n                                };\n                            }\n                            tfOns.onClick = function (evnt) {\n                                $xetable.dispatchEvent('footer-cell-click', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                            };\n                            tfOns.onDblclick = function (evnt) {\n                                $xetable.dispatchEvent('footer-cell-dblclick', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                            };\n                            // 合并行或列\n                            if (mergeFooterList.length) {\n                                var spanRest = mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex);\n                                if (spanRest) {\n                                    var rowspan = spanRest.rowspan, colspan = spanRest.colspan;\n                                    if (!rowspan || !colspan) {\n                                        return null;\n                                    }\n                                    if (rowspan > 1) {\n                                        attrs.rowspan = rowspan;\n                                    }\n                                    if (colspan > 1) {\n                                        attrs.colspan = colspan;\n                                    }\n                                }\n                            }\n                            else if (footerSpanMethod) {\n                                // 自定义合并方法\n                                var _b = footerSpanMethod(params) || {}, _c = _b.rowspan, rowspan = _c === void 0 ? 1 : _c, _d = _b.colspan, colspan = _d === void 0 ? 1 : _d;\n                                if (!rowspan || !colspan) {\n                                    return null;\n                                }\n                                if (rowspan > 1) {\n                                    attrs.rowspan = rowspan;\n                                }\n                                if (colspan > 1) {\n                                    attrs.colspan = colspan;\n                                }\n                            }\n                            return h('td', __assign(__assign(__assign(__assign({ class: ['vxe-footer--column', column.id, (_a = {},\n                                        _a[\"col--\".concat(footAlign)] = footAlign,\n                                        _a[\"col--\".concat(type)] = type,\n                                        _a['col--last'] = $columnIndex === tableColumn.length - 1,\n                                        _a['fixed--hidden'] = fixedHiddenColumn,\n                                        _a['col--ellipsis'] = hasEllipsis,\n                                        _a['col--current'] = currentColumn === column,\n                                        _a), getPropClass(footerClassName, params), getPropClass(footerCellClassName, params)] }, attrs), { style: footerCellStyle ? (XEUtils.isFunction(footerCellStyle) ? footerCellStyle(params) : footerCellStyle) : null }), tfOns), { key: columnKey || columnOpts.useKey ? column.id : $columnIndex }), [\n                                h('div', {\n                                    class: ['vxe-cell', {\n                                            'c--title': showTitle,\n                                            'c--tooltip': showTooltip,\n                                            'c--ellipsis': showEllipsis\n                                        }]\n                                }, column.renderFooter(params))\n                            ]);\n                        }).concat(scrollbarWidth ? [\n                            h('td', {\n                                class: 'vxe-footer--gutter col--gutter'\n                            })\n                        ] : []));\n                    }))\n                ])\n            ]);\n        };\n        return renderVN;\n    }\n});\n",
      "start": 1714699769334,
      "end": 1714699769383,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createCommentVNode, defineComponent, h, ref, inject, nextTick, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { updateCellTitle, getPropClass } from '../../tools/dom';\nvar renderType = 'footer';\nfunction mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex) {\n    for (var mIndex = 0; mIndex < mergeFooterList.length; mIndex++) {\n        var _a = mergeFooterList[mIndex], mergeRowIndex = _a.row, mergeColIndex = _a.col, mergeRowspan = _a.rowspan, mergeColspan = _a.colspan;\n        if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n            if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n                return { rowspan: mergeRowspan, colspan: mergeColspan };\n            }\n            if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n                return { rowspan: 0, colspan: 0 };\n            }\n        }\n    }\n}\nexport default defineComponent({\n    name: 'VxeTableFooter',\n    props: {\n        footerTableData: { type: Array, default: function () { return []; } },\n        tableColumn: { type: Array, default: function () { return []; } },\n        fixedColumn: { type: Array, default: function () { return []; } },\n        fixedType: { type: String, default: null }\n    },\n    setup: function (props) {\n        var $xetable = inject('$xetable', {});\n        var xID = $xetable.xID, tableProps = $xetable.props, tableReactData = $xetable.reactData, tableInternalData = $xetable.internalData;\n        var _a = $xetable.getRefMaps(), refTableHeader = _a.refTableHeader, refTableBody = _a.refTableBody, refValidTooltip = _a.refValidTooltip;\n        var _b = $xetable.getComputeMaps(), computeTooltipOpts = _b.computeTooltipOpts, computeColumnOpts = _b.computeColumnOpts;\n        var refElem = ref();\n        var refFooterTable = ref();\n        var refFooterColgroup = ref();\n        var refFooterTFoot = ref();\n        var refFooterXSpace = ref();\n        /**\n         * 滚动处理\n         * 如果存在列固定左侧，同步更新滚动状态\n         * 如果存在列固定右侧，同步更新滚动状态\n         */\n        var scrollEvent = function (evnt) {\n            var fixedType = props.fixedType;\n            var scrollXLoad = tableReactData.scrollXLoad;\n            var lastScrollLeft = tableInternalData.lastScrollLeft;\n            var validTip = refValidTooltip.value;\n            var tableHeader = refTableHeader.value;\n            var tableBody = refTableBody.value;\n            var headerElem = tableHeader ? tableHeader.$el : null;\n            var footerElem = refElem.value;\n            var bodyElem = tableBody.$el;\n            var scrollLeft = footerElem.scrollLeft;\n            var isX = scrollLeft !== lastScrollLeft;\n            tableInternalData.lastScrollLeft = scrollLeft;\n            tableReactData.lastScrollTime = Date.now();\n            if (headerElem) {\n                headerElem.scrollLeft = scrollLeft;\n            }\n            if (bodyElem) {\n                bodyElem.scrollLeft = scrollLeft;\n            }\n            if (scrollXLoad && isX) {\n                $xetable.triggerScrollXEvent(evnt);\n            }\n            if (isX && validTip && validTip.reactData.visible) {\n                validTip.updatePlacement();\n            }\n            $xetable.dispatchEvent('scroll', { type: renderType, fixed: fixedType, scrollTop: bodyElem.scrollTop, scrollLeft: scrollLeft, isX: isX, isY: false }, evnt);\n        };\n        onMounted(function () {\n            nextTick(function () {\n                var fixedType = props.fixedType;\n                var elemStore = tableInternalData.elemStore;\n                var prefix = \"\".concat(fixedType || 'main', \"-footer-\");\n                elemStore[\"\".concat(prefix, \"wrapper\")] = refElem;\n                elemStore[\"\".concat(prefix, \"table\")] = refFooterTable;\n                elemStore[\"\".concat(prefix, \"colgroup\")] = refFooterColgroup;\n                elemStore[\"\".concat(prefix, \"list\")] = refFooterTFoot;\n                elemStore[\"\".concat(prefix, \"xSpace\")] = refFooterXSpace;\n            });\n        });\n        onUnmounted(function () {\n            var fixedType = props.fixedType;\n            var elemStore = tableInternalData.elemStore;\n            var prefix = \"\".concat(fixedType || 'main', \"-footer-\");\n            elemStore[\"\".concat(prefix, \"wrapper\")] = null;\n            elemStore[\"\".concat(prefix, \"table\")] = null;\n            elemStore[\"\".concat(prefix, \"colgroup\")] = null;\n            elemStore[\"\".concat(prefix, \"list\")] = null;\n            elemStore[\"\".concat(prefix, \"xSpace\")] = null;\n        });\n        var renderVN = function () {\n            var fixedType = props.fixedType, fixedColumn = props.fixedColumn, tableColumn = props.tableColumn, footerTableData = props.footerTableData;\n            var footerRowClassName = tableProps.footerRowClassName, footerCellClassName = tableProps.footerCellClassName, footerRowStyle = tableProps.footerRowStyle, footerCellStyle = tableProps.footerCellStyle, allFooterAlign = tableProps.footerAlign, footerSpanMethod = tableProps.footerSpanMethod, allAlign = tableProps.align, columnKey = tableProps.columnKey, allColumnFooterOverflow = tableProps.showFooterOverflow;\n            var visibleColumn = tableInternalData.visibleColumn;\n            var scrollXLoad = tableReactData.scrollXLoad, overflowX = tableReactData.overflowX, scrollbarWidth = tableReactData.scrollbarWidth, currentColumn = tableReactData.currentColumn, mergeFooterList = tableReactData.mergeFooterList;\n            var tooltipOpts = computeTooltipOpts.value;\n            var columnOpts = computeColumnOpts.value;\n            // 如果是使用优化模式\n            if (fixedType) {\n                // 如果存在展开行使用全量渲染\n                if (!tableReactData.expandColumn && (scrollXLoad || allColumnFooterOverflow)) {\n                    if (!mergeFooterList.length || !footerSpanMethod) {\n                        tableColumn = fixedColumn;\n                    }\n                    else {\n                        tableColumn = visibleColumn;\n                    }\n                }\n                else {\n                    tableColumn = visibleColumn;\n                }\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-table--footer-wrapper', fixedType ? \"fixed-\".concat(fixedType, \"--wrapper\") : 'body--wrapper'],\n                xid: xID,\n                onScroll: scrollEvent\n            }, [\n                fixedType ? createCommentVNode() : h('div', {\n                    ref: refFooterXSpace,\n                    class: 'vxe-body--x-space'\n                }),\n                h('table', {\n                    ref: refFooterTable,\n                    class: 'vxe-table--footer',\n                    xid: xID,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    /**\n                     * 列宽\n                     */\n                    h('colgroup', {\n                        ref: refFooterColgroup\n                    }, tableColumn.map(function (column, $columnIndex) {\n                        return h('col', {\n                            name: column.id,\n                            key: $columnIndex\n                        });\n                    }).concat(scrollbarWidth ? [\n                        h('col', {\n                            name: 'col_gutter'\n                        })\n                    ] : [])),\n                    /**\n                     * 底部\n                     */\n                    h('tfoot', {\n                        ref: refFooterTFoot\n                    }, footerTableData.map(function (list, _rowIndex) {\n                        var $rowIndex = _rowIndex;\n                        return h('tr', {\n                            class: ['vxe-footer--row', footerRowClassName ? XEUtils.isFunction(footerRowClassName) ? footerRowClassName({ $table: $xetable, _rowIndex: _rowIndex, $rowIndex: $rowIndex, fixed: fixedType, type: renderType }) : footerRowClassName : ''],\n                            style: footerRowStyle ? (XEUtils.isFunction(footerRowStyle) ? footerRowStyle({ $table: $xetable, _rowIndex: _rowIndex, $rowIndex: $rowIndex, fixed: fixedType, type: renderType }) : footerRowStyle) : null\n                        }, tableColumn.map(function (column, $columnIndex) {\n                            var _a;\n                            var type = column.type, showFooterOverflow = column.showFooterOverflow, footerAlign = column.footerAlign, align = column.align, footerClassName = column.footerClassName;\n                            var showAllTip = tooltipOpts.showAll;\n                            var isColGroup = column.children && column.children.length;\n                            var fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX;\n                            var footOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;\n                            var footAlign = footerAlign || align || allFooterAlign || allAlign;\n                            var showEllipsis = footOverflow === 'ellipsis';\n                            var showTitle = footOverflow === 'title';\n                            var showTooltip = footOverflow === true || footOverflow === 'tooltip';\n                            var hasEllipsis = showTitle || showTooltip || showEllipsis;\n                            var attrs = { colid: column.id };\n                            var tfOns = {};\n                            var columnIndex = $xetable.getColumnIndex(column);\n                            var _columnIndex = $xetable.getVTColumnIndex(column);\n                            var itemIndex = _columnIndex;\n                            var params = { $table: $xetable, $grid: $xetable.xegrid, _rowIndex: _rowIndex, $rowIndex: $rowIndex, column: column, columnIndex: columnIndex, $columnIndex: $columnIndex, _columnIndex: _columnIndex, itemIndex: itemIndex, items: list, fixed: fixedType, type: renderType, data: footerTableData };\n                            // 纵向虚拟滚动不支持动态行高\n                            if (scrollXLoad && !hasEllipsis) {\n                                showEllipsis = hasEllipsis = true;\n                            }\n                            if (showTitle || showTooltip || showAllTip) {\n                                tfOns.onMouseenter = function (evnt) {\n                                    if (showTitle) {\n                                        updateCellTitle(evnt.currentTarget, column);\n                                    }\n                                    else if (showTooltip || showAllTip) {\n                                        $xetable.triggerFooterTooltipEvent(evnt, params);\n                                    }\n                                };\n                            }\n                            if (showTooltip || showAllTip) {\n                                tfOns.onMouseleave = function (evnt) {\n                                    if (showTooltip || showAllTip) {\n                                        $xetable.handleTargetLeaveEvent(evnt);\n                                    }\n                                };\n                            }\n                            tfOns.onClick = function (evnt) {\n                                $xetable.dispatchEvent('footer-cell-click', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                            };\n                            tfOns.onDblclick = function (evnt) {\n                                $xetable.dispatchEvent('footer-cell-dblclick', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                            };\n                            // 合并行或列\n                            if (mergeFooterList.length) {\n                                var spanRest = mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex);\n                                if (spanRest) {\n                                    var rowspan = spanRest.rowspan, colspan = spanRest.colspan;\n                                    if (!rowspan || !colspan) {\n                                        return null;\n                                    }\n                                    if (rowspan > 1) {\n                                        attrs.rowspan = rowspan;\n                                    }\n                                    if (colspan > 1) {\n                                        attrs.colspan = colspan;\n                                    }\n                                }\n                            }\n                            else if (footerSpanMethod) {\n                                // 自定义合并方法\n                                var _b = footerSpanMethod(params) || {}, _c = _b.rowspan, rowspan = _c === void 0 ? 1 : _c, _d = _b.colspan, colspan = _d === void 0 ? 1 : _d;\n                                if (!rowspan || !colspan) {\n                                    return null;\n                                }\n                                if (rowspan > 1) {\n                                    attrs.rowspan = rowspan;\n                                }\n                                if (colspan > 1) {\n                                    attrs.colspan = colspan;\n                                }\n                            }\n                            return h('td', __assign(__assign(__assign(__assign({ class: ['vxe-footer--column', column.id, (_a = {},\n                                        _a[\"col--\".concat(footAlign)] = footAlign,\n                                        _a[\"col--\".concat(type)] = type,\n                                        _a['col--last'] = $columnIndex === tableColumn.length - 1,\n                                        _a['fixed--hidden'] = fixedHiddenColumn,\n                                        _a['col--ellipsis'] = hasEllipsis,\n                                        _a['col--current'] = currentColumn === column,\n                                        _a), getPropClass(footerClassName, params), getPropClass(footerCellClassName, params)] }, attrs), { style: footerCellStyle ? (XEUtils.isFunction(footerCellStyle) ? footerCellStyle(params) : footerCellStyle) : null }), tfOns), { key: columnKey || columnOpts.useKey ? column.id : $columnIndex }), [\n                                h('div', {\n                                    class: ['vxe-cell', {\n                                            'c--title': showTitle,\n                                            'c--tooltip': showTooltip,\n                                            'c--ellipsis': showEllipsis\n                                        }]\n                                }, column.renderFooter(params))\n                            ]);\n                        }).concat(scrollbarWidth ? [\n                            h('td', {\n                                class: 'vxe-footer--gutter col--gutter'\n                            })\n                        ] : []));\n                    }))\n                ])\n            ]);\n        };\n        return renderVN;\n    }\n});\n",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699769383,
      "end": 1714699769383,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699769383,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699769384,
      "end": 1714699769384,
      "order": "normal"
    }
  ]
}
