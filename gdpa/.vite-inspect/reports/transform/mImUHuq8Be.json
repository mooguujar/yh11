{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/utils/http.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import errorIcon from '@/assets/images/common/error.png'\nimport infoIcon from '@/assets/images/common/info.png'\nimport { AuthExpirePopup } from '@/components/CommonPopup/AuthExpirePopup'\nimport Loading from '@/components/CommonPopup/Loding'\nimport router from '@/router'\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from '@/router/middleware'\nimport { useCommonStore } from '@/store/modules/common'\nimport axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios'\nimport { showToast } from 'vant'\nimport { AxiosErrorConfigExtended, AxiosRequestConfigExtended, CustomAxiosRequestConfig } from '.'\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from './tools'\n\n// 保存 Content-Type 的图片类型\nconst contentTypeImg = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/webp']\nlet LoadingF: any = null\nLoadingF = Loading.show()\n\nexport interface IHttpOptions {\n  auth?: boolean\n  showLoading?: boolean\n  showErrorToast?: boolean\n}\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n}\n\ninterface ResData<T> {\n  code: number\n  msg: string\n  data: T\n}\n\n// 全局请求白名单（不做取消请求操作）\nconst WHITERLIST_REQUEST = [\n  '/pay/cjfpay/h5init',\n  '/api/Systeminfo/Defaultinfo',\n  '/api/Coin/SellOrders'\n]\n\n// 非token校验接口名单\nconst NO_AUTH_REQUEST = ['/api/Systeminfo/Defaultinfo', '/pay/cjfpay/h5init']\n// 重定向登录页路由白名单\nconst NO_REDIRECT_LOGIN_ROUTE = ['Home', 'SellCoin', 'Point']\n\n// url参数\nconst search = new URLSearchParams(mergeHrefParams())\nconst vtoken = search.get('vtoken') || ''\nconst deviceid = search.get('deviceid') || ''\n\nclass CustomAxios {\n  private axiosInstance: AxiosInstance\n\n  constructor() {\n    // 初始实例化操作\n    this.axiosInstance = null as any\n  }\n\n  // 错误处理\n  private errorHandler<T>(\n    error: AxiosError | ResData<T>,\n    options?: Record<string, any>,\n    httpRequestObject?: AxiosResponse | AxiosErrorConfigExtended\n  ) {\n    const op = options ?? (error as any)?.config?.options ?? {}\n\n    if (error.code && (error as ResData<T>).msg) {\n      const { code, msg } = error as ResData<T>\n      // token失效后，跳转登录页\n      const handleTokenExpires = () => {\n        // window.log('location', window.location)\n        // const matchArr = window.location.href.match(/(?<=h5)\\S+$/)\n        // if (matchArr) {\n        //   window.location.href = window.location.href.replace(matchArr[0], '/auth/login')\n        // }\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location\n          if (hash.includes('send')) {\n            AuthExpirePopup({\n              msgtext: '登录已过期，请返回登录。',\n              action: () => router.replace('/auth/login')\n            })\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore()\n              commonStore.abortAllRequest()\n            } else if (op.login) {\n              router.replace('/auth/login')\n            } else {\n              sessionStorage.setItem('token', '')\n              localStorage.setItem('token', '')\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name as string)) {\n                router.replace('/auth/login')\n              }\n            }\n          } else {\n            router.replace('/auth/login')\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          })\n          // setTimeout(() => {\n          //   window.DIYclose()\n          // }, 3000)\n        }\n      }\n\n      switch (code) {\n        case 10066:\n          break\n        case 10007:\n          handleTokenExpires()\n          break\n        case 10008:\n          return handleTokenExpires()\n        case 10040: //为认证\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          })\n        case 338: //\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          })\n        case 339: //\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          })\n        case 1:\n          break\n        // eslint-disable-next-line indent\n        default:\n          break\n      }\n\n      console.log('code', code)\n      console.log('msg', msg)\n\n      if (op?.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon })\n        } else if (code === 10021) {\n          showToast({ message: '身份证信息已被注册', icon: errorIcon })\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon })\n          localStorage.setItem('md5_pri', '')\n          if (httpRequestObject?.config?.url === '/api/Emailsend/doSend') {\n            showToast({ message: '请输入正确的邮箱格式', icon: errorIcon })\n          }\n          setTimeout(() => {\n            window.location.reload()\n          }, 15500)\n        } else if (code === 10217) {\n          showToast({ message: `您的交易密码重置申请已提交，交易密码暂时不可用`, icon: infoIcon })\n        } else if (code === 10046) {\n          showToast({ message: '经检测您的卡号与姓名不符', icon: errorIcon })\n        } else if (code === 127) {\n          showToast({ message: '验证码错误', icon: errorIcon })\n        } else {\n          if (code !== 10007 && (!!msg || msg != 'canceled'))\n            showToast({\n              message: msg\n                .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n                .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string),\n              icon: errorIcon\n            })\n        }\n      }\n    } else {\n      const errMessage = (error as AxiosError).message\n      console.log('errMessage', errMessage)\n      if (op?.showErrorToast && !!errMessage && errMessage != 'canceled')\n        showToast({\n          message: errMessage\n            .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n            .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string),\n          icon: errorIcon\n        })\n    }\n    if (LoadingF.exposed) LoadingF.exposed.visible.value = false\n  }\n\n  request() {\n    return {\n      success: (config: CustomAxiosRequestConfig) => {\n        const options = Object.assign({}, defaultOptions, config.options ?? {})\n        const { auth, showLoading } = options\n        if (!WHITERLIST_REQUEST.includes(config.url as string) && filterList() && auth) {\n          const commonStore = useCommonStore()\n          const controller = new AbortController() // 每个请求时都新生成一个AbortController实例\n          config.signal = controller.signal // 设置请求的signal字段为new AbortController()的signal\n          commonStore.addRequest(controller)\n        }\n\n        if (showLoading) LoadingF.exposed.visible.value = true\n\n        const { isLogin, token } = getLoginStatus()\n        const search = new URLSearchParams(window.location.search)\n        const vtoken = search.get('vtoken') || ''\n        const deviceid = search.get('deviceid') || ''\n        if (!isLogin && !vtoken && !deviceid) {\n          // console.log('filterList()', filterList())\n          if (filterList() && auth) {\n            const commonStore = useCommonStore()\n            // 跳转路由前，终止所有未完成的请求\n            commonStore.abortAllRequest()\n          } else {\n            // const commonStore = useCommonStore()\n            // 跳转路由前，终止所有未完成的请求\n            // commonStore.abortAllRequest()\n          }\n        }\n        // 如果已经登录，就新增参数token\n        if (config.method === 'get') {\n          if (isLogin) {\n            config.params.token = token\n          } else {\n            config.params.token = localStorage.getItem('token') || ''\n          }\n\n          if (NO_AUTH_REQUEST.includes(config.url!) && !vtoken && !deviceid) {\n            delete config.params.token\n          }\n\n          config.params = defaultParams('post', config)\n        }\n        if (config.method === 'post') {\n          if (config.data && typeof config.data === 'object') {\n            if (isLogin) {\n              config.data.token = token\n            } else {\n              config.data.token = localStorage.getItem('token') || ''\n            }\n          }\n\n          // 内嵌保留token,h5去除token\n          if (NO_AUTH_REQUEST.includes(config.url!) && !vtoken && !deviceid) {\n            delete config.data.token\n          }\n\n          config.data = defaultParams('post', config)\n        }\n        // if (isLogin) config.headers.Authorization = `Bearer ${token}`;\n\n        return Object.assign(config, { options })\n      },\n      error: (error: AxiosError) => {\n        console.error('request:error', error)\n        this.errorHandler(error)\n\n        return Promise.reject(error)\n      }\n    }\n  }\n\n  response() {\n    return {\n      success: (response: AxiosResponse): AxiosResponse | Promise<any> => {\n        const _options = (response.config as CustomAxiosRequestConfig).options\n\n        if (contentTypeImg.includes(response.headers['content-type'])) {\n          return response\n        }\n        if (\n          response.data.code !== 0 &&\n          response.data.code !== 10208 &&\n          response.data.code !== 10229\n        ) {\n          this.errorHandler(response.data, _options, response)\n        }\n\n        return response\n      },\n      error: (error: AxiosErrorConfigExtended) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error as AxiosError)\n          return Promise.reject(error)\n        }\n\n        error.config.retry -= 1 //记录请求\n        const delay = new Promise(resolve => {\n          setTimeout(() => {\n            resolve('')\n          }, error.config.retryDelay)\n        })\n        // 等待请求重发\n        return delay.then(() => {\n          return this.axiosInstance(error.config as AxiosRequestConfigExtended)\n        })\n      }\n    }\n  }\n\n  responseData = <T>(response: AxiosResponse<ResData<T>>, config?: CustomAxiosRequestConfig): T => {\n    const { data } = response\n    if (LoadingF.exposed) LoadingF.exposed.visible.value = false\n    if (config?.options?.returnFull) return data as unknown as T\n    if (data.data instanceof Array && data.data.length == 0) {\n      ;(data.data as any).code = data.code\n      return data.data\n    }\n\n    return data.data ? data.data : (data as unknown as T)\n  }\n\n  init() {\n    let SERVE_URL = sessionStorage.getItem('SERVE_URL') || ''\n\n    this.axiosInstance = axios.create({\n      baseURL: process.env.NODE_ENV === 'dev' ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      timeout: 15000\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    } as AxiosRequestConfigExtended)\n\n    const response = this.response()\n\n    // 添加响应拦截器\n    this.axiosInstance.interceptors.response.use(response.success, response.error)\n    // 添加请求拦截器\n    const request = this.request()\n\n    this.axiosInstance.interceptors.request.use(request.success as any, request.error)\n  }\n\n  // 发送 GET 请求\n  get<T>(url: string, params: any = {}, config?: CustomAxiosRequestConfig): Promise<T> {\n    if (!this.axiosInstance) {\n      this.init()\n    }\n\n    return this.axiosInstance\n      .get(url, {\n        params\n      })\n      .then(response => this.responseData<T>(response, config))\n      .catch(error => {\n        throw error\n      })\n  }\n\n  // // 发送 POST 请求\n  post<T>(url: string, data: any = {}, config?: CustomAxiosRequestConfig): Promise<T> {\n    if (!this.axiosInstance) {\n      this.init()\n    }\n\n    return this.axiosInstance\n      .post<ResData<T>>(url, data, config)\n      .then(response => this.responseData<T>(response, config))\n      .catch(error => {\n        throw error\n      })\n  }\n\n  // 其他自定义方法\n}\n\nexport const request = new CustomAxios()\nexport default CustomAxios\n",
      "start": 1714699769440,
      "end": 1714699769492,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699769492,
      "end": 1714699769492,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import errorIcon from \"@/assets/images/common/error.png\";\nimport infoIcon from \"@/assets/images/common/info.png\";\nimport { AuthExpirePopup } from \"@/components/CommonPopup/AuthExpirePopup\";\nimport Loading from \"@/components/CommonPopup/Loding\";\nimport router from \"@/router\";\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from \"@/router/middleware\";\nimport { useCommonStore } from \"@/store/modules/common\";\nimport axios from \"axios\";\nimport { showToast } from \"vant\";\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from \"./tools\";\nconst contentTypeImg = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/webp\"];\nlet LoadingF = null;\nLoadingF = Loading.show();\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n};\nconst WHITERLIST_REQUEST = [\n  \"/pay/cjfpay/h5init\",\n  \"/api/Systeminfo/Defaultinfo\",\n  \"/api/Coin/SellOrders\"\n];\nconst NO_AUTH_REQUEST = [\"/api/Systeminfo/Defaultinfo\", \"/pay/cjfpay/h5init\"];\nconst NO_REDIRECT_LOGIN_ROUTE = [\"Home\", \"SellCoin\", \"Point\"];\nconst search = new URLSearchParams(mergeHrefParams());\nconst vtoken = search.get(\"vtoken\") || \"\";\nconst deviceid = search.get(\"deviceid\") || \"\";\nclass CustomAxios {\n  axiosInstance;\n  constructor() {\n    this.axiosInstance = null;\n  }\n  // 错误处理\n  errorHandler(error, options, httpRequestObject) {\n    const op = options ?? error?.config?.options ?? {};\n    if (error.code && error.msg) {\n      const { code, msg } = error;\n      const handleTokenExpires = () => {\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location;\n          if (hash.includes(\"send\")) {\n            AuthExpirePopup({\n              msgtext: \"登录已过期，请返回登录。\",\n              action: () => router.replace(\"/auth/login\")\n            });\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore();\n              commonStore.abortAllRequest();\n            } else if (op.login) {\n              router.replace(\"/auth/login\");\n            } else {\n              sessionStorage.setItem(\"token\", \"\");\n              localStorage.setItem(\"token\", \"\");\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name)) {\n                router.replace(\"/auth/login\");\n              }\n            }\n          } else {\n            router.replace(\"/auth/login\");\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          });\n        }\n      };\n      switch (code) {\n        case 10066:\n          break;\n        case 10007:\n          handleTokenExpires();\n          break;\n        case 10008:\n          return handleTokenExpires();\n        case 10040:\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 338:\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          });\n        case 339:\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 1:\n          break;\n        default:\n          break;\n      }\n      console.log(\"code\", code);\n      console.log(\"msg\", msg);\n      if (op?.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon });\n        } else if (code === 10021) {\n          showToast({ message: \"身份证信息已被注册\", icon: errorIcon });\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon });\n          localStorage.setItem(\"md5_pri\", \"\");\n          if (httpRequestObject?.config?.url === \"/api/Emailsend/doSend\") {\n            showToast({ message: \"请输入正确的邮箱格式\", icon: errorIcon });\n          }\n          setTimeout(() => {\n            window.location.reload();\n          }, 15500);\n        } else if (code === 10217) {\n          showToast({ message: `您的交易密码重置申请已提交，交易密码暂时不可用`, icon: infoIcon });\n        } else if (code === 10046) {\n          showToast({ message: \"经检测您的卡号与姓名不符\", icon: errorIcon });\n        } else if (code === 127) {\n          showToast({ message: \"验证码错误\", icon: errorIcon });\n        } else {\n          if (code !== 10007 && (!!msg || msg != \"canceled\"))\n            showToast({\n              message: msg.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n              icon: errorIcon\n            });\n        }\n      }\n    } else {\n      const errMessage = error.message;\n      console.log(\"errMessage\", errMessage);\n      if (op?.showErrorToast && !!errMessage && errMessage != \"canceled\")\n        showToast({\n          message: errMessage.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n          icon: errorIcon\n        });\n    }\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n  }\n  request() {\n    return {\n      success: (config) => {\n        const options = Object.assign({}, defaultOptions, config.options ?? {});\n        const { auth, showLoading } = options;\n        if (!WHITERLIST_REQUEST.includes(config.url) && filterList() && auth) {\n          const commonStore = useCommonStore();\n          const controller = new AbortController();\n          config.signal = controller.signal;\n          commonStore.addRequest(controller);\n        }\n        if (showLoading)\n          LoadingF.exposed.visible.value = true;\n        const { isLogin, token } = getLoginStatus();\n        const search2 = new URLSearchParams(window.location.search);\n        const vtoken2 = search2.get(\"vtoken\") || \"\";\n        const deviceid2 = search2.get(\"deviceid\") || \"\";\n        if (!isLogin && !vtoken2 && !deviceid2) {\n          if (filterList() && auth) {\n            const commonStore = useCommonStore();\n            commonStore.abortAllRequest();\n          } else {\n          }\n        }\n        if (config.method === \"get\") {\n          if (isLogin) {\n            config.params.token = token;\n          } else {\n            config.params.token = localStorage.getItem(\"token\") || \"\";\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.params.token;\n          }\n          config.params = defaultParams(\"post\", config);\n        }\n        if (config.method === \"post\") {\n          if (config.data && typeof config.data === \"object\") {\n            if (isLogin) {\n              config.data.token = token;\n            } else {\n              config.data.token = localStorage.getItem(\"token\") || \"\";\n            }\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.data.token;\n          }\n          config.data = defaultParams(\"post\", config);\n        }\n        return Object.assign(config, { options });\n      },\n      error: (error) => {\n        console.error(\"request:error\", error);\n        this.errorHandler(error);\n        return Promise.reject(error);\n      }\n    };\n  }\n  response() {\n    return {\n      success: (response) => {\n        const _options = response.config.options;\n        if (contentTypeImg.includes(response.headers[\"content-type\"])) {\n          return response;\n        }\n        if (response.data.code !== 0 && response.data.code !== 10208 && response.data.code !== 10229) {\n          this.errorHandler(response.data, _options, response);\n        }\n        return response;\n      },\n      error: (error) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error);\n          return Promise.reject(error);\n        }\n        error.config.retry -= 1;\n        const delay = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(\"\");\n          }, error.config.retryDelay);\n        });\n        return delay.then(() => {\n          return this.axiosInstance(error.config);\n        });\n      }\n    };\n  }\n  responseData = (response, config) => {\n    const { data } = response;\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n    if (config?.options?.returnFull)\n      return data;\n    if (data.data instanceof Array && data.data.length == 0) {\n      ;\n      data.data.code = data.code;\n      return data.data;\n    }\n    return data.data ? data.data : data;\n  };\n  init() {\n    let SERVE_URL = sessionStorage.getItem(\"SERVE_URL\") || \"\";\n    this.axiosInstance = axios.create({\n      baseURL: process.env.NODE_ENV === \"dev\" ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      timeout: 15e3\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    });\n    const response = this.response();\n    this.axiosInstance.interceptors.response.use(response.success, response.error);\n    const request2 = this.request();\n    this.axiosInstance.interceptors.request.use(request2.success, request2.error);\n  }\n  // 发送 GET 请求\n  get(url, params = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.get(url, {\n      params\n    }).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // // 发送 POST 请求\n  post(url, data = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.post(url, data, config).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // 其他自定义方法\n}\nexport const request = new CustomAxios();\nexport default CustomAxios;\n",
      "start": 1714699769492,
      "end": 1714699769599,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/utils/http.ts"
        ],
        "sourcesContent": [
          "import errorIcon from '@/assets/images/common/error.png'\nimport infoIcon from '@/assets/images/common/info.png'\nimport { AuthExpirePopup } from '@/components/CommonPopup/AuthExpirePopup'\nimport Loading from '@/components/CommonPopup/Loding'\nimport router from '@/router'\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from '@/router/middleware'\nimport { useCommonStore } from '@/store/modules/common'\nimport axios, { AxiosError, AxiosInstance, AxiosResponse } from 'axios'\nimport { showToast } from 'vant'\nimport { AxiosErrorConfigExtended, AxiosRequestConfigExtended, CustomAxiosRequestConfig } from '.'\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from './tools'\n\n// 保存 Content-Type 的图片类型\nconst contentTypeImg = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/webp']\nlet LoadingF: any = null\nLoadingF = Loading.show()\n\nexport interface IHttpOptions {\n  auth?: boolean\n  showLoading?: boolean\n  showErrorToast?: boolean\n}\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n}\n\ninterface ResData<T> {\n  code: number\n  msg: string\n  data: T\n}\n\n// 全局请求白名单（不做取消请求操作）\nconst WHITERLIST_REQUEST = [\n  '/pay/cjfpay/h5init',\n  '/api/Systeminfo/Defaultinfo',\n  '/api/Coin/SellOrders'\n]\n\n// 非token校验接口名单\nconst NO_AUTH_REQUEST = ['/api/Systeminfo/Defaultinfo', '/pay/cjfpay/h5init']\n// 重定向登录页路由白名单\nconst NO_REDIRECT_LOGIN_ROUTE = ['Home', 'SellCoin', 'Point']\n\n// url参数\nconst search = new URLSearchParams(mergeHrefParams())\nconst vtoken = search.get('vtoken') || ''\nconst deviceid = search.get('deviceid') || ''\n\nclass CustomAxios {\n  private axiosInstance: AxiosInstance\n\n  constructor() {\n    // 初始实例化操作\n    this.axiosInstance = null as any\n  }\n\n  // 错误处理\n  private errorHandler<T>(\n    error: AxiosError | ResData<T>,\n    options?: Record<string, any>,\n    httpRequestObject?: AxiosResponse | AxiosErrorConfigExtended\n  ) {\n    const op = options ?? (error as any)?.config?.options ?? {}\n\n    if (error.code && (error as ResData<T>).msg) {\n      const { code, msg } = error as ResData<T>\n      // token失效后，跳转登录页\n      const handleTokenExpires = () => {\n        // window.log('location', window.location)\n        // const matchArr = window.location.href.match(/(?<=h5)\\S+$/)\n        // if (matchArr) {\n        //   window.location.href = window.location.href.replace(matchArr[0], '/auth/login')\n        // }\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location\n          if (hash.includes('send')) {\n            AuthExpirePopup({\n              msgtext: '登录已过期，请返回登录。',\n              action: () => router.replace('/auth/login')\n            })\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore()\n              commonStore.abortAllRequest()\n            } else if (op.login) {\n              router.replace('/auth/login')\n            } else {\n              sessionStorage.setItem('token', '')\n              localStorage.setItem('token', '')\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name as string)) {\n                router.replace('/auth/login')\n              }\n            }\n          } else {\n            router.replace('/auth/login')\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          })\n          // setTimeout(() => {\n          //   window.DIYclose()\n          // }, 3000)\n        }\n      }\n\n      switch (code) {\n        case 10066:\n          break\n        case 10007:\n          handleTokenExpires()\n          break\n        case 10008:\n          return handleTokenExpires()\n        case 10040: //为认证\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          })\n        case 338: //\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          })\n        case 339: //\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          })\n        case 1:\n          break\n        // eslint-disable-next-line indent\n        default:\n          break\n      }\n\n      console.log('code', code)\n      console.log('msg', msg)\n\n      if (op?.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon })\n        } else if (code === 10021) {\n          showToast({ message: '身份证信息已被注册', icon: errorIcon })\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon })\n          localStorage.setItem('md5_pri', '')\n          if (httpRequestObject?.config?.url === '/api/Emailsend/doSend') {\n            showToast({ message: '请输入正确的邮箱格式', icon: errorIcon })\n          }\n          setTimeout(() => {\n            window.location.reload()\n          }, 15500)\n        } else if (code === 10217) {\n          showToast({ message: `您的交易密码重置申请已提交，交易密码暂时不可用`, icon: infoIcon })\n        } else if (code === 10046) {\n          showToast({ message: '经检测您的卡号与姓名不符', icon: errorIcon })\n        } else if (code === 127) {\n          showToast({ message: '验证码错误', icon: errorIcon })\n        } else {\n          if (code !== 10007 && (!!msg || msg != 'canceled'))\n            showToast({\n              message: msg\n                .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n                .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string),\n              icon: errorIcon\n            })\n        }\n      }\n    } else {\n      const errMessage = (error as AxiosError).message\n      console.log('errMessage', errMessage)\n      if (op?.showErrorToast && !!errMessage && errMessage != 'canceled')\n        showToast({\n          message: errMessage\n            .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n            .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string),\n          icon: errorIcon\n        })\n    }\n    if (LoadingF.exposed) LoadingF.exposed.visible.value = false\n  }\n\n  request() {\n    return {\n      success: (config: CustomAxiosRequestConfig) => {\n        const options = Object.assign({}, defaultOptions, config.options ?? {})\n        const { auth, showLoading } = options\n        if (!WHITERLIST_REQUEST.includes(config.url as string) && filterList() && auth) {\n          const commonStore = useCommonStore()\n          const controller = new AbortController() // 每个请求时都新生成一个AbortController实例\n          config.signal = controller.signal // 设置请求的signal字段为new AbortController()的signal\n          commonStore.addRequest(controller)\n        }\n\n        if (showLoading) LoadingF.exposed.visible.value = true\n\n        const { isLogin, token } = getLoginStatus()\n        const search = new URLSearchParams(window.location.search)\n        const vtoken = search.get('vtoken') || ''\n        const deviceid = search.get('deviceid') || ''\n        if (!isLogin && !vtoken && !deviceid) {\n          // console.log('filterList()', filterList())\n          if (filterList() && auth) {\n            const commonStore = useCommonStore()\n            // 跳转路由前，终止所有未完成的请求\n            commonStore.abortAllRequest()\n          } else {\n            // const commonStore = useCommonStore()\n            // 跳转路由前，终止所有未完成的请求\n            // commonStore.abortAllRequest()\n          }\n        }\n        // 如果已经登录，就新增参数token\n        if (config.method === 'get') {\n          if (isLogin) {\n            config.params.token = token\n          } else {\n            config.params.token = localStorage.getItem('token') || ''\n          }\n\n          if (NO_AUTH_REQUEST.includes(config.url!) && !vtoken && !deviceid) {\n            delete config.params.token\n          }\n\n          config.params = defaultParams('post', config)\n        }\n        if (config.method === 'post') {\n          if (config.data && typeof config.data === 'object') {\n            if (isLogin) {\n              config.data.token = token\n            } else {\n              config.data.token = localStorage.getItem('token') || ''\n            }\n          }\n\n          // 内嵌保留token,h5去除token\n          if (NO_AUTH_REQUEST.includes(config.url!) && !vtoken && !deviceid) {\n            delete config.data.token\n          }\n\n          config.data = defaultParams('post', config)\n        }\n        // if (isLogin) config.headers.Authorization = `Bearer ${token}`;\n\n        return Object.assign(config, { options })\n      },\n      error: (error: AxiosError) => {\n        console.error('request:error', error)\n        this.errorHandler(error)\n\n        return Promise.reject(error)\n      }\n    }\n  }\n\n  response() {\n    return {\n      success: (response: AxiosResponse): AxiosResponse | Promise<any> => {\n        const _options = (response.config as CustomAxiosRequestConfig).options\n\n        if (contentTypeImg.includes(response.headers['content-type'])) {\n          return response\n        }\n        if (\n          response.data.code !== 0 &&\n          response.data.code !== 10208 &&\n          response.data.code !== 10229\n        ) {\n          this.errorHandler(response.data, _options, response)\n        }\n\n        return response\n      },\n      error: (error: AxiosErrorConfigExtended) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error as AxiosError)\n          return Promise.reject(error)\n        }\n\n        error.config.retry -= 1 //记录请求\n        const delay = new Promise(resolve => {\n          setTimeout(() => {\n            resolve('')\n          }, error.config.retryDelay)\n        })\n        // 等待请求重发\n        return delay.then(() => {\n          return this.axiosInstance(error.config as AxiosRequestConfigExtended)\n        })\n      }\n    }\n  }\n\n  responseData = <T>(response: AxiosResponse<ResData<T>>, config?: CustomAxiosRequestConfig): T => {\n    const { data } = response\n    if (LoadingF.exposed) LoadingF.exposed.visible.value = false\n    if (config?.options?.returnFull) return data as unknown as T\n    if (data.data instanceof Array && data.data.length == 0) {\n      ;(data.data as any).code = data.code\n      return data.data\n    }\n\n    return data.data ? data.data : (data as unknown as T)\n  }\n\n  init() {\n    let SERVE_URL = sessionStorage.getItem('SERVE_URL') || ''\n\n    this.axiosInstance = axios.create({\n      baseURL: process.env.NODE_ENV === 'dev' ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      timeout: 15000\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    } as AxiosRequestConfigExtended)\n\n    const response = this.response()\n\n    // 添加响应拦截器\n    this.axiosInstance.interceptors.response.use(response.success, response.error)\n    // 添加请求拦截器\n    const request = this.request()\n\n    this.axiosInstance.interceptors.request.use(request.success as any, request.error)\n  }\n\n  // 发送 GET 请求\n  get<T>(url: string, params: any = {}, config?: CustomAxiosRequestConfig): Promise<T> {\n    if (!this.axiosInstance) {\n      this.init()\n    }\n\n    return this.axiosInstance\n      .get(url, {\n        params\n      })\n      .then(response => this.responseData<T>(response, config))\n      .catch(error => {\n        throw error\n      })\n  }\n\n  // // 发送 POST 请求\n  post<T>(url: string, data: any = {}, config?: CustomAxiosRequestConfig): Promise<T> {\n    if (!this.axiosInstance) {\n      this.init()\n    }\n\n    return this.axiosInstance\n      .post<ResData<T>>(url, data, config)\n      .then(response => this.responseData<T>(response, config))\n      .catch(error => {\n        throw error\n      })\n  }\n\n  // 其他自定义方法\n}\n\nexport const request = new CustomAxios()\nexport default CustomAxios\n"
        ],
        "mappings": "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",
        "names": [
          "search",
          "vtoken",
          "deviceid",
          "request"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1714699769599,
      "end": 1714699769599,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699769599,
      "end": 1714699769599,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699769599,
      "end": 1714699769600,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699769600,
      "end": 1714699769600,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import errorIcon from \"@/assets/images/common/error.png\";\nimport infoIcon from \"@/assets/images/common/info.png\";\nimport { AuthExpirePopup } from \"@/components/CommonPopup/AuthExpirePopup\";\nimport Loading from \"@/components/CommonPopup/Loding\";\nimport router from \"@/router\";\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from \"@/router/middleware\";\nimport { useCommonStore } from \"@/store/modules/common\";\nimport axios from \"axios\";\nimport { showToast } from \"vant\";\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from \"./tools\";\nconst contentTypeImg = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/webp\"];\nlet LoadingF = null;\nLoadingF = Loading.show();\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n};\nconst WHITERLIST_REQUEST = [\n  \"/pay/cjfpay/h5init\",\n  \"/api/Systeminfo/Defaultinfo\",\n  \"/api/Coin/SellOrders\"\n];\nconst NO_AUTH_REQUEST = [\"/api/Systeminfo/Defaultinfo\", \"/pay/cjfpay/h5init\"];\nconst NO_REDIRECT_LOGIN_ROUTE = [\"Home\", \"SellCoin\", \"Point\"];\nconst search = new URLSearchParams(mergeHrefParams());\nconst vtoken = search.get(\"vtoken\") || \"\";\nconst deviceid = search.get(\"deviceid\") || \"\";\nclass CustomAxios {\n  axiosInstance;\n  constructor() {\n    this.axiosInstance = null;\n  }\n  // 错误处理\n  errorHandler(error, options, httpRequestObject) {\n    const op = options ?? error?.config?.options ?? {};\n    if (error.code && error.msg) {\n      const { code, msg } = error;\n      const handleTokenExpires = () => {\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location;\n          if (hash.includes(\"send\")) {\n            AuthExpirePopup({\n              msgtext: \"登录已过期，请返回登录。\",\n              action: () => router.replace(\"/auth/login\")\n            });\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore();\n              commonStore.abortAllRequest();\n            } else if (op.login) {\n              router.replace(\"/auth/login\");\n            } else {\n              sessionStorage.setItem(\"token\", \"\");\n              localStorage.setItem(\"token\", \"\");\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name)) {\n                router.replace(\"/auth/login\");\n              }\n            }\n          } else {\n            router.replace(\"/auth/login\");\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          });\n        }\n      };\n      switch (code) {\n        case 10066:\n          break;\n        case 10007:\n          handleTokenExpires();\n          break;\n        case 10008:\n          return handleTokenExpires();\n        case 10040:\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 338:\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          });\n        case 339:\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 1:\n          break;\n        default:\n          break;\n      }\n      console.log(\"code\", code);\n      console.log(\"msg\", msg);\n      if (op?.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon });\n        } else if (code === 10021) {\n          showToast({ message: \"身份证信息已被注册\", icon: errorIcon });\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon });\n          localStorage.setItem(\"md5_pri\", \"\");\n          if (httpRequestObject?.config?.url === \"/api/Emailsend/doSend\") {\n            showToast({ message: \"请输入正确的邮箱格式\", icon: errorIcon });\n          }\n          setTimeout(() => {\n            window.location.reload();\n          }, 15500);\n        } else if (code === 10217) {\n          showToast({ message: `您的交易密码重置申请已提交，交易密码暂时不可用`, icon: infoIcon });\n        } else if (code === 10046) {\n          showToast({ message: \"经检测您的卡号与姓名不符\", icon: errorIcon });\n        } else if (code === 127) {\n          showToast({ message: \"验证码错误\", icon: errorIcon });\n        } else {\n          if (code !== 10007 && (!!msg || msg != \"canceled\"))\n            showToast({\n              message: msg.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n              icon: errorIcon\n            });\n        }\n      }\n    } else {\n      const errMessage = error.message;\n      console.log(\"errMessage\", errMessage);\n      if (op?.showErrorToast && !!errMessage && errMessage != \"canceled\")\n        showToast({\n          message: errMessage.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n          icon: errorIcon\n        });\n    }\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n  }\n  request() {\n    return {\n      success: (config) => {\n        const options = Object.assign({}, defaultOptions, config.options ?? {});\n        const { auth, showLoading } = options;\n        if (!WHITERLIST_REQUEST.includes(config.url) && filterList() && auth) {\n          const commonStore = useCommonStore();\n          const controller = new AbortController();\n          config.signal = controller.signal;\n          commonStore.addRequest(controller);\n        }\n        if (showLoading)\n          LoadingF.exposed.visible.value = true;\n        const { isLogin, token } = getLoginStatus();\n        const search2 = new URLSearchParams(window.location.search);\n        const vtoken2 = search2.get(\"vtoken\") || \"\";\n        const deviceid2 = search2.get(\"deviceid\") || \"\";\n        if (!isLogin && !vtoken2 && !deviceid2) {\n          if (filterList() && auth) {\n            const commonStore = useCommonStore();\n            commonStore.abortAllRequest();\n          } else {\n          }\n        }\n        if (config.method === \"get\") {\n          if (isLogin) {\n            config.params.token = token;\n          } else {\n            config.params.token = localStorage.getItem(\"token\") || \"\";\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.params.token;\n          }\n          config.params = defaultParams(\"post\", config);\n        }\n        if (config.method === \"post\") {\n          if (config.data && typeof config.data === \"object\") {\n            if (isLogin) {\n              config.data.token = token;\n            } else {\n              config.data.token = localStorage.getItem(\"token\") || \"\";\n            }\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.data.token;\n          }\n          config.data = defaultParams(\"post\", config);\n        }\n        return Object.assign(config, { options });\n      },\n      error: (error) => {\n        console.error(\"request:error\", error);\n        this.errorHandler(error);\n        return Promise.reject(error);\n      }\n    };\n  }\n  response() {\n    return {\n      success: (response) => {\n        const _options = response.config.options;\n        if (contentTypeImg.includes(response.headers[\"content-type\"])) {\n          return response;\n        }\n        if (response.data.code !== 0 && response.data.code !== 10208 && response.data.code !== 10229) {\n          this.errorHandler(response.data, _options, response);\n        }\n        return response;\n      },\n      error: (error) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error);\n          return Promise.reject(error);\n        }\n        error.config.retry -= 1;\n        const delay = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(\"\");\n          }, error.config.retryDelay);\n        });\n        return delay.then(() => {\n          return this.axiosInstance(error.config);\n        });\n      }\n    };\n  }\n  responseData = (response, config) => {\n    const { data } = response;\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n    if (config?.options?.returnFull)\n      return data;\n    if (data.data instanceof Array && data.data.length == 0) {\n      ;\n      data.data.code = data.code;\n      return data.data;\n    }\n    return data.data ? data.data : data;\n  };\n  init() {\n    let SERVE_URL = sessionStorage.getItem(\"SERVE_URL\") || \"\";\n    this.axiosInstance = axios.create({\n      baseURL: process.env.NODE_ENV === \"dev\" ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      timeout: 15e3\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    });\n    const response = this.response();\n    this.axiosInstance.interceptors.response.use(response.success, response.error);\n    const request2 = this.request();\n    this.axiosInstance.interceptors.request.use(request2.success, request2.error);\n  }\n  // 发送 GET 请求\n  get(url, params = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.get(url, {\n      params\n    }).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // // 发送 POST 请求\n  post(url, data = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.post(url, data, config).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // 其他自定义方法\n}\nexport const request = new CustomAxios();\nexport default CustomAxios;\n",
      "start": 1714699769600,
      "end": 1714699769600,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport errorIcon from \"@/assets/images/common/error.png\";\nimport infoIcon from \"@/assets/images/common/info.png\";\nimport { AuthExpirePopup } from \"@/components/CommonPopup/AuthExpirePopup\";\nimport Loading from \"@/components/CommonPopup/Loding\";\nimport router from \"@/router\";\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from \"@/router/middleware\";\nimport { useCommonStore } from \"@/store/modules/common\";\nimport axios from \"axios\";\nimport { showToast } from \"vant\";\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from \"./tools\";\nconst contentTypeImg = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/webp\"];\nlet LoadingF = null;\nLoadingF = Loading.show();\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n};\nconst WHITERLIST_REQUEST = [\n  \"/pay/cjfpay/h5init\",\n  \"/api/Systeminfo/Defaultinfo\",\n  \"/api/Coin/SellOrders\"\n];\nconst NO_AUTH_REQUEST = [\"/api/Systeminfo/Defaultinfo\", \"/pay/cjfpay/h5init\"];\nconst NO_REDIRECT_LOGIN_ROUTE = [\"Home\", \"SellCoin\", \"Point\"];\nconst search = new URLSearchParams(mergeHrefParams());\nconst vtoken = search.get(\"vtoken\") || \"\";\nconst deviceid = search.get(\"deviceid\") || \"\";\nclass CustomAxios {\n  constructor() {\n    __publicField(this, \"axiosInstance\");\n    __publicField(this, \"responseData\", (response, config) => {\n      var _a;\n      const { data } = response;\n      if (LoadingF.exposed)\n        LoadingF.exposed.visible.value = false;\n      if ((_a = config == null ? void 0 : config.options) == null ? void 0 : _a.returnFull)\n        return data;\n      if (data.data instanceof Array && data.data.length == 0) {\n        ;\n        data.data.code = data.code;\n        return data.data;\n      }\n      return data.data ? data.data : data;\n    });\n    this.axiosInstance = null;\n  }\n  // 错误处理\n  errorHandler(error, options, httpRequestObject) {\n    var _a, _b, _c;\n    const op = (_b = options != null ? options : (_a = error == null ? void 0 : error.config) == null ? void 0 : _a.options) != null ? _b : {};\n    if (error.code && error.msg) {\n      const { code, msg } = error;\n      const handleTokenExpires = () => {\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location;\n          if (hash.includes(\"send\")) {\n            AuthExpirePopup({\n              msgtext: \"\\u767B\\u5F55\\u5DF2\\u8FC7\\u671F\\uFF0C\\u8BF7\\u8FD4\\u56DE\\u767B\\u5F55\\u3002\",\n              action: () => router.replace(\"/auth/login\")\n            });\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore();\n              commonStore.abortAllRequest();\n            } else if (op.login) {\n              router.replace(\"/auth/login\");\n            } else {\n              sessionStorage.setItem(\"token\", \"\");\n              localStorage.setItem(\"token\", \"\");\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name)) {\n                router.replace(\"/auth/login\");\n              }\n            }\n          } else {\n            router.replace(\"/auth/login\");\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          });\n        }\n      };\n      switch (code) {\n        case 10066:\n          break;\n        case 10007:\n          handleTokenExpires();\n          break;\n        case 10008:\n          return handleTokenExpires();\n        case 10040:\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 338:\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          });\n        case 339:\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 1:\n          break;\n        default:\n          break;\n      }\n      console.log(\"code\", code);\n      console.log(\"msg\", msg);\n      if (op == null ? void 0 : op.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon });\n        } else if (code === 10021) {\n          showToast({ message: \"\\u8EAB\\u4EFD\\u8BC1\\u4FE1\\u606F\\u5DF2\\u88AB\\u6CE8\\u518C\", icon: errorIcon });\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon });\n          localStorage.setItem(\"md5_pri\", \"\");\n          if (((_c = httpRequestObject == null ? void 0 : httpRequestObject.config) == null ? void 0 : _c.url) === \"/api/Emailsend/doSend\") {\n            showToast({ message: \"\\u8BF7\\u8F93\\u5165\\u6B63\\u786E\\u7684\\u90AE\\u7BB1\\u683C\\u5F0F\", icon: errorIcon });\n          }\n          setTimeout(() => {\n            window.location.reload();\n          }, 15500);\n        } else if (code === 10217) {\n          showToast({ message: `\\u60A8\\u7684\\u4EA4\\u6613\\u5BC6\\u7801\\u91CD\\u7F6E\\u7533\\u8BF7\\u5DF2\\u63D0\\u4EA4\\uFF0C\\u4EA4\\u6613\\u5BC6\\u7801\\u6682\\u65F6\\u4E0D\\u53EF\\u7528`, icon: infoIcon });\n        } else if (code === 10046) {\n          showToast({ message: \"\\u7ECF\\u68C0\\u6D4B\\u60A8\\u7684\\u5361\\u53F7\\u4E0E\\u59D3\\u540D\\u4E0D\\u7B26\", icon: errorIcon });\n        } else if (code === 127) {\n          showToast({ message: \"\\u9A8C\\u8BC1\\u7801\\u9519\\u8BEF\", icon: errorIcon });\n        } else {\n          if (code !== 10007 && (!!msg || msg != \"canceled\"))\n            showToast({\n              message: msg.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n              icon: errorIcon\n            });\n        }\n      }\n    } else {\n      const errMessage = error.message;\n      console.log(\"errMessage\", errMessage);\n      if ((op == null ? void 0 : op.showErrorToast) && !!errMessage && errMessage != \"canceled\")\n        showToast({\n          message: errMessage.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n          icon: errorIcon\n        });\n    }\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n  }\n  request() {\n    return {\n      success: (config) => {\n        var _a;\n        const options = Object.assign({}, defaultOptions, (_a = config.options) != null ? _a : {});\n        const { auth, showLoading } = options;\n        if (!WHITERLIST_REQUEST.includes(config.url) && filterList() && auth) {\n          const commonStore = useCommonStore();\n          const controller = new AbortController();\n          config.signal = controller.signal;\n          commonStore.addRequest(controller);\n        }\n        if (showLoading)\n          LoadingF.exposed.visible.value = true;\n        const { isLogin, token } = getLoginStatus();\n        const search2 = new URLSearchParams(window.location.search);\n        const vtoken2 = search2.get(\"vtoken\") || \"\";\n        const deviceid2 = search2.get(\"deviceid\") || \"\";\n        if (!isLogin && !vtoken2 && !deviceid2) {\n          if (filterList() && auth) {\n            const commonStore = useCommonStore();\n            commonStore.abortAllRequest();\n          } else {\n          }\n        }\n        if (config.method === \"get\") {\n          if (isLogin) {\n            config.params.token = token;\n          } else {\n            config.params.token = localStorage.getItem(\"token\") || \"\";\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.params.token;\n          }\n          config.params = defaultParams(\"post\", config);\n        }\n        if (config.method === \"post\") {\n          if (config.data && typeof config.data === \"object\") {\n            if (isLogin) {\n              config.data.token = token;\n            } else {\n              config.data.token = localStorage.getItem(\"token\") || \"\";\n            }\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.data.token;\n          }\n          config.data = defaultParams(\"post\", config);\n        }\n        return Object.assign(config, { options });\n      },\n      error: (error) => {\n        console.error(\"request:error\", error);\n        this.errorHandler(error);\n        return Promise.reject(error);\n      }\n    };\n  }\n  response() {\n    return {\n      success: (response) => {\n        const _options = response.config.options;\n        if (contentTypeImg.includes(response.headers[\"content-type\"])) {\n          return response;\n        }\n        if (response.data.code !== 0 && response.data.code !== 10208 && response.data.code !== 10229) {\n          this.errorHandler(response.data, _options, response);\n        }\n        return response;\n      },\n      error: (error) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error);\n          return Promise.reject(error);\n        }\n        error.config.retry -= 1;\n        const delay = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(\"\");\n          }, error.config.retryDelay);\n        });\n        return delay.then(() => {\n          return this.axiosInstance(error.config);\n        });\n      }\n    };\n  }\n  init() {\n    let SERVE_URL = sessionStorage.getItem(\"SERVE_URL\") || \"\";\n    this.axiosInstance = axios.create({\n      baseURL: process.env.NODE_ENV === \"dev\" ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      timeout: 15e3\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    });\n    const response = this.response();\n    this.axiosInstance.interceptors.response.use(response.success, response.error);\n    const request2 = this.request();\n    this.axiosInstance.interceptors.request.use(request2.success, request2.error);\n  }\n  // 发送 GET 请求\n  get(url, params = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.get(url, {\n      params\n    }).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // // 发送 POST 请求\n  post(url, data = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.post(url, data, config).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // 其他自定义方法\n}\nexport const request = new CustomAxios();\nexport default CustomAxios;\n",
      "start": 1714699769600,
      "end": 1714699770584,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/utils/http.ts\"],\n  \"sourcesContent\": [\"import errorIcon from \\\"@/assets/images/common/error.png\\\";\\nimport infoIcon from \\\"@/assets/images/common/info.png\\\";\\nimport { AuthExpirePopup } from \\\"@/components/CommonPopup/AuthExpirePopup\\\";\\nimport Loading from \\\"@/components/CommonPopup/Loding\\\";\\nimport router from \\\"@/router\\\";\\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from \\\"@/router/middleware\\\";\\nimport { useCommonStore } from \\\"@/store/modules/common\\\";\\nimport axios from \\\"axios\\\";\\nimport { showToast } from \\\"vant\\\";\\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from \\\"./tools\\\";\\nconst contentTypeImg = [\\\"image/jpeg\\\", \\\"image/png\\\", \\\"image/gif\\\", \\\"image/bmp\\\", \\\"image/webp\\\"];\\nlet LoadingF = null;\\nLoadingF = Loading.show();\\nconst defaultOptions = {\\n  auth: false,\\n  showLoading: false,\\n  showErrorToast: true\\n};\\nconst WHITERLIST_REQUEST = [\\n  \\\"/pay/cjfpay/h5init\\\",\\n  \\\"/api/Systeminfo/Defaultinfo\\\",\\n  \\\"/api/Coin/SellOrders\\\"\\n];\\nconst NO_AUTH_REQUEST = [\\\"/api/Systeminfo/Defaultinfo\\\", \\\"/pay/cjfpay/h5init\\\"];\\nconst NO_REDIRECT_LOGIN_ROUTE = [\\\"Home\\\", \\\"SellCoin\\\", \\\"Point\\\"];\\nconst search = new URLSearchParams(mergeHrefParams());\\nconst vtoken = search.get(\\\"vtoken\\\") || \\\"\\\";\\nconst deviceid = search.get(\\\"deviceid\\\") || \\\"\\\";\\nclass CustomAxios {\\n  axiosInstance;\\n  constructor() {\\n    this.axiosInstance = null;\\n  }\\n  // \\u9519\\u8BEF\\u5904\\u7406\\n  errorHandler(error, options, httpRequestObject) {\\n    const op = options ?? error?.config?.options ?? {};\\n    if (error.code && error.msg) {\\n      const { code, msg } = error;\\n      const handleTokenExpires = () => {\\n        if (!vtoken && !deviceid) {\\n          const { href, hash } = window.location;\\n          if (hash.includes(\\\"send\\\")) {\\n            AuthExpirePopup({\\n              msgtext: \\\"\\u767B\\u5F55\\u5DF2\\u8FC7\\u671F\\uFF0C\\u8BF7\\u8FD4\\u56DE\\u767B\\u5F55\\u3002\\\",\\n              action: () => router.replace(\\\"/auth/login\\\")\\n            });\\n          } else if (filterList()) {\\n            if (op.auth) {\\n              const commonStore = useCommonStore();\\n              commonStore.abortAllRequest();\\n            } else if (op.login) {\\n              router.replace(\\\"/auth/login\\\");\\n            } else {\\n              sessionStorage.setItem(\\\"token\\\", \\\"\\\");\\n              localStorage.setItem(\\\"token\\\", \\\"\\\");\\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name)) {\\n                router.replace(\\\"/auth/login\\\");\\n              }\\n            }\\n          } else {\\n            router.replace(\\\"/auth/login\\\");\\n          }\\n        } else {\\n          AuthExpirePopup({\\n            action: () => window.DIYclose()\\n          });\\n        }\\n      };\\n      switch (code) {\\n        case 10066:\\n          break;\\n        case 10007:\\n          handleTokenExpires();\\n          break;\\n        case 10008:\\n          return handleTokenExpires();\\n        case 10040:\\n          return CompletionIdCardMiddleware({\\n            action: () => router.push(`/verifyList`)\\n          });\\n        case 338:\\n          return CompletionAdvancedIdCardMiddleware({\\n            // actio1n: () => router.push(`/verifyList`),\\n            content: msg,\\n            action: () => router.push(`/verifyList`)\\n          });\\n        case 339:\\n          return CompletionAdvancedIdCardMiddleware({\\n            action: () => router.push(`/verifyList`)\\n          });\\n        case 1:\\n          break;\\n        default:\\n          break;\\n      }\\n      console.log(\\\"code\\\", code);\\n      console.log(\\\"msg\\\", msg);\\n      if (op?.showErrorToast) {\\n        if ([134].includes(code)) {\\n          showToast({ message: msg, icon: infoIcon });\\n        } else if (code === 10021) {\\n          showToast({ message: \\\"\\u8EAB\\u4EFD\\u8BC1\\u4FE1\\u606F\\u5DF2\\u88AB\\u6CE8\\u518C\\\", icon: errorIcon });\\n        } else if (code === 14) {\\n          showToast({ message: msg, icon: errorIcon });\\n          localStorage.setItem(\\\"md5_pri\\\", \\\"\\\");\\n          if (httpRequestObject?.config?.url === \\\"/api/Emailsend/doSend\\\") {\\n            showToast({ message: \\\"\\u8BF7\\u8F93\\u5165\\u6B63\\u786E\\u7684\\u90AE\\u7BB1\\u683C\\u5F0F\\\", icon: errorIcon });\\n          }\\n          setTimeout(() => {\\n            window.location.reload();\\n          }, 15500);\\n        } else if (code === 10217) {\\n          showToast({ message: `\\u60A8\\u7684\\u4EA4\\u6613\\u5BC6\\u7801\\u91CD\\u7F6E\\u7533\\u8BF7\\u5DF2\\u63D0\\u4EA4\\uFF0C\\u4EA4\\u6613\\u5BC6\\u7801\\u6682\\u65F6\\u4E0D\\u53EF\\u7528`, icon: infoIcon });\\n        } else if (code === 10046) {\\n          showToast({ message: \\\"\\u7ECF\\u68C0\\u6D4B\\u60A8\\u7684\\u5361\\u53F7\\u4E0E\\u59D3\\u540D\\u4E0D\\u7B26\\\", icon: errorIcon });\\n        } else if (code === 127) {\\n          showToast({ message: \\\"\\u9A8C\\u8BC1\\u7801\\u9519\\u8BEF\\\", icon: errorIcon });\\n        } else {\\n          if (code !== 10007 && (!!msg || msg != \\\"canceled\\\"))\\n            showToast({\\n              message: msg.replace(/GDB/gi, sessionStorage.getItem(\\\"coin_name\\\")).replace(/GDpay/gi, sessionStorage.getItem(\\\"pay_name\\\")),\\n              icon: errorIcon\\n            });\\n        }\\n      }\\n    } else {\\n      const errMessage = error.message;\\n      console.log(\\\"errMessage\\\", errMessage);\\n      if (op?.showErrorToast && !!errMessage && errMessage != \\\"canceled\\\")\\n        showToast({\\n          message: errMessage.replace(/GDB/gi, sessionStorage.getItem(\\\"coin_name\\\")).replace(/GDpay/gi, sessionStorage.getItem(\\\"pay_name\\\")),\\n          icon: errorIcon\\n        });\\n    }\\n    if (LoadingF.exposed)\\n      LoadingF.exposed.visible.value = false;\\n  }\\n  request() {\\n    return {\\n      success: (config) => {\\n        const options = Object.assign({}, defaultOptions, config.options ?? {});\\n        const { auth, showLoading } = options;\\n        if (!WHITERLIST_REQUEST.includes(config.url) && filterList() && auth) {\\n          const commonStore = useCommonStore();\\n          const controller = new AbortController();\\n          config.signal = controller.signal;\\n          commonStore.addRequest(controller);\\n        }\\n        if (showLoading)\\n          LoadingF.exposed.visible.value = true;\\n        const { isLogin, token } = getLoginStatus();\\n        const search2 = new URLSearchParams(window.location.search);\\n        const vtoken2 = search2.get(\\\"vtoken\\\") || \\\"\\\";\\n        const deviceid2 = search2.get(\\\"deviceid\\\") || \\\"\\\";\\n        if (!isLogin && !vtoken2 && !deviceid2) {\\n          if (filterList() && auth) {\\n            const commonStore = useCommonStore();\\n            commonStore.abortAllRequest();\\n          } else {\\n          }\\n        }\\n        if (config.method === \\\"get\\\") {\\n          if (isLogin) {\\n            config.params.token = token;\\n          } else {\\n            config.params.token = localStorage.getItem(\\\"token\\\") || \\\"\\\";\\n          }\\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\\n            delete config.params.token;\\n          }\\n          config.params = defaultParams(\\\"post\\\", config);\\n        }\\n        if (config.method === \\\"post\\\") {\\n          if (config.data && typeof config.data === \\\"object\\\") {\\n            if (isLogin) {\\n              config.data.token = token;\\n            } else {\\n              config.data.token = localStorage.getItem(\\\"token\\\") || \\\"\\\";\\n            }\\n          }\\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\\n            delete config.data.token;\\n          }\\n          config.data = defaultParams(\\\"post\\\", config);\\n        }\\n        return Object.assign(config, { options });\\n      },\\n      error: (error) => {\\n        console.error(\\\"request:error\\\", error);\\n        this.errorHandler(error);\\n        return Promise.reject(error);\\n      }\\n    };\\n  }\\n  response() {\\n    return {\\n      success: (response) => {\\n        const _options = response.config.options;\\n        if (contentTypeImg.includes(response.headers[\\\"content-type\\\"])) {\\n          return response;\\n        }\\n        if (response.data.code !== 0 && response.data.code !== 10208 && response.data.code !== 10229) {\\n          this.errorHandler(response.data, _options, response);\\n        }\\n        return response;\\n      },\\n      error: (error) => {\\n        if (!error.config || !error.config.retry) {\\n          this.errorHandler(error);\\n          return Promise.reject(error);\\n        }\\n        error.config.retry -= 1;\\n        const delay = new Promise((resolve) => {\\n          setTimeout(() => {\\n            resolve(\\\"\\\");\\n          }, error.config.retryDelay);\\n        });\\n        return delay.then(() => {\\n          return this.axiosInstance(error.config);\\n        });\\n      }\\n    };\\n  }\\n  responseData = (response, config) => {\\n    const { data } = response;\\n    if (LoadingF.exposed)\\n      LoadingF.exposed.visible.value = false;\\n    if (config?.options?.returnFull)\\n      return data;\\n    if (data.data instanceof Array && data.data.length == 0) {\\n      ;\\n      data.data.code = data.code;\\n      return data.data;\\n    }\\n    return data.data ? data.data : data;\\n  };\\n  init() {\\n    let SERVE_URL = sessionStorage.getItem(\\\"SERVE_URL\\\") || \\\"\\\";\\n    this.axiosInstance = axios.create({\\n      baseURL: process.env.NODE_ENV === \\\"dev\\\" ? import.meta.env.VITE_APP_BASE_URL : SERVE_URL,\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/x-www-form-urlencoded;charset=UTF-8\\\"\\n      },\\n      timeout: 15e3\\n      // retry: 2, // \\u91CD\\u8BD5\\u6B21\\u6570\\n      // retryDelay: 100 // \\u91CD\\u8BD5\\u95F4\\u9694\\n    });\\n    const response = this.response();\\n    this.axiosInstance.interceptors.response.use(response.success, response.error);\\n    const request2 = this.request();\\n    this.axiosInstance.interceptors.request.use(request2.success, request2.error);\\n  }\\n  // \\u53D1\\u9001 GET \\u8BF7\\u6C42\\n  get(url, params = {}, config) {\\n    if (!this.axiosInstance) {\\n      this.init();\\n    }\\n    return this.axiosInstance.get(url, {\\n      params\\n    }).then((response) => this.responseData(response, config)).catch((error) => {\\n      throw error;\\n    });\\n  }\\n  // // \\u53D1\\u9001 POST \\u8BF7\\u6C42\\n  post(url, data = {}, config) {\\n    if (!this.axiosInstance) {\\n      this.init();\\n    }\\n    return this.axiosInstance.post(url, data, config).then((response) => this.responseData(response, config)).catch((error) => {\\n      throw error;\\n    });\\n  }\\n  // \\u5176\\u4ED6\\u81EA\\u5B9A\\u4E49\\u65B9\\u6CD5\\n}\\nexport const request = new CustomAxios();\\nexport default CustomAxios;\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:define",
      "result": "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport errorIcon from \"@/assets/images/common/error.png\";\nimport infoIcon from \"@/assets/images/common/info.png\";\nimport { AuthExpirePopup } from \"@/components/CommonPopup/AuthExpirePopup\";\nimport Loading from \"@/components/CommonPopup/Loding\";\nimport router from \"@/router\";\nimport { CompletionAdvancedIdCardMiddleware, CompletionIdCardMiddleware } from \"@/router/middleware\";\nimport { useCommonStore } from \"@/store/modules/common\";\nimport axios from \"axios\";\nimport { showToast } from \"vant\";\nimport { defaultParams, filterList, getLoginStatus, mergeHrefParams } from \"./tools\";\nconst contentTypeImg = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/bmp\", \"image/webp\"];\nlet LoadingF = null;\nLoadingF = Loading.show();\nconst defaultOptions = {\n  auth: false,\n  showLoading: false,\n  showErrorToast: true\n};\nconst WHITERLIST_REQUEST = [\n  \"/pay/cjfpay/h5init\",\n  \"/api/Systeminfo/Defaultinfo\",\n  \"/api/Coin/SellOrders\"\n];\nconst NO_AUTH_REQUEST = [\"/api/Systeminfo/Defaultinfo\", \"/pay/cjfpay/h5init\"];\nconst NO_REDIRECT_LOGIN_ROUTE = [\"Home\", \"SellCoin\", \"Point\"];\nconst search = new URLSearchParams(mergeHrefParams());\nconst vtoken = search.get(\"vtoken\") || \"\";\nconst deviceid = search.get(\"deviceid\") || \"\";\nclass CustomAxios {\n  constructor() {\n    __publicField(this, \"axiosInstance\");\n    __publicField(this, \"responseData\", (response, config) => {\n      var _a;\n      const { data } = response;\n      if (LoadingF.exposed)\n        LoadingF.exposed.visible.value = false;\n      if ((_a = config == null ? void 0 : config.options) == null ? void 0 : _a.returnFull)\n        return data;\n      if (data.data instanceof Array && data.data.length == 0) {\n        ;\n        data.data.code = data.code;\n        return data.data;\n      }\n      return data.data ? data.data : data;\n    });\n    this.axiosInstance = null;\n  }\n  // 错误处理\n  errorHandler(error, options, httpRequestObject) {\n    var _a, _b, _c;\n    const op = (_b = options != null ? options : (_a = error == null ? void 0 : error.config) == null ? void 0 : _a.options) != null ? _b : {};\n    if (error.code && error.msg) {\n      const { code, msg } = error;\n      const handleTokenExpires = () => {\n        if (!vtoken && !deviceid) {\n          const { href, hash } = window.location;\n          if (hash.includes(\"send\")) {\n            AuthExpirePopup({\n              msgtext: \"登录已过期，请返回登录。\",\n              action: () => router.replace(\"/auth/login\")\n            });\n          } else if (filterList()) {\n            if (op.auth) {\n              const commonStore = useCommonStore();\n              commonStore.abortAllRequest();\n            } else if (op.login) {\n              router.replace(\"/auth/login\");\n            } else {\n              sessionStorage.setItem(\"token\", \"\");\n              localStorage.setItem(\"token\", \"\");\n              if (!NO_REDIRECT_LOGIN_ROUTE.includes(router.currentRoute.value.name)) {\n                router.replace(\"/auth/login\");\n              }\n            }\n          } else {\n            router.replace(\"/auth/login\");\n          }\n        } else {\n          AuthExpirePopup({\n            action: () => window.DIYclose()\n          });\n        }\n      };\n      switch (code) {\n        case 10066:\n          break;\n        case 10007:\n          handleTokenExpires();\n          break;\n        case 10008:\n          return handleTokenExpires();\n        case 10040:\n          return CompletionIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 338:\n          return CompletionAdvancedIdCardMiddleware({\n            // actio1n: () => router.push(`/verifyList`),\n            content: msg,\n            action: () => router.push(`/verifyList`)\n          });\n        case 339:\n          return CompletionAdvancedIdCardMiddleware({\n            action: () => router.push(`/verifyList`)\n          });\n        case 1:\n          break;\n        default:\n          break;\n      }\n      console.log(\"code\", code);\n      console.log(\"msg\", msg);\n      if (op == null ? void 0 : op.showErrorToast) {\n        if ([134].includes(code)) {\n          showToast({ message: msg, icon: infoIcon });\n        } else if (code === 10021) {\n          showToast({ message: \"身份证信息已被注册\", icon: errorIcon });\n        } else if (code === 14) {\n          showToast({ message: msg, icon: errorIcon });\n          localStorage.setItem(\"md5_pri\", \"\");\n          if (((_c = httpRequestObject == null ? void 0 : httpRequestObject.config) == null ? void 0 : _c.url) === \"/api/Emailsend/doSend\") {\n            showToast({ message: \"请输入正确的邮箱格式\", icon: errorIcon });\n          }\n          setTimeout(() => {\n            window.location.reload();\n          }, 15500);\n        } else if (code === 10217) {\n          showToast({ message: `您的交易密码重置申请已提交，交易密码暂时不可用`, icon: infoIcon });\n        } else if (code === 10046) {\n          showToast({ message: \"经检测您的卡号与姓名不符\", icon: errorIcon });\n        } else if (code === 127) {\n          showToast({ message: \"验证码错误\", icon: errorIcon });\n        } else {\n          if (code !== 10007 && (!!msg || msg != \"canceled\"))\n            showToast({\n              message: msg.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n              icon: errorIcon\n            });\n        }\n      }\n    } else {\n      const errMessage = error.message;\n      console.log(\"errMessage\", errMessage);\n      if ((op == null ? void 0 : op.showErrorToast) && !!errMessage && errMessage != \"canceled\")\n        showToast({\n          message: errMessage.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\")),\n          icon: errorIcon\n        });\n    }\n    if (LoadingF.exposed)\n      LoadingF.exposed.visible.value = false;\n  }\n  request() {\n    return {\n      success: (config) => {\n        var _a;\n        const options = Object.assign({}, defaultOptions, (_a = config.options) != null ? _a : {});\n        const { auth, showLoading } = options;\n        if (!WHITERLIST_REQUEST.includes(config.url) && filterList() && auth) {\n          const commonStore = useCommonStore();\n          const controller = new AbortController();\n          config.signal = controller.signal;\n          commonStore.addRequest(controller);\n        }\n        if (showLoading)\n          LoadingF.exposed.visible.value = true;\n        const { isLogin, token } = getLoginStatus();\n        const search2 = new URLSearchParams(window.location.search);\n        const vtoken2 = search2.get(\"vtoken\") || \"\";\n        const deviceid2 = search2.get(\"deviceid\") || \"\";\n        if (!isLogin && !vtoken2 && !deviceid2) {\n          if (filterList() && auth) {\n            const commonStore = useCommonStore();\n            commonStore.abortAllRequest();\n          } else {\n          }\n        }\n        if (config.method === \"get\") {\n          if (isLogin) {\n            config.params.token = token;\n          } else {\n            config.params.token = localStorage.getItem(\"token\") || \"\";\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.params.token;\n          }\n          config.params = defaultParams(\"post\", config);\n        }\n        if (config.method === \"post\") {\n          if (config.data && typeof config.data === \"object\") {\n            if (isLogin) {\n              config.data.token = token;\n            } else {\n              config.data.token = localStorage.getItem(\"token\") || \"\";\n            }\n          }\n          if (NO_AUTH_REQUEST.includes(config.url) && !vtoken2 && !deviceid2) {\n            delete config.data.token;\n          }\n          config.data = defaultParams(\"post\", config);\n        }\n        return Object.assign(config, { options });\n      },\n      error: (error) => {\n        console.error(\"request:error\", error);\n        this.errorHandler(error);\n        return Promise.reject(error);\n      }\n    };\n  }\n  response() {\n    return {\n      success: (response) => {\n        const _options = response.config.options;\n        if (contentTypeImg.includes(response.headers[\"content-type\"])) {\n          return response;\n        }\n        if (response.data.code !== 0 && response.data.code !== 10208 && response.data.code !== 10229) {\n          this.errorHandler(response.data, _options, response);\n        }\n        return response;\n      },\n      error: (error) => {\n        if (!error.config || !error.config.retry) {\n          this.errorHandler(error);\n          return Promise.reject(error);\n        }\n        error.config.retry -= 1;\n        const delay = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(\"\");\n          }, error.config.retryDelay);\n        });\n        return delay.then(() => {\n          return this.axiosInstance(error.config);\n        });\n      }\n    };\n  }\n  init() {\n    let SERVE_URL = sessionStorage.getItem(\"SERVE_URL\") || \"\";\n    this.axiosInstance = axios.create({\n      baseURL: false ? \"/api\" : SERVE_URL,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      timeout: 15e3\n      // retry: 2, // 重试次数\n      // retryDelay: 100 // 重试间隔\n    });\n    const response = this.response();\n    this.axiosInstance.interceptors.response.use(response.success, response.error);\n    const request2 = this.request();\n    this.axiosInstance.interceptors.request.use(request2.success, request2.error);\n  }\n  // 发送 GET 请求\n  get(url, params = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.get(url, {\n      params\n    }).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // // 发送 POST 请求\n  post(url, data = {}, config) {\n    if (!this.axiosInstance) {\n      this.init();\n    }\n    return this.axiosInstance.post(url, data, config).then((response) => this.responseData(response, config)).catch((error) => {\n      throw error;\n    });\n  }\n  // 其他自定义方法\n}\nexport const request = new CustomAxios();\nexport default CustomAxios;\n",
      "start": 1714699770584,
      "end": 1714699770719,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699770719,
      "end": 1714699770719,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699770719,
      "end": 1714699770721,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699770721,
      "end": 1714699770721,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699770721,
      "end": 1714699770721,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699770721,
      "end": 1714699770721,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699770721,
      "end": 1714699770721,
      "order": "normal"
    }
  ]
}
