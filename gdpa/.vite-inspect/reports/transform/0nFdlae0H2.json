{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createCurry.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n",
      "start": 1714699768787,
      "end": 1714699768874,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768874,
      "end": 1714699768874,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768874,
      "end": 1714699768875,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768875,
      "end": 1714699768875,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768875,
      "end": 1714699768875,
      "order": "normal"
    }
  ]
}
