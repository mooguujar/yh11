{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/padStart.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (createPadding(length - strLength, chars) + string)\n    : string;\n}\n\nexport default padStart;\n",
      "start": 1714699768462,
      "end": 1714699768477,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (createPadding(length - strLength, chars) + string)\n    : string;\n}\n\nexport default padStart;\n",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768477,
      "end": 1714699768477,
      "order": "normal"
    }
  ]
}
