{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/tabbar/Tabbar.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { truthProp, numericProp, getZIndexStyle, createNamespace, callInterceptor, makeNumericProp, BORDER_TOP_BOTTOM } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { usePlaceholder } from \"../composables/use-placeholder.mjs\";\nconst [name, bem] = createNamespace(\"tabbar\");\nconst tabbarProps = {\n  route: Boolean,\n  fixed: truthProp,\n  border: truthProp,\n  zIndex: numericProp,\n  placeholder: Boolean,\n  activeColor: String,\n  beforeChange: Function,\n  inactiveColor: String,\n  modelValue: makeNumericProp(0),\n  safeAreaInsetBottom: {\n    type: Boolean,\n    default: null\n  }\n};\nconst TABBAR_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: tabbarProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const {\n      linkChildren\n    } = useChildren(TABBAR_KEY);\n    const renderPlaceholder = usePlaceholder(root, bem);\n    const enableSafeArea = () => {\n      var _a;\n      return (_a = props.safeAreaInsetBottom) != null ? _a : props.fixed;\n    };\n    const renderTabbar = () => {\n      var _a;\n      const {\n        fixed,\n        zIndex,\n        border\n      } = props;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"role\": \"tablist\",\n        \"style\": getZIndexStyle(zIndex),\n        \"class\": [bem({\n          fixed\n        }), {\n          [BORDER_TOP_BOTTOM]: border,\n          \"van-safe-area-bottom\": enableSafeArea()\n        }]\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n    const setActive = (active, afterChange) => {\n      callInterceptor(props.beforeChange, {\n        args: [active],\n        done() {\n          emit(\"update:modelValue\", active);\n          emit(\"change\", active);\n          afterChange();\n        }\n      });\n    };\n    linkChildren({\n      props,\n      setActive\n    });\n    return () => {\n      if (props.fixed && props.placeholder) {\n        return renderPlaceholder(renderTabbar);\n      }\n      return renderTabbar();\n    };\n  }\n});\nexport {\n  TABBAR_KEY,\n  stdin_default as default,\n  tabbarProps\n};\n",
      "start": 1714699767507,
      "end": 1714699767526,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { truthProp, numericProp, getZIndexStyle, createNamespace, callInterceptor, makeNumericProp, BORDER_TOP_BOTTOM } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { usePlaceholder } from \"../composables/use-placeholder.mjs\";\nconst [name, bem] = createNamespace(\"tabbar\");\nconst tabbarProps = {\n  route: Boolean,\n  fixed: truthProp,\n  border: truthProp,\n  zIndex: numericProp,\n  placeholder: Boolean,\n  activeColor: String,\n  beforeChange: Function,\n  inactiveColor: String,\n  modelValue: makeNumericProp(0),\n  safeAreaInsetBottom: {\n    type: Boolean,\n    default: null\n  }\n};\nconst TABBAR_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: tabbarProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const {\n      linkChildren\n    } = useChildren(TABBAR_KEY);\n    const renderPlaceholder = usePlaceholder(root, bem);\n    const enableSafeArea = () => {\n      var _a;\n      return (_a = props.safeAreaInsetBottom) != null ? _a : props.fixed;\n    };\n    const renderTabbar = () => {\n      var _a;\n      const {\n        fixed,\n        zIndex,\n        border\n      } = props;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"role\": \"tablist\",\n        \"style\": getZIndexStyle(zIndex),\n        \"class\": [bem({\n          fixed\n        }), {\n          [BORDER_TOP_BOTTOM]: border,\n          \"van-safe-area-bottom\": enableSafeArea()\n        }]\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n    const setActive = (active, afterChange) => {\n      callInterceptor(props.beforeChange, {\n        args: [active],\n        done() {\n          emit(\"update:modelValue\", active);\n          emit(\"change\", active);\n          afterChange();\n        }\n      });\n    };\n    linkChildren({\n      props,\n      setActive\n    });\n    return () => {\n      if (props.fixed && props.placeholder) {\n        return renderPlaceholder(renderTabbar);\n      }\n      return renderTabbar();\n    };\n  }\n});\nexport {\n  TABBAR_KEY,\n  stdin_default as default,\n  tabbarProps\n};\n",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767526,
      "end": 1714699767526,
      "order": "normal"
    }
  ]
}
