{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/vant@4.8.4_vue@3.4.19/node_modules/vant/es/address-edit/AddressEditDetail.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { createNamespace, numericProp } from \"../utils/index.mjs\";\nimport { Cell } from \"../cell/index.mjs\";\nimport { Field } from \"../field/index.mjs\";\nconst [name, bem] = createNamespace(\"address-edit-detail\");\nconst t = createNamespace(\"address-edit\")[2];\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    show: Boolean,\n    rows: numericProp,\n    value: String,\n    rules: Array,\n    focused: Boolean,\n    maxlength: numericProp,\n    searchResult: Array,\n    showSearchResult: Boolean\n  },\n  emits: [\"blur\", \"focus\", \"input\", \"selectSearch\"],\n  setup(props, {\n    emit\n  }) {\n    const field = ref();\n    const showSearchResult = () => props.focused && props.searchResult && props.showSearchResult;\n    const onSelect = (express) => {\n      emit(\"selectSearch\", express);\n      emit(\"input\", `${express.address || \"\"} ${express.name || \"\"}`.trim());\n    };\n    const renderSearchResult = () => {\n      if (!showSearchResult()) {\n        return;\n      }\n      const {\n        searchResult\n      } = props;\n      return searchResult.map((express) => _createVNode(Cell, {\n        \"clickable\": true,\n        \"key\": (express.name || \"\") + (express.address || \"\"),\n        \"icon\": \"location-o\",\n        \"title\": express.name,\n        \"label\": express.address,\n        \"class\": bem(\"search-item\"),\n        \"border\": false,\n        \"onClick\": () => onSelect(express)\n      }, null));\n    };\n    const onBlur = (event) => emit(\"blur\", event);\n    const onFocus = (event) => emit(\"focus\", event);\n    const onInput = (value) => emit(\"input\", value);\n    return () => {\n      if (props.show) {\n        return _createVNode(_Fragment, null, [_createVNode(Field, {\n          \"autosize\": true,\n          \"clearable\": true,\n          \"ref\": field,\n          \"class\": bem(),\n          \"rows\": props.rows,\n          \"type\": \"textarea\",\n          \"rules\": props.rules,\n          \"label\": t(\"addressDetail\"),\n          \"border\": !showSearchResult(),\n          \"maxlength\": props.maxlength,\n          \"modelValue\": props.value,\n          \"placeholder\": t(\"addressDetail\"),\n          \"onBlur\": onBlur,\n          \"onFocus\": onFocus,\n          \"onUpdate:modelValue\": onInput\n        }, null), renderSearchResult()]);\n      }\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1714699767845,
      "end": 1714699767873,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { createNamespace, numericProp } from \"../utils/index.mjs\";\nimport { Cell } from \"../cell/index.mjs\";\nimport { Field } from \"../field/index.mjs\";\nconst [name, bem] = createNamespace(\"address-edit-detail\");\nconst t = createNamespace(\"address-edit\")[2];\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    show: Boolean,\n    rows: numericProp,\n    value: String,\n    rules: Array,\n    focused: Boolean,\n    maxlength: numericProp,\n    searchResult: Array,\n    showSearchResult: Boolean\n  },\n  emits: [\"blur\", \"focus\", \"input\", \"selectSearch\"],\n  setup(props, {\n    emit\n  }) {\n    const field = ref();\n    const showSearchResult = () => props.focused && props.searchResult && props.showSearchResult;\n    const onSelect = (express) => {\n      emit(\"selectSearch\", express);\n      emit(\"input\", `${express.address || \"\"} ${express.name || \"\"}`.trim());\n    };\n    const renderSearchResult = () => {\n      if (!showSearchResult()) {\n        return;\n      }\n      const {\n        searchResult\n      } = props;\n      return searchResult.map((express) => _createVNode(Cell, {\n        \"clickable\": true,\n        \"key\": (express.name || \"\") + (express.address || \"\"),\n        \"icon\": \"location-o\",\n        \"title\": express.name,\n        \"label\": express.address,\n        \"class\": bem(\"search-item\"),\n        \"border\": false,\n        \"onClick\": () => onSelect(express)\n      }, null));\n    };\n    const onBlur = (event) => emit(\"blur\", event);\n    const onFocus = (event) => emit(\"focus\", event);\n    const onInput = (value) => emit(\"input\", value);\n    return () => {\n      if (props.show) {\n        return _createVNode(_Fragment, null, [_createVNode(Field, {\n          \"autosize\": true,\n          \"clearable\": true,\n          \"ref\": field,\n          \"class\": bem(),\n          \"rows\": props.rows,\n          \"type\": \"textarea\",\n          \"rules\": props.rules,\n          \"label\": t(\"addressDetail\"),\n          \"border\": !showSearchResult(),\n          \"maxlength\": props.maxlength,\n          \"modelValue\": props.value,\n          \"placeholder\": t(\"addressDetail\"),\n          \"onBlur\": onBlur,\n          \"onFocus\": onFocus,\n          \"onUpdate:modelValue\": onInput\n        }, null), renderSearchResult()]);\n      }\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699767873,
      "end": 1714699767873,
      "order": "normal"
    }
  ]
}
