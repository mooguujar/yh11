{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_toKey.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n",
      "start": 1714699768626,
      "end": 1714699768645,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768645,
      "end": 1714699768645,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768645,
      "end": 1714699768646,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768646,
      "end": 1714699768646,
      "order": "normal"
    }
  ]
}
