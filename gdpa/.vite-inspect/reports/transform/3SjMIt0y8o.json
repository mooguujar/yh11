{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isPlainObject.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n",
      "start": 1714699768422,
      "end": 1714699768440,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699768440,
      "end": 1714699768440,
      "order": "normal"
    }
  ]
}
