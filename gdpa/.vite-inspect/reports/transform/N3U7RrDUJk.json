{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/Task.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" }\nconst _hoisted_2 = { class: \"item-fields item-name\" }\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" }\nconst _hoisted_4 = { class: \"item-fields item-award-value\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"title\" }, \"提示\", -1 /* HOISTED */)\nconst _hoisted_7 = { class: \"content\" }\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport success from '@/assets/images/common/success.png'\nimport { IAllTaskData, IDayAction, ITaskInfo } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { showToast } from 'vant'\nimport { computed, onMounted, reactive } from 'vue'\nimport { DAILYTASK } from './tools'\n\ninterface Props {\n  list: IDayAction[] | IAllTaskData[]\n  type: number\n}\n\n// 当前组件属性\ntype AllTaskInfoProps = keyof IAllTaskData | keyof ITaskInfo\n/**\n * @description 累计任务\n * @param item 任务项\n * @param propsKey 任务项属性\n * @param isText  是否显示文字\n */\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Task',\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: ['update-list'],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props\nconst emit = __emit\n\n/**\n * @description 每日任务\n * @param item 任务项\n * @param propsKey 任务项属性\n * @param isText  是否显示文字\n */\nconst handleShowDayTask = (item: IDayAction, propsKey: keyof IDayAction, isText: boolean) => {\n  switch (propsKey) {\n    case 'flag':\n      if (isText) {\n        return item.flag ? '已完成' : '去完成'\n      } else {\n        return item.flag ? 'item-completed' : 'item-go-do'\n      }\n    case 'activity_name':\n      return item.activity_name\n    case 'doneNum':\n      return item.doneNum\n    case 'target':\n      return item.target\n    case 'reward':\n      return item.reward\n    default:\n      return ''\n  }\n}\n\nconst showStatusText = (flag: number) => {\n  if (flag === 1) return '可领取'\n  else if (flag === 2) return '去完成'\n  else return '已完成'\n}\nconst showStatus = (flag: number) => {\n  if (flag === 1) return 'item-can-do'\n  else if (flag === 2) return 'item-go-do'\n  else return 'item-completed'\n}\nconst handleShowAllTask = (item: IAllTaskData, propsKey: AllTaskInfoProps, isText: boolean) => {\n  switch (propsKey) {\n    case 'active':\n      if (isText) {\n        return showStatusText(item.active)\n      } else {\n        return showStatus(item.active)\n      }\n    case 'task_name':\n      return item.task_name\n    case 'nowmoney':\n      return item.nowmoney\n    case 'target':\n      return item.info.target\n    case 'reward':\n      return item.info.reward\n    default:\n      return ''\n  }\n}\nconst handleShowItem = (\n  item: IDayAction | IAllTaskData,\n  propsKey: keyof IDayAction | AllTaskInfoProps,\n  isText: boolean = false\n) => {\n  if (props.type === 1) {\n    return handleShowDayTask(\n      item as unknown as IDayAction,\n      propsKey as unknown as keyof IDayAction,\n      isText\n    )\n  } else {\n    return handleShowAllTask(item as unknown as IAllTaskData, propsKey as AllTaskInfoProps, isText)\n  }\n}\n\nconst btnDialog = reactive({\n  show: false,\n  content: ''\n})\n\nconst doTask = async (item: IAllTaskData, type: string) => {\n  try {\n    const res = await userDoTaskApi({\n      idd: item.task_idd,\n      levelid: item.info.id\n    })\n    // const res = {money: 5}\n    const suffix = type === 'day' ? '活跃度' : '积分'\n\n    if (res.money) {\n      emit('update-list')\n      mitt.emit('updateCoins', true)\n      showToast({\n        message: `领取成功，+${res.money}${suffix}`,\n        icon: success,\n        className: 'toast-task'\n      })\n    }\n\n    window.log('完成任务信息', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\nconst handleBtnClick = (item: IDayAction | IAllTaskData) => {\n  // 每日活跃度任务\n  if (props.type === DAILYTASK) {\n    if ((item as IDayAction).flag) return\n\n    btnDialog.content = (item as IDayAction).tofinish_action\n      .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n      .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string)\n    btnDialog.show = true\n  }\n  // 累计任务\n  else {\n    // 已完成\n    if ((item as IAllTaskData).active === 3) return\n    // 可领取\n    if ((item as IAllTaskData).active === 1) {\n      doTask(item as IAllTaskData, 'all')\n      return\n    }\n\n    btnDialog.content = (item as IAllTaskData).task_desc\n      .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n      .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string)\n    btnDialog.show = true\n  }\n}\nconst closeDialog = () => {\n  btnDialog.show = false\n}\n\nconst subffix = computed(() => {\n  return (item: IDayAction | IAllTaskData) => {\n    if (props.type === DAILYTASK) return (item as IDayAction).danwei\n    return (item as IAllTaskData).task_idd.includes('sign') ? '次' : '元'\n  }\n})\n\nonMounted(() => {\n  //\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_van_dialog = _resolveComponent(\"van-dialog\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.list, (item, index) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'flag' : 'active')])\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'activity_name' : 'task_name')), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_3, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'doneNum' : 'nowmoney')) + \"/\" + _toDisplayString(handleShowItem(item, 'target')) + _toDisplayString(subffix.value(item)), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_4, \" +\" + _toDisplayString(handleShowItem(item, 'reward')) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? '活跃度' : '积分'), 1 /* TEXT */),\n        _createElementVNode(\"div\", {\n          class: \"item-fields item-status\",\n          onClick: ($event: any) => (handleBtnClick(item))\n        }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'flag' : 'active', true)), 9 /* TEXT, PROPS */, _hoisted_5)\n      ], 2 /* CLASS */))\n    }), 128 /* KEYED_FRAGMENT */)),\n    _createVNode(_component_van_dialog, {\n      show: btnDialog.show,\n      \"onUpdate:show\": _cache[0] || (_cache[0] = ($event: any) => ((btnDialog.show) = $event)),\n      theme: \"round-button\",\n      class: \"task-dialog\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"i\", {\n          class: \"close-white block icon-pos\",\n          onClick: closeDialog\n        }),\n        _hoisted_6,\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"p\", null, _toDisplayString(btnDialog.content), 1 /* TEXT */)\n        ])\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"show\"])\n  ]))\n}\n}\n\n})",
      "start": 1714699772436,
      "end": 1714699772436
    },
    {
      "name": "vite:css",
      "start": 1714699772436,
      "end": 1714699772436,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" };\nconst _hoisted_2 = { class: \"item-fields item-name\" };\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" };\nconst _hoisted_4 = { class: \"item-fields item-award-value\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"title\" },\n  \"提示\",\n  -1\n  /* HOISTED */\n);\nconst _hoisted_7 = { class: \"content\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport success from \"@/assets/images/common/success.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, reactive } from \"vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Task\",\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: [\"update-list\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const handleShowDayTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"flag\":\n          if (isText) {\n            return item.flag ? \"已完成\" : \"去完成\";\n          } else {\n            return item.flag ? \"item-completed\" : \"item-go-do\";\n          }\n        case \"activity_name\":\n          return item.activity_name;\n        case \"doneNum\":\n          return item.doneNum;\n        case \"target\":\n          return item.target;\n        case \"reward\":\n          return item.reward;\n        default:\n          return \"\";\n      }\n    };\n    const showStatusText = (flag) => {\n      if (flag === 1)\n        return \"可领取\";\n      else if (flag === 2)\n        return \"去完成\";\n      else\n        return \"已完成\";\n    };\n    const showStatus = (flag) => {\n      if (flag === 1)\n        return \"item-can-do\";\n      else if (flag === 2)\n        return \"item-go-do\";\n      else\n        return \"item-completed\";\n    };\n    const handleShowAllTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"active\":\n          if (isText) {\n            return showStatusText(item.active);\n          } else {\n            return showStatus(item.active);\n          }\n        case \"task_name\":\n          return item.task_name;\n        case \"nowmoney\":\n          return item.nowmoney;\n        case \"target\":\n          return item.info.target;\n        case \"reward\":\n          return item.info.reward;\n        default:\n          return \"\";\n      }\n    };\n    const handleShowItem = (item, propsKey, isText = false) => {\n      if (props.type === 1) {\n        return handleShowDayTask(\n          item,\n          propsKey,\n          isText\n        );\n      } else {\n        return handleShowAllTask(item, propsKey, isText);\n      }\n    };\n    const btnDialog = reactive({\n      show: false,\n      content: \"\"\n    });\n    const doTask = async (item, type) => {\n      try {\n        const res = await userDoTaskApi({\n          idd: item.task_idd,\n          levelid: item.info.id\n        });\n        const suffix = type === \"day\" ? \"活跃度\" : \"积分\";\n        if (res.money) {\n          emit(\"update-list\");\n          mitt.emit(\"updateCoins\", true);\n          showToast({\n            message: `领取成功，+${res.money}${suffix}`,\n            icon: success,\n            className: \"toast-task\"\n          });\n        }\n        window.log(\"完成任务信息\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const handleBtnClick = (item) => {\n      if (props.type === DAILYTASK) {\n        if (item.flag)\n          return;\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      } else {\n        if (item.active === 3)\n          return;\n        if (item.active === 1) {\n          doTask(item, \"all\");\n          return;\n        }\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      }\n    };\n    const closeDialog = () => {\n      btnDialog.show = false;\n    };\n    const subffix = computed(() => {\n      return (item) => {\n        if (props.type === DAILYTASK)\n          return item.danwei;\n        return item.task_idd.includes(\"sign\") ? \"次\" : \"元\";\n      };\n    });\n    onMounted(() => {\n    });\n    return (_ctx, _cache) => {\n      const _component_van_dialog = _resolveComponent(\"van-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(_ctx.list, (item, index) => {\n            return _openBlock(), _createElementBlock(\n              \"div\",\n              {\n                key: index,\n                class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\")])\n              },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_2,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"activity_name\" : \"task_name\")),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"doneNum\" : \"nowmoney\")) + \"/\" + _toDisplayString(handleShowItem(item, \"target\")) + _toDisplayString(subffix.value(item)),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_4,\n                  \" +\" + _toDisplayString(handleShowItem(item, \"reward\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \"活跃度\" : \"积分\"),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\"div\", {\n                  class: \"item-fields item-status\",\n                  onClick: ($event) => handleBtnClick(item)\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\", true)), 9, _hoisted_5)\n              ],\n              2\n              /* CLASS */\n            );\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        )),\n        _createVNode(_component_van_dialog, {\n          show: btnDialog.show,\n          \"onUpdate:show\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\n          theme: \"round-button\",\n          class: \"task-dialog\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"i\", {\n              class: \"close-white block icon-pos\",\n              onClick: closeDialog\n            }),\n            _hoisted_6,\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\n                \"p\",\n                null,\n                _toDisplayString(btnDialog.content),\n                1\n                /* TEXT */\n              )\n            ])\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"show\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772440,
      "end": 1714699772453,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/Task.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" }\nconst _hoisted_2 = { class: \"item-fields item-name\" }\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" }\nconst _hoisted_4 = { class: \"item-fields item-award-value\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"title\" }, \"提示\", -1 /* HOISTED */)\nconst _hoisted_7 = { class: \"content\" }\n\nimport { userDoTaskApi } from '@/apis/taskActivity'\nimport success from '@/assets/images/common/success.png'\nimport { IAllTaskData, IDayAction, ITaskInfo } from '@/store/types/taskActivity'\nimport mitt from '@/utils/mitt'\nimport { showToast } from 'vant'\nimport { computed, onMounted, reactive } from 'vue'\nimport { DAILYTASK } from './tools'\n\ninterface Props {\n  list: IDayAction[] | IAllTaskData[]\n  type: number\n}\n\n// 当前组件属性\ntype AllTaskInfoProps = keyof IAllTaskData | keyof ITaskInfo\n/**\n * @description 累计任务\n * @param item 任务项\n * @param propsKey 任务项属性\n * @param isText  是否显示文字\n */\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Task',\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: ['update-list'],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props\nconst emit = __emit\n\n/**\n * @description 每日任务\n * @param item 任务项\n * @param propsKey 任务项属性\n * @param isText  是否显示文字\n */\nconst handleShowDayTask = (item: IDayAction, propsKey: keyof IDayAction, isText: boolean) => {\n  switch (propsKey) {\n    case 'flag':\n      if (isText) {\n        return item.flag ? '已完成' : '去完成'\n      } else {\n        return item.flag ? 'item-completed' : 'item-go-do'\n      }\n    case 'activity_name':\n      return item.activity_name\n    case 'doneNum':\n      return item.doneNum\n    case 'target':\n      return item.target\n    case 'reward':\n      return item.reward\n    default:\n      return ''\n  }\n}\n\nconst showStatusText = (flag: number) => {\n  if (flag === 1) return '可领取'\n  else if (flag === 2) return '去完成'\n  else return '已完成'\n}\nconst showStatus = (flag: number) => {\n  if (flag === 1) return 'item-can-do'\n  else if (flag === 2) return 'item-go-do'\n  else return 'item-completed'\n}\nconst handleShowAllTask = (item: IAllTaskData, propsKey: AllTaskInfoProps, isText: boolean) => {\n  switch (propsKey) {\n    case 'active':\n      if (isText) {\n        return showStatusText(item.active)\n      } else {\n        return showStatus(item.active)\n      }\n    case 'task_name':\n      return item.task_name\n    case 'nowmoney':\n      return item.nowmoney\n    case 'target':\n      return item.info.target\n    case 'reward':\n      return item.info.reward\n    default:\n      return ''\n  }\n}\nconst handleShowItem = (\n  item: IDayAction | IAllTaskData,\n  propsKey: keyof IDayAction | AllTaskInfoProps,\n  isText: boolean = false\n) => {\n  if (props.type === 1) {\n    return handleShowDayTask(\n      item as unknown as IDayAction,\n      propsKey as unknown as keyof IDayAction,\n      isText\n    )\n  } else {\n    return handleShowAllTask(item as unknown as IAllTaskData, propsKey as AllTaskInfoProps, isText)\n  }\n}\n\nconst btnDialog = reactive({\n  show: false,\n  content: ''\n})\n\nconst doTask = async (item: IAllTaskData, type: string) => {\n  try {\n    const res = await userDoTaskApi({\n      idd: item.task_idd,\n      levelid: item.info.id\n    })\n    // const res = {money: 5}\n    const suffix = type === 'day' ? '活跃度' : '积分'\n\n    if (res.money) {\n      emit('update-list')\n      mitt.emit('updateCoins', true)\n      showToast({\n        message: `领取成功，+${res.money}${suffix}`,\n        icon: success,\n        className: 'toast-task'\n      })\n    }\n\n    window.log('完成任务信息', res)\n  } catch (error) {\n    console.error(error)\n  }\n}\nconst handleBtnClick = (item: IDayAction | IAllTaskData) => {\n  // 每日活跃度任务\n  if (props.type === DAILYTASK) {\n    if ((item as IDayAction).flag) return\n\n    btnDialog.content = (item as IDayAction).tofinish_action\n      .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n      .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string)\n    btnDialog.show = true\n  }\n  // 累计任务\n  else {\n    // 已完成\n    if ((item as IAllTaskData).active === 3) return\n    // 可领取\n    if ((item as IAllTaskData).active === 1) {\n      doTask(item as IAllTaskData, 'all')\n      return\n    }\n\n    btnDialog.content = (item as IAllTaskData).task_desc\n      .replace(/GDB/gi, sessionStorage.getItem('coin_name') as string)\n      .replace(/GDpay/gi, sessionStorage.getItem('pay_name') as string)\n    btnDialog.show = true\n  }\n}\nconst closeDialog = () => {\n  btnDialog.show = false\n}\n\nconst subffix = computed(() => {\n  return (item: IDayAction | IAllTaskData) => {\n    if (props.type === DAILYTASK) return (item as IDayAction).danwei\n    return (item as IAllTaskData).task_idd.includes('sign') ? '次' : '元'\n  }\n})\n\nonMounted(() => {\n  //\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_van_dialog = _resolveComponent(\"van-dialog\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.list, (item, index) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'flag' : 'active')])\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'activity_name' : 'task_name')), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_3, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'doneNum' : 'nowmoney')) + \"/\" + _toDisplayString(handleShowItem(item, 'target')) + _toDisplayString(subffix.value(item)), 1 /* TEXT */),\n        _createElementVNode(\"div\", _hoisted_4, \" +\" + _toDisplayString(handleShowItem(item, 'reward')) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? '活跃度' : '积分'), 1 /* TEXT */),\n        _createElementVNode(\"div\", {\n          class: \"item-fields item-status\",\n          onClick: ($event: any) => (handleBtnClick(item))\n        }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? 'flag' : 'active', true)), 9 /* TEXT, PROPS */, _hoisted_5)\n      ], 2 /* CLASS */))\n    }), 128 /* KEYED_FRAGMENT */)),\n    _createVNode(_component_van_dialog, {\n      show: btnDialog.show,\n      \"onUpdate:show\": _cache[0] || (_cache[0] = ($event: any) => ((btnDialog.show) = $event)),\n      theme: \"round-button\",\n      class: \"task-dialog\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"i\", {\n          class: \"close-white block icon-pos\",\n          onClick: closeDialog\n        }),\n        _hoisted_6,\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"p\", null, _toDisplayString(btnDialog.content), 1 /* TEXT */)\n        ])\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"show\"])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714699772453,
      "end": 1714699772453,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699772453,
      "end": 1714699772453,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699772453,
      "end": 1714699772453,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699772453,
      "end": 1714699772453,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" };\nconst _hoisted_2 = { class: \"item-fields item-name\" };\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" };\nconst _hoisted_4 = { class: \"item-fields item-award-value\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"title\" },\n  \"提示\",\n  -1\n  /* HOISTED */\n);\nconst _hoisted_7 = { class: \"content\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport success from \"@/assets/images/common/success.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, reactive } from \"vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Task\",\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: [\"update-list\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const handleShowDayTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"flag\":\n          if (isText) {\n            return item.flag ? \"已完成\" : \"去完成\";\n          } else {\n            return item.flag ? \"item-completed\" : \"item-go-do\";\n          }\n        case \"activity_name\":\n          return item.activity_name;\n        case \"doneNum\":\n          return item.doneNum;\n        case \"target\":\n          return item.target;\n        case \"reward\":\n          return item.reward;\n        default:\n          return \"\";\n      }\n    };\n    const showStatusText = (flag) => {\n      if (flag === 1)\n        return \"可领取\";\n      else if (flag === 2)\n        return \"去完成\";\n      else\n        return \"已完成\";\n    };\n    const showStatus = (flag) => {\n      if (flag === 1)\n        return \"item-can-do\";\n      else if (flag === 2)\n        return \"item-go-do\";\n      else\n        return \"item-completed\";\n    };\n    const handleShowAllTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"active\":\n          if (isText) {\n            return showStatusText(item.active);\n          } else {\n            return showStatus(item.active);\n          }\n        case \"task_name\":\n          return item.task_name;\n        case \"nowmoney\":\n          return item.nowmoney;\n        case \"target\":\n          return item.info.target;\n        case \"reward\":\n          return item.info.reward;\n        default:\n          return \"\";\n      }\n    };\n    const handleShowItem = (item, propsKey, isText = false) => {\n      if (props.type === 1) {\n        return handleShowDayTask(\n          item,\n          propsKey,\n          isText\n        );\n      } else {\n        return handleShowAllTask(item, propsKey, isText);\n      }\n    };\n    const btnDialog = reactive({\n      show: false,\n      content: \"\"\n    });\n    const doTask = async (item, type) => {\n      try {\n        const res = await userDoTaskApi({\n          idd: item.task_idd,\n          levelid: item.info.id\n        });\n        const suffix = type === \"day\" ? \"活跃度\" : \"积分\";\n        if (res.money) {\n          emit(\"update-list\");\n          mitt.emit(\"updateCoins\", true);\n          showToast({\n            message: `领取成功，+${res.money}${suffix}`,\n            icon: success,\n            className: \"toast-task\"\n          });\n        }\n        window.log(\"完成任务信息\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const handleBtnClick = (item) => {\n      if (props.type === DAILYTASK) {\n        if (item.flag)\n          return;\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      } else {\n        if (item.active === 3)\n          return;\n        if (item.active === 1) {\n          doTask(item, \"all\");\n          return;\n        }\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      }\n    };\n    const closeDialog = () => {\n      btnDialog.show = false;\n    };\n    const subffix = computed(() => {\n      return (item) => {\n        if (props.type === DAILYTASK)\n          return item.danwei;\n        return item.task_idd.includes(\"sign\") ? \"次\" : \"元\";\n      };\n    });\n    onMounted(() => {\n    });\n    return (_ctx, _cache) => {\n      const _component_van_dialog = _resolveComponent(\"van-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(_ctx.list, (item, index) => {\n            return _openBlock(), _createElementBlock(\n              \"div\",\n              {\n                key: index,\n                class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\")])\n              },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_2,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"activity_name\" : \"task_name\")),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"doneNum\" : \"nowmoney\")) + \"/\" + _toDisplayString(handleShowItem(item, \"target\")) + _toDisplayString(subffix.value(item)),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_4,\n                  \" +\" + _toDisplayString(handleShowItem(item, \"reward\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \"活跃度\" : \"积分\"),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\"div\", {\n                  class: \"item-fields item-status\",\n                  onClick: ($event) => handleBtnClick(item)\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\", true)), 9, _hoisted_5)\n              ],\n              2\n              /* CLASS */\n            );\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        )),\n        _createVNode(_component_van_dialog, {\n          show: btnDialog.show,\n          \"onUpdate:show\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\n          theme: \"round-button\",\n          class: \"task-dialog\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"i\", {\n              class: \"close-white block icon-pos\",\n              onClick: closeDialog\n            }),\n            _hoisted_6,\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\n                \"p\",\n                null,\n                _toDisplayString(btnDialog.content),\n                1\n                /* TEXT */\n              )\n            ])\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"show\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772453,
      "end": 1714699772453,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "result": "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" };\nconst _hoisted_2 = { class: \"item-fields item-name\" };\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" };\nconst _hoisted_4 = { class: \"item-fields item-award-value\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"title\" },\n  \"\\u63D0\\u793A\",\n  -1\n  /* HOISTED */\n);\nconst _hoisted_7 = { class: \"content\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport success from \"@/assets/images/common/success.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, reactive } from \"vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Task\",\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: [\"update-list\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const handleShowDayTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"flag\":\n          if (isText) {\n            return item.flag ? \"\\u5DF2\\u5B8C\\u6210\" : \"\\u53BB\\u5B8C\\u6210\";\n          } else {\n            return item.flag ? \"item-completed\" : \"item-go-do\";\n          }\n        case \"activity_name\":\n          return item.activity_name;\n        case \"doneNum\":\n          return item.doneNum;\n        case \"target\":\n          return item.target;\n        case \"reward\":\n          return item.reward;\n        default:\n          return \"\";\n      }\n    };\n    const showStatusText = (flag) => {\n      if (flag === 1)\n        return \"\\u53EF\\u9886\\u53D6\";\n      else if (flag === 2)\n        return \"\\u53BB\\u5B8C\\u6210\";\n      else\n        return \"\\u5DF2\\u5B8C\\u6210\";\n    };\n    const showStatus = (flag) => {\n      if (flag === 1)\n        return \"item-can-do\";\n      else if (flag === 2)\n        return \"item-go-do\";\n      else\n        return \"item-completed\";\n    };\n    const handleShowAllTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"active\":\n          if (isText) {\n            return showStatusText(item.active);\n          } else {\n            return showStatus(item.active);\n          }\n        case \"task_name\":\n          return item.task_name;\n        case \"nowmoney\":\n          return item.nowmoney;\n        case \"target\":\n          return item.info.target;\n        case \"reward\":\n          return item.info.reward;\n        default:\n          return \"\";\n      }\n    };\n    const handleShowItem = (item, propsKey, isText = false) => {\n      if (props.type === 1) {\n        return handleShowDayTask(\n          item,\n          propsKey,\n          isText\n        );\n      } else {\n        return handleShowAllTask(item, propsKey, isText);\n      }\n    };\n    const btnDialog = reactive({\n      show: false,\n      content: \"\"\n    });\n    const doTask = async (item, type) => {\n      try {\n        const res = await userDoTaskApi({\n          idd: item.task_idd,\n          levelid: item.info.id\n        });\n        const suffix = type === \"day\" ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\";\n        if (res.money) {\n          emit(\"update-list\");\n          mitt.emit(\"updateCoins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}${suffix}`,\n            icon: success,\n            className: \"toast-task\"\n          });\n        }\n        window.log(\"\\u5B8C\\u6210\\u4EFB\\u52A1\\u4FE1\\u606F\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const handleBtnClick = (item) => {\n      if (props.type === DAILYTASK) {\n        if (item.flag)\n          return;\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      } else {\n        if (item.active === 3)\n          return;\n        if (item.active === 1) {\n          doTask(item, \"all\");\n          return;\n        }\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      }\n    };\n    const closeDialog = () => {\n      btnDialog.show = false;\n    };\n    const subffix = computed(() => {\n      return (item) => {\n        if (props.type === DAILYTASK)\n          return item.danwei;\n        return item.task_idd.includes(\"sign\") ? \"\\u6B21\" : \"\\u5143\";\n      };\n    });\n    onMounted(() => {\n    });\n    return (_ctx, _cache) => {\n      const _component_van_dialog = _resolveComponent(\"van-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(_ctx.list, (item, index) => {\n            return _openBlock(), _createElementBlock(\n              \"div\",\n              {\n                key: index,\n                class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\")])\n              },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_2,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"activity_name\" : \"task_name\")),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"doneNum\" : \"nowmoney\")) + \"/\" + _toDisplayString(handleShowItem(item, \"target\")) + _toDisplayString(subffix.value(item)),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_4,\n                  \" +\" + _toDisplayString(handleShowItem(item, \"reward\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\"),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\"div\", {\n                  class: \"item-fields item-status\",\n                  onClick: ($event) => handleBtnClick(item)\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\", true)), 9, _hoisted_5)\n              ],\n              2\n              /* CLASS */\n            );\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        )),\n        _createVNode(_component_van_dialog, {\n          show: btnDialog.show,\n          \"onUpdate:show\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\n          theme: \"round-button\",\n          class: \"task-dialog\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"i\", {\n              class: \"close-white block icon-pos\",\n              onClick: closeDialog\n            }),\n            _hoisted_6,\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\n                \"p\",\n                null,\n                _toDisplayString(btnDialog.content),\n                1\n                /* TEXT */\n              )\n            ])\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"show\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772453,
      "end": 1714699772468,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/Task.vue?vue&type=script&setup=true&lang.ts\"],\n  \"sourcesContent\": [\"import { defineComponent as _defineComponent } from \\\"vue\\\";\\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \\\"vue\\\";\\nconst _hoisted_1 = { class: \\\"task-list-container flex flex-col\\\" };\\nconst _hoisted_2 = { class: \\\"item-fields item-name\\\" };\\nconst _hoisted_3 = { class: \\\"item-fields item-curr-value\\\" };\\nconst _hoisted_4 = { class: \\\"item-fields item-award-value\\\" };\\nconst _hoisted_5 = [\\\"onClick\\\"];\\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\\n  \\\"div\\\",\\n  { class: \\\"title\\\" },\\n  \\\"\\u63D0\\u793A\\\",\\n  -1\\n  /* HOISTED */\\n);\\nconst _hoisted_7 = { class: \\\"content\\\" };\\nimport { userDoTaskApi } from \\\"@/apis/taskActivity\\\";\\nimport success from \\\"@/assets/images/common/success.png\\\";\\nimport mitt from \\\"@/utils/mitt\\\";\\nimport { showToast } from \\\"vant\\\";\\nimport { computed, onMounted, reactive } from \\\"vue\\\";\\nimport { DAILYTASK } from \\\"./tools\\\";\\nexport default /* @__PURE__ */ _defineComponent({\\n  __name: \\\"Task\\\",\\n  props: {\\n    list: { type: Array, required: true, default: () => [] },\\n    type: { type: Number, required: true, default: 1 }\\n  },\\n  emits: [\\\"update-list\\\"],\\n  setup(__props, { emit: __emit }) {\\n    const props = __props;\\n    const emit = __emit;\\n    const handleShowDayTask = (item, propsKey, isText) => {\\n      switch (propsKey) {\\n        case \\\"flag\\\":\\n          if (isText) {\\n            return item.flag ? \\\"\\u5DF2\\u5B8C\\u6210\\\" : \\\"\\u53BB\\u5B8C\\u6210\\\";\\n          } else {\\n            return item.flag ? \\\"item-completed\\\" : \\\"item-go-do\\\";\\n          }\\n        case \\\"activity_name\\\":\\n          return item.activity_name;\\n        case \\\"doneNum\\\":\\n          return item.doneNum;\\n        case \\\"target\\\":\\n          return item.target;\\n        case \\\"reward\\\":\\n          return item.reward;\\n        default:\\n          return \\\"\\\";\\n      }\\n    };\\n    const showStatusText = (flag) => {\\n      if (flag === 1)\\n        return \\\"\\u53EF\\u9886\\u53D6\\\";\\n      else if (flag === 2)\\n        return \\\"\\u53BB\\u5B8C\\u6210\\\";\\n      else\\n        return \\\"\\u5DF2\\u5B8C\\u6210\\\";\\n    };\\n    const showStatus = (flag) => {\\n      if (flag === 1)\\n        return \\\"item-can-do\\\";\\n      else if (flag === 2)\\n        return \\\"item-go-do\\\";\\n      else\\n        return \\\"item-completed\\\";\\n    };\\n    const handleShowAllTask = (item, propsKey, isText) => {\\n      switch (propsKey) {\\n        case \\\"active\\\":\\n          if (isText) {\\n            return showStatusText(item.active);\\n          } else {\\n            return showStatus(item.active);\\n          }\\n        case \\\"task_name\\\":\\n          return item.task_name;\\n        case \\\"nowmoney\\\":\\n          return item.nowmoney;\\n        case \\\"target\\\":\\n          return item.info.target;\\n        case \\\"reward\\\":\\n          return item.info.reward;\\n        default:\\n          return \\\"\\\";\\n      }\\n    };\\n    const handleShowItem = (item, propsKey, isText = false) => {\\n      if (props.type === 1) {\\n        return handleShowDayTask(\\n          item,\\n          propsKey,\\n          isText\\n        );\\n      } else {\\n        return handleShowAllTask(item, propsKey, isText);\\n      }\\n    };\\n    const btnDialog = reactive({\\n      show: false,\\n      content: \\\"\\\"\\n    });\\n    const doTask = async (item, type) => {\\n      try {\\n        const res = await userDoTaskApi({\\n          idd: item.task_idd,\\n          levelid: item.info.id\\n        });\\n        const suffix = type === \\\"day\\\" ? \\\"\\u6D3B\\u8DC3\\u5EA6\\\" : \\\"\\u79EF\\u5206\\\";\\n        if (res.money) {\\n          emit(\\\"update-list\\\");\\n          mitt.emit(\\\"updateCoins\\\", true);\\n          showToast({\\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}${suffix}`,\\n            icon: success,\\n            className: \\\"toast-task\\\"\\n          });\\n        }\\n        window.log(\\\"\\u5B8C\\u6210\\u4EFB\\u52A1\\u4FE1\\u606F\\\", res);\\n      } catch (error) {\\n        console.error(error);\\n      }\\n    };\\n    const handleBtnClick = (item) => {\\n      if (props.type === DAILYTASK) {\\n        if (item.flag)\\n          return;\\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\\\"coin_name\\\")).replace(/GDpay/gi, sessionStorage.getItem(\\\"pay_name\\\"));\\n        btnDialog.show = true;\\n      } else {\\n        if (item.active === 3)\\n          return;\\n        if (item.active === 1) {\\n          doTask(item, \\\"all\\\");\\n          return;\\n        }\\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\\\"coin_name\\\")).replace(/GDpay/gi, sessionStorage.getItem(\\\"pay_name\\\"));\\n        btnDialog.show = true;\\n      }\\n    };\\n    const closeDialog = () => {\\n      btnDialog.show = false;\\n    };\\n    const subffix = computed(() => {\\n      return (item) => {\\n        if (props.type === DAILYTASK)\\n          return item.danwei;\\n        return item.task_idd.includes(\\\"sign\\\") ? \\\"\\u6B21\\\" : \\\"\\u5143\\\";\\n      };\\n    });\\n    onMounted(() => {\\n    });\\n    return (_ctx, _cache) => {\\n      const _component_van_dialog = _resolveComponent(\\\"van-dialog\\\");\\n      return _openBlock(), _createElementBlock(\\\"div\\\", _hoisted_1, [\\n        (_openBlock(true), _createElementBlock(\\n          _Fragment,\\n          null,\\n          _renderList(_ctx.list, (item, index) => {\\n            return _openBlock(), _createElementBlock(\\n              \\\"div\\\",\\n              {\\n                key: index,\\n                class: _normalizeClass([\\\"flex items-center justify-between\\\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \\\"flag\\\" : \\\"active\\\")])\\n              },\\n              [\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  _hoisted_2,\\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \\\"activity_name\\\" : \\\"task_name\\\")),\\n                  1\\n                  /* TEXT */\\n                ),\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  _hoisted_3,\\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \\\"doneNum\\\" : \\\"nowmoney\\\")) + \\\"/\\\" + _toDisplayString(handleShowItem(item, \\\"target\\\")) + _toDisplayString(subffix.value(item)),\\n                  1\\n                  /* TEXT */\\n                ),\\n                _createElementVNode(\\n                  \\\"div\\\",\\n                  _hoisted_4,\\n                  \\\" +\\\" + _toDisplayString(handleShowItem(item, \\\"reward\\\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \\\"\\u6D3B\\u8DC3\\u5EA6\\\" : \\\"\\u79EF\\u5206\\\"),\\n                  1\\n                  /* TEXT */\\n                ),\\n                _createElementVNode(\\\"div\\\", {\\n                  class: \\\"item-fields item-status\\\",\\n                  onClick: ($event) => handleBtnClick(item)\\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \\\"flag\\\" : \\\"active\\\", true)), 9, _hoisted_5)\\n              ],\\n              2\\n              /* CLASS */\\n            );\\n          }),\\n          128\\n          /* KEYED_FRAGMENT */\\n        )),\\n        _createVNode(_component_van_dialog, {\\n          show: btnDialog.show,\\n          \\\"onUpdate:show\\\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\\n          theme: \\\"round-button\\\",\\n          class: \\\"task-dialog\\\"\\n        }, {\\n          default: _withCtx(() => [\\n            _createElementVNode(\\\"i\\\", {\\n              class: \\\"close-white block icon-pos\\\",\\n              onClick: closeDialog\\n            }),\\n            _hoisted_6,\\n            _createElementVNode(\\\"div\\\", _hoisted_7, [\\n              _createElementVNode(\\n                \\\"p\\\",\\n                null,\\n                _toDisplayString(btnDialog.content),\\n                1\\n                /* TEXT */\\n              )\\n            ])\\n          ]),\\n          _: 1\\n          /* STABLE */\\n        }, 8, [\\\"show\\\"])\\n      ]);\\n    };\\n  }\\n});\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:define",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699772468,
      "end": 1714699772468,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699772468,
      "end": 1714699772469,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */import { Dialog as __unplugin_components_0 } from 'vant/es';import 'vant/es/dialog/style/index';\n\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" };\nconst _hoisted_2 = { class: \"item-fields item-name\" };\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" };\nconst _hoisted_4 = { class: \"item-fields item-award-value\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"title\" },\n  \"\\u63D0\\u793A\",\n  -1\n  /* HOISTED */\n);\nconst _hoisted_7 = { class: \"content\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport success from \"@/assets/images/common/success.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, reactive } from \"vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Task\",\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: [\"update-list\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const handleShowDayTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"flag\":\n          if (isText) {\n            return item.flag ? \"\\u5DF2\\u5B8C\\u6210\" : \"\\u53BB\\u5B8C\\u6210\";\n          } else {\n            return item.flag ? \"item-completed\" : \"item-go-do\";\n          }\n        case \"activity_name\":\n          return item.activity_name;\n        case \"doneNum\":\n          return item.doneNum;\n        case \"target\":\n          return item.target;\n        case \"reward\":\n          return item.reward;\n        default:\n          return \"\";\n      }\n    };\n    const showStatusText = (flag) => {\n      if (flag === 1)\n        return \"\\u53EF\\u9886\\u53D6\";\n      else if (flag === 2)\n        return \"\\u53BB\\u5B8C\\u6210\";\n      else\n        return \"\\u5DF2\\u5B8C\\u6210\";\n    };\n    const showStatus = (flag) => {\n      if (flag === 1)\n        return \"item-can-do\";\n      else if (flag === 2)\n        return \"item-go-do\";\n      else\n        return \"item-completed\";\n    };\n    const handleShowAllTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"active\":\n          if (isText) {\n            return showStatusText(item.active);\n          } else {\n            return showStatus(item.active);\n          }\n        case \"task_name\":\n          return item.task_name;\n        case \"nowmoney\":\n          return item.nowmoney;\n        case \"target\":\n          return item.info.target;\n        case \"reward\":\n          return item.info.reward;\n        default:\n          return \"\";\n      }\n    };\n    const handleShowItem = (item, propsKey, isText = false) => {\n      if (props.type === 1) {\n        return handleShowDayTask(\n          item,\n          propsKey,\n          isText\n        );\n      } else {\n        return handleShowAllTask(item, propsKey, isText);\n      }\n    };\n    const btnDialog = reactive({\n      show: false,\n      content: \"\"\n    });\n    const doTask = async (item, type) => {\n      try {\n        const res = await userDoTaskApi({\n          idd: item.task_idd,\n          levelid: item.info.id\n        });\n        const suffix = type === \"day\" ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\";\n        if (res.money) {\n          emit(\"update-list\");\n          mitt.emit(\"updateCoins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}${suffix}`,\n            icon: success,\n            className: \"toast-task\"\n          });\n        }\n        window.log(\"\\u5B8C\\u6210\\u4EFB\\u52A1\\u4FE1\\u606F\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const handleBtnClick = (item) => {\n      if (props.type === DAILYTASK) {\n        if (item.flag)\n          return;\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      } else {\n        if (item.active === 3)\n          return;\n        if (item.active === 1) {\n          doTask(item, \"all\");\n          return;\n        }\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      }\n    };\n    const closeDialog = () => {\n      btnDialog.show = false;\n    };\n    const subffix = computed(() => {\n      return (item) => {\n        if (props.type === DAILYTASK)\n          return item.danwei;\n        return item.task_idd.includes(\"sign\") ? \"\\u6B21\" : \"\\u5143\";\n      };\n    });\n    onMounted(() => {\n    });\n    return (_ctx, _cache) => {\n      const _component_van_dialog = __unplugin_components_0;\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(_ctx.list, (item, index) => {\n            return _openBlock(), _createElementBlock(\n              \"div\",\n              {\n                key: index,\n                class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\")])\n              },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_2,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"activity_name\" : \"task_name\")),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"doneNum\" : \"nowmoney\")) + \"/\" + _toDisplayString(handleShowItem(item, \"target\")) + _toDisplayString(subffix.value(item)),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_4,\n                  \" +\" + _toDisplayString(handleShowItem(item, \"reward\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\"),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\"div\", {\n                  class: \"item-fields item-status\",\n                  onClick: ($event) => handleBtnClick(item)\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\", true)), 9, _hoisted_5)\n              ],\n              2\n              /* CLASS */\n            );\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        )),\n        _createVNode(_component_van_dialog, {\n          show: btnDialog.show,\n          \"onUpdate:show\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\n          theme: \"round-button\",\n          class: \"task-dialog\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"i\", {\n              class: \"close-white block icon-pos\",\n              onClick: closeDialog\n            }),\n            _hoisted_6,\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\n                \"p\",\n                null,\n                _toDisplayString(btnDialog.content),\n                1\n                /* TEXT */\n              )\n            ])\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"show\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1714699772469,
      "end": 1714699772469,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/afeng/Desktop/work/gdpayh5-web/src/components/Point/Task.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "\"use strict\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"task-list-container flex flex-col\" };\nconst _hoisted_2 = { class: \"item-fields item-name\" };\nconst _hoisted_3 = { class: \"item-fields item-curr-value\" };\nconst _hoisted_4 = { class: \"item-fields item-award-value\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /* @__PURE__ */ _createElementVNode(\n  \"div\",\n  { class: \"title\" },\n  \"\\u63D0\\u793A\",\n  -1\n  /* HOISTED */\n);\nconst _hoisted_7 = { class: \"content\" };\nimport { userDoTaskApi } from \"@/apis/taskActivity\";\nimport success from \"@/assets/images/common/success.png\";\nimport mitt from \"@/utils/mitt\";\nimport { showToast } from \"vant\";\nimport { computed, onMounted, reactive } from \"vue\";\nimport { DAILYTASK } from \"./tools\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Task\",\n  props: {\n    list: { type: Array, required: true, default: () => [] },\n    type: { type: Number, required: true, default: 1 }\n  },\n  emits: [\"update-list\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const handleShowDayTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"flag\":\n          if (isText) {\n            return item.flag ? \"\\u5DF2\\u5B8C\\u6210\" : \"\\u53BB\\u5B8C\\u6210\";\n          } else {\n            return item.flag ? \"item-completed\" : \"item-go-do\";\n          }\n        case \"activity_name\":\n          return item.activity_name;\n        case \"doneNum\":\n          return item.doneNum;\n        case \"target\":\n          return item.target;\n        case \"reward\":\n          return item.reward;\n        default:\n          return \"\";\n      }\n    };\n    const showStatusText = (flag) => {\n      if (flag === 1)\n        return \"\\u53EF\\u9886\\u53D6\";\n      else if (flag === 2)\n        return \"\\u53BB\\u5B8C\\u6210\";\n      else\n        return \"\\u5DF2\\u5B8C\\u6210\";\n    };\n    const showStatus = (flag) => {\n      if (flag === 1)\n        return \"item-can-do\";\n      else if (flag === 2)\n        return \"item-go-do\";\n      else\n        return \"item-completed\";\n    };\n    const handleShowAllTask = (item, propsKey, isText) => {\n      switch (propsKey) {\n        case \"active\":\n          if (isText) {\n            return showStatusText(item.active);\n          } else {\n            return showStatus(item.active);\n          }\n        case \"task_name\":\n          return item.task_name;\n        case \"nowmoney\":\n          return item.nowmoney;\n        case \"target\":\n          return item.info.target;\n        case \"reward\":\n          return item.info.reward;\n        default:\n          return \"\";\n      }\n    };\n    const handleShowItem = (item, propsKey, isText = false) => {\n      if (props.type === 1) {\n        return handleShowDayTask(\n          item,\n          propsKey,\n          isText\n        );\n      } else {\n        return handleShowAllTask(item, propsKey, isText);\n      }\n    };\n    const btnDialog = reactive({\n      show: false,\n      content: \"\"\n    });\n    const doTask = async (item, type) => {\n      try {\n        const res = await userDoTaskApi({\n          idd: item.task_idd,\n          levelid: item.info.id\n        });\n        const suffix = type === \"day\" ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\";\n        if (res.money) {\n          emit(\"update-list\");\n          mitt.emit(\"updateCoins\", true);\n          showToast({\n            message: `\\u9886\\u53D6\\u6210\\u529F\\uFF0C+${res.money}${suffix}`,\n            icon: success,\n            className: \"toast-task\"\n          });\n        }\n        window.log(\"\\u5B8C\\u6210\\u4EFB\\u52A1\\u4FE1\\u606F\", res);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const handleBtnClick = (item) => {\n      if (props.type === DAILYTASK) {\n        if (item.flag)\n          return;\n        btnDialog.content = item.tofinish_action.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      } else {\n        if (item.active === 3)\n          return;\n        if (item.active === 1) {\n          doTask(item, \"all\");\n          return;\n        }\n        btnDialog.content = item.task_desc.replace(/GDB/gi, sessionStorage.getItem(\"coin_name\")).replace(/GDpay/gi, sessionStorage.getItem(\"pay_name\"));\n        btnDialog.show = true;\n      }\n    };\n    const closeDialog = () => {\n      btnDialog.show = false;\n    };\n    const subffix = computed(() => {\n      return (item) => {\n        if (props.type === DAILYTASK)\n          return item.danwei;\n        return item.task_idd.includes(\"sign\") ? \"\\u6B21\" : \"\\u5143\";\n      };\n    });\n    onMounted(() => {\n    });\n    return (_ctx, _cache) => {\n      const _component_van_dialog = _resolveComponent(\"van-dialog\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(_ctx.list, (item, index) => {\n            return _openBlock(), _createElementBlock(\n              \"div\",\n              {\n                key: index,\n                class: _normalizeClass([\"flex items-center justify-between\", handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\")])\n              },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_2,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"activity_name\" : \"task_name\")),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"doneNum\" : \"nowmoney\")) + \"/\" + _toDisplayString(handleShowItem(item, \"target\")) + _toDisplayString(subffix.value(item)),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_4,\n                  \" +\" + _toDisplayString(handleShowItem(item, \"reward\")) + _toDisplayString(_ctx.type === _unref(DAILYTASK) ? \"\\u6D3B\\u8DC3\\u5EA6\" : \"\\u79EF\\u5206\"),\n                  1\n                  /* TEXT */\n                ),\n                _createElementVNode(\"div\", {\n                  class: \"item-fields item-status\",\n                  onClick: ($event) => handleBtnClick(item)\n                }, _toDisplayString(handleShowItem(item, _ctx.type === _unref(DAILYTASK) ? \"flag\" : \"active\", true)), 9, _hoisted_5)\n              ],\n              2\n              /* CLASS */\n            );\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        )),\n        _createVNode(_component_van_dialog, {\n          show: btnDialog.show,\n          \"onUpdate:show\": _cache[0] || (_cache[0] = ($event) => btnDialog.show = $event),\n          theme: \"round-button\",\n          class: \"task-dialog\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"i\", {\n              class: \"close-white block icon-pos\",\n              onClick: closeDialog\n            }),\n            _hoisted_6,\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\n                \"p\",\n                null,\n                _toDisplayString(btnDialog.content),\n                1\n                /* TEXT */\n              )\n            ])\n          ]),\n          _: 1\n          /* STABLE */\n        }, 8, [\"show\"])\n      ]);\n    };\n  }\n});\n"
        ],
        "names": [],
        "mappingsoCAAoC,uBAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;"
      }
    },
    {
      "name": "vite:style-import",
      "start": 1714699772469,
      "end": 1714699772469,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699772469,
      "end": 1714699772470,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699772470,
      "end": 1714699772470,
      "order": "normal"
    }
  ]
}
