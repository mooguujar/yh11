{
  "resolvedId": "/Users/afeng/Desktop/work/gdpayh5-web/node_modules/.pnpm/html5-qrcode@2.3.8/node_modules/html5-qrcode/esm/utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var VideoConstraintsUtil = (function () {\n    function VideoConstraintsUtil() {\n    }\n    VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n        if (typeof videoConstraints !== \"object\") {\n            var typeofVideoConstraints = typeof videoConstraints;\n            logger.logError(\"videoConstraints should be of type object, the \"\n                + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n            return false;\n        }\n        var bannedKeys = [\n            \"autoGainControl\",\n            \"channelCount\",\n            \"echoCancellation\",\n            \"latency\",\n            \"noiseSuppression\",\n            \"sampleRate\",\n            \"sampleSize\",\n            \"volume\"\n        ];\n        var bannedkeysSet = new Set(bannedKeys);\n        var keysInVideoConstraints = Object.keys(videoConstraints);\n        for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n            var key = keysInVideoConstraints_1[_i];\n            if (bannedkeysSet.has(key)) {\n                logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n                return false;\n            }\n        }\n        return true;\n    };\n    return VideoConstraintsUtil;\n}());\nexport { VideoConstraintsUtil };\n//# sourceMappingURL=utils.js.map",
      "start": 1714699771226,
      "end": 1714699771243,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite-plugin-vconsole",
      "result": "var VideoConstraintsUtil = (function () {\n    function VideoConstraintsUtil() {\n    }\n    VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n        if (typeof videoConstraints !== \"object\") {\n            var typeofVideoConstraints = typeof videoConstraints;\n            logger.logError(\"videoConstraints should be of type object, the \"\n                + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n            return false;\n        }\n        var bannedKeys = [\n            \"autoGainControl\",\n            \"channelCount\",\n            \"echoCancellation\",\n            \"latency\",\n            \"noiseSuppression\",\n            \"sampleRate\",\n            \"sampleSize\",\n            \"volume\"\n        ];\n        var bannedkeysSet = new Set(bannedKeys);\n        var keysInVideoConstraints = Object.keys(videoConstraints);\n        for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n            var key = keysInVideoConstraints_1[_i];\n            if (bannedkeysSet.has(key)) {\n                logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n                return false;\n            }\n        }\n        return true;\n    };\n    return VideoConstraintsUtil;\n}());\nexport { VideoConstraintsUtil };\n//# sourceMappingURL=utils.js.map",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "esbuild",
      "start": 1714699771243,
      "end": 1714699771243,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "post"
    },
    {
      "name": "vite:style-import",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714699771244,
      "end": 1714699771244,
      "order": "normal"
    }
  ]
}
